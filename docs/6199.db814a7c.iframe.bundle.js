(self.webpackChunkcomponents_angular=self.webpackChunkcomponents_angular||[]).push([[6199],{"./library/AngularEcharts/components/chart.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  height: 100%;\n  width: 100%;\n  display: block;\n}\n\n.chart-item {\n  height: 100%;\n  width: 100%;\n  min-height: 120px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./library/AngularEcharts/components/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var ChartType;__webpack_require__.d(__webpack_exports__,{X4:()=>AreaChartComponent,Xr:()=>BarChartComponent,NB:()=>ChartType,$q:()=>CombinationChartComponent,ig:()=>DonutChartComponent,Il:()=>LineChartComponent,km:()=>PieChartComponent,g:()=>ScatterChartComponent,rJ:()=>StackedChartComponent}),function(ChartType){ChartType.LINE="line",ChartType.PIE="pie"}(ChartType||(ChartType={}));var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),chartngResource=__webpack_require__("./library/AngularEcharts/components/chart.scss?ngResource"),chartngResource_default=__webpack_require__.n(chartngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),echarts=__webpack_require__("./node_modules/echarts/index.js");let ChartAbstract=class ChartAbstract{elementRef;option={...BASE_OPTION};myChart;chartId="";constructor(elementRef){this.elementRef=elementRef}ngAfterViewInit(){setTimeout((()=>{this.initChart()}),100),window.addEventListener("resize",(e=>{this.myChart&&this.myChart.resize()}))}initChart(){const element=this.elementRef.nativeElement.querySelector(".chart-item")||this.elementRef.nativeElement.firstElementChild||this.elementRef.nativeElement;if(element&&!this.myChart)try{this.myChart=echarts.Ts(element),this.option&&this.option.series&&Array.isArray(this.option.series)&&this.option.series.length>0&&this.myChart.setOption(this.option)}catch(error){console.error("Failed to initialize ECharts:",error)}}static ctorParameters=()=>[{type:core.ElementRef}]};ChartAbstract=(0,tslib_es6.Cg)([(0,core.Directive)()],ChartAbstract);const BASE_OPTION={grid:{},legend:{show:!1}};let LineChartComponent=class LineChartComponent extends ChartAbstract{chartData;option={...chart_line_BASE_OPTION};chartId="echarts-line";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.chartData&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const labels=this.chartData.data.map((d=>d.label)),values=this.chartData.data.map((d=>d.value));this.option.xAxis={...this.option.xAxis,data:labels},this.option.series=[{type:"line",data:values,smooth:!0}],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}]}};LineChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-line",template:'<div id="echarts-line" class="chart-item line"></div>',styles:[chartngResource_default()]})],LineChartComponent);const chart_line_BASE_OPTION={grid:{},legend:{show:!1},tooltip:{trigger:"axis",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12}},xAxis:{type:"category",data:[]},yAxis:{type:"value"},series:[]};let PieChartComponent=class PieChartComponent extends ChartAbstract{chartData;option={...chart_pie_BASE_OPTION};chartId="echarts-pie";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.chartData&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const data=this.chartData.data.map((d=>({name:d.label,value:d.value})));this.option.series=[{type:"pie",data,radius:"50%",center:["50%","50%"]}],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}]}};PieChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-pie",template:'<div id="echarts-pie" class="chart-item pie"></div>',styles:[chartngResource_default()]})],PieChartComponent);const chart_pie_BASE_OPTION={tooltip:{trigger:"item",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12},formatter:"{a} <br/>{b}: {c} ({d}%)"},legend:{orient:"vertical",left:"left",show:!0,textStyle:{color:"#333",fontSize:12}},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let DonutChartComponent=class DonutChartComponent extends ChartAbstract{chartData;innerRadius="60%";outerRadius="80%";option={...chart_donut_BASE_OPTION};chartId="echarts-donut";constructor(elementRef){super(elementRef)}ngOnChanges(changes){(changes.chartData||changes.innerRadius||changes.outerRadius)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const data=this.chartData.data.map((d=>({name:d.label,value:d.value})));this.option.series=[{type:"pie",data,radius:[this.innerRadius,this.outerRadius],center:["50%","50%"],label:{show:!0,position:"outside",formatter:"{b}: {c} ({d}%)"},labelLine:{show:!0,length:15,length2:10}}],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],innerRadius:[{type:core.Input}],outerRadius:[{type:core.Input}]}};DonutChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-donut",template:'<div id="echarts-donut" class="chart-item donut"></div>',styles:[chartngResource_default()]})],DonutChartComponent);const chart_donut_BASE_OPTION={tooltip:{trigger:"item",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12},formatter:"{a} <br/>{b}: {c} ({d}%)"},legend:{orient:"vertical",left:"left",show:!0,textStyle:{color:"#333",fontSize:12}},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let BarChartComponent=class BarChartComponent extends ChartAbstract{chartData;horizontal=!1;stacked=!1;customChartId;option={...chart_bar_BASE_OPTION};chartId=this.customChartId||"echarts-bar";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.customChartId&&(this.chartId=this.customChartId||"echarts-bar"),(changes.chartData||changes.horizontal||changes.stacked)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const labels=this.chartData.data.map((d=>d.label)),values=this.chartData.data.map((d=>d.value));this.horizontal?(this.option.yAxis={...this.option.yAxis,data:labels},this.option.xAxis={type:"value"},this.option.series=[{type:"bar",data:values,barWidth:"60%"}]):(this.option.xAxis={...this.option.xAxis,data:labels},this.option.yAxis={type:"value"},this.option.series=[{type:"bar",data:values,barWidth:"60%"}]),this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],horizontal:[{type:core.Input}],stacked:[{type:core.Input}],customChartId:[{type:core.Input}]}};BarChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-bar",template:'<div [id]="chartId" class="chart-item bar"></div>',styles:[chartngResource_default()]})],BarChartComponent);const chart_bar_BASE_OPTION={tooltip:{trigger:"axis",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"category",data:[],axisLabel:{rotate:0}},yAxis:{type:"value"},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let AreaChartComponent=class AreaChartComponent extends ChartAbstract{chartData;smooth=!0;stack=!1;customChartId;option={...chart_area_BASE_OPTION};chartId=this.customChartId||"echarts-area";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.customChartId&&(this.chartId=this.customChartId||"echarts-area"),(changes.chartData||changes.smooth||changes.stack)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const labels=this.chartData.data.map((d=>d.label)),values=this.chartData.data.map((d=>d.value));this.option.xAxis={...this.option.xAxis,data:labels},this.option.series=[{type:"line",data:values,smooth:this.smooth,areaStyle:{opacity:.6},lineStyle:{width:2},itemStyle:{borderWidth:2}}],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],smooth:[{type:core.Input}],stack:[{type:core.Input}],customChartId:[{type:core.Input}]}};AreaChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-area",template:'<div [id]="chartId" class="chart-item area"></div>',styles:[chartngResource_default()]})],AreaChartComponent);const chart_area_BASE_OPTION={tooltip:{trigger:"axis",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"category",data:[],boundaryGap:!1,axisLabel:{rotate:0}},yAxis:{type:"value"},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let ScatterChartComponent=class ScatterChartComponent extends ChartAbstract{chartData;symbolSize=10;showEffect=!1;customChartId;option={...chart_scatter_BASE_OPTION};chartId=this.customChartId||"echarts-scatter";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.customChartId&&(this.chartId=this.customChartId||"echarts-scatter"),(changes.chartData||changes.symbolSize||changes.showEffect)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const data=this.chartData.data.map(((d,index)=>[index,d.value]));this.option.xAxis={...this.option.xAxis,data:this.chartData.data.map((d=>d.label)),type:"category"},this.option.yAxis={type:"value"};const seriesConfig={type:"scatter",data,symbolSize:this.symbolSize,itemStyle:{opacity:.8},emphasis:{itemStyle:{opacity:1,shadowBlur:10,shadowColor:"rgba(0,0,0,0.3)"}}};this.showEffect&&(seriesConfig.animation=!0,seriesConfig.animationDuration=1e3,seriesConfig.animationEasing="bounceOut"),this.option.series=[seriesConfig],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],symbolSize:[{type:core.Input}],showEffect:[{type:core.Input}],customChartId:[{type:core.Input}]}};ScatterChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-scatter",template:'<div [id]="chartId" class="chart-item scatter"></div>',styles:[chartngResource_default()]})],ScatterChartComponent);const chart_scatter_BASE_OPTION={tooltip:{trigger:"item",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12},formatter:function(params){if(params.data){params.data[0];const value=params.data[1];return`${params.seriesName}<br/>${params.name}: ${value}`}return params.name}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"category",data:[],axisLabel:{rotate:0}},yAxis:{type:"value"},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let CombinationChartComponent=class CombinationChartComponent extends ChartAbstract{chartData;lineData;barData;customChartId;option={...chart_combination_BASE_OPTION};chartId=this.customChartId||"echarts-combination";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.customChartId&&(this.chartId=this.customChartId||"echarts-combination"),(changes.chartData||changes.lineData||changes.barData)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const labels=this.chartData.data.map((d=>d.label)),barValues=this.barData?this.barData.data.map((d=>d.value)):this.chartData.data.map((d=>d.value)),lineValues=this.lineData?this.lineData.data.map((d=>d.value)):this.chartData.data.map(((d,index)=>Math.round(barValues[index]*(.8+.4*Math.random()))));this.option.xAxis={...this.option.xAxis,data:labels},this.option.series=[{name:"柱状图",type:"bar",data:barValues,barWidth:"60%",itemStyle:{color:"#5470c6"}},{name:"折线图",type:"line",data:lineValues,smooth:!0,yAxisIndex:1,itemStyle:{color:"#ee6666"},lineStyle:{width:3}}],this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],lineData:[{type:core.Input}],barData:[{type:core.Input}],customChartId:[{type:core.Input}]}};CombinationChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-combination",template:'<div [id]="chartId" class="chart-item combination"></div>',styles:[chartngResource_default()]})],CombinationChartComponent);const chart_combination_BASE_OPTION={tooltip:{trigger:"axis",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12}},legend:{data:["柱状图","折线图"],top:10},grid:{left:"3%",right:"4%",bottom:"3%",top:"15%",containLabel:!0},xAxis:{type:"category",data:[],axisLabel:{rotate:0}},yAxis:[{type:"value",name:"柱状图",position:"left"},{type:"value",name:"折线图",position:"right"}],series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]};let StackedChartComponent=class StackedChartComponent extends ChartAbstract{chartData;stackData;horizontal=!1;customChartId;option={...chart_stacked_BASE_OPTION};chartId=this.customChartId||"echarts-stacked";constructor(elementRef){super(elementRef)}ngOnChanges(changes){changes.customChartId&&(this.chartId=this.customChartId||"echarts-stacked"),(changes.chartData||changes.stackData||changes.horizontal)&&this.updateChart()}updateChart(){if(!this.chartData||!this.chartData.data)return;const labels=this.chartData.data.map((d=>d.label));let seriesData=[];if(this.stackData&&this.stackData.length>0)seriesData=this.stackData.map(((stackItem,index)=>({name:stackItem.label,type:"bar",stack:"total",data:stackItem.data.map((d=>d.value)),itemStyle:{color:this.option.color[index%this.option.color.length]}})));else{const baseValues=this.chartData.data.map((d=>d.value));seriesData=[{name:"基础数据",type:"bar",stack:"total",data:baseValues.map((v=>Math.round(.4*v))),itemStyle:{color:"#5470c6"}},{name:"增长数据",type:"bar",stack:"total",data:baseValues.map((v=>Math.round(.3*v))),itemStyle:{color:"#91cc75"}},{name:"额外数据",type:"bar",stack:"total",data:baseValues.map((v=>Math.round(.3*v))),itemStyle:{color:"#fac858"}}]}this.horizontal?(this.option.yAxis={...this.option.yAxis,data:labels},this.option.xAxis={type:"value"},seriesData.forEach((series=>{series.type="bar",series.stack="total"}))):(this.option.xAxis={...this.option.xAxis,data:labels},this.option.yAxis={type:"value"},seriesData.forEach((series=>{series.type="bar",series.stack="total"}))),this.option.series=seriesData,this.myChart&&this.myChart.setOption(this.option)}initChart(){super.initChart(),this.chartData&&this.chartData.data&&setTimeout((()=>{this.updateChart()}),50)}static ctorParameters=()=>[{type:core.ElementRef}];static propDecorators={chartData:[{type:core.Input}],stackData:[{type:core.Input}],horizontal:[{type:core.Input}],customChartId:[{type:core.Input}]}};StackedChartComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"chart-stacked",template:'<div [id]="chartId" class="chart-item stacked"></div>',styles:[chartngResource_default()]})],StackedChartComponent);const chart_stacked_BASE_OPTION={tooltip:{trigger:"axis",confine:!0,backgroundColor:"rgba(255, 255, 255, 1)",borderWidth:1,borderColor:"#ccc",padding:10,textStyle:{color:"#000",fontSize:12}},legend:{top:10},grid:{left:"3%",right:"4%",bottom:"3%",top:"15%",containLabel:!0},xAxis:{type:"category",data:[],axisLabel:{rotate:0}},yAxis:{type:"value"},series:[],color:["#5470c6","#91cc75","#fac858","#ee6666","#73c0de","#3ba272","#fc8452","#9a60b4","#ea7ccc"]}}}]);