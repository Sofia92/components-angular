(self.webpackChunkcomponents_angular=self.webpackChunkcomponents_angular||[]).push([[792],{"./.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"FileSizePipe","id":"pipe-FileSizePipe-4b936999d8fe21f0a7739752ed584eccc9d16d5c0993a1b3a83d1098008c481e1cb7779c1027ada14ee603e629743380f7c535b288ea7482f83d3417538ccb22","file":"src/pipes/file-size.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"size","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"standalone":false,"ngname":"fileSize","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\nconst kb = 1024;\\nconst mb = 1024 * kb;\\nconst gb = 1024 * mb;\\n\\n@Pipe({ name: \'fileSize\' })\\nexport class FileSizePipe implements PipeTransform {\\n\\n  public transform(size: number): string {\\n    if (!size) {\\n      return `0K`;\\n    }\\n    if (size < kb) {\\n      return `${size}B`;\\n    }\\n    if (size >= kb && size < mb) {\\n      return `${(size / kb).toFixed(2)}K`;\\n    }\\n    if (size >= mb && size <= gb) {\\n      return `${(size / mb).toFixed(2)}M`;\\n    }\\n    if (size >= gb) {\\n      return `${(size / gb).toFixed(2)}G`;\\n    }\\n    return \'\';\\n  }\\n\\n}\\n"},{"name":"FormatNumberPipe","id":"pipe-FormatNumberPipe-c9243a7e2b87514da0d79e46504bea45fc4df0b46264e5f3058a3f3a58307902aaf17f932a1543b6131c47d1a484bef001cf2abf9ab400093bdf3ea98340b302","file":"src/pipes/format-number.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"formatWithDecimals","args":[{"name":"num","type":"number","deprecated":false,"deprecationMessage":""},{"name":"decimals","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"num","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"decimals","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"transform","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""},{"name":"decimals","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1"}],"optional":false,"returnType":"string","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"decimals","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1","tagName":{"text":"param"}}]}],"standalone":false,"ngname":"formatNumber","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({ name: \'formatNumber\' })\\nexport class FormatNumberPipe implements PipeTransform {\\n  transform(value: number, decimals: number = 1): string {\\n    if (value === null || value === undefined) return \'0\';\\n\\n    if (value >= 1000000000) {\\n      const num = value / 1000000000;\\n      return this.formatWithDecimals(num, decimals) + \'B\';\\n    }\\n\\n    if (value >= 1000000) {\\n      const num = value / 1000000;\\n      return this.formatWithDecimals(num, decimals) + \'M\';\\n    }\\n\\n    if (value >= 1000) {\\n      const num = value / 1000;\\n      return this.formatWithDecimals(num, decimals) + \'K\';\\n    }\\n\\n    return value.toString();\\n  }\\n\\n  private formatWithDecimals(num: number, decimals: number): string {\\n    const rounded = Math.round(num * Math.pow(10, decimals)) / Math.pow(10, decimals);\\n    return rounded % 1 === 0 ? rounded.toString() : rounded.toFixed(decimals);\\n  }\\n} "},{"name":"TranslatePipe","id":"pipe-TranslatePipe-04c398da7f521a7232e306107f10421f8873121c6f434abe1650bb13d487666e8dc0822ed0b5380f22b67479ae5a9cf1546794c9af3210ad6a40cd4cdb49489d","file":"src/pipes/translate.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"lastResult","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"path","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"value","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[123]}],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"optional":false,"returnType":"string","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"standalone":false,"pure":false,"ngname":"translate","sourceCode":"import { Pipe, PipeTransform } from \\"@angular/core\\";\\nimport { NzI18nService } from \\"ng-zorro-antd/i18n\\";\\n\\n@Pipe({\\n    name: \'translate\',\\n    pure: false\\n})\\nexport class TranslatePipe implements PipeTransform {\\n    private value: any;\\n    private path: string;\\n    private lastResult: string;\\n\\n    constructor(private i18n: NzI18nService) {\\n        this.i18n.localeChange.subscribe(() => {\\n            if (this.path?.trim()) {\\n                this.lastResult = this.i18n.translate(this.path);\\n            }\\n        });\\n    }\\n\\n    transform(value: any, ...args: any[]): string {\\n        this.path = args[0];\\n        this.value = value;\\n\\n        // 如果提供了翻译路径，直接使用翻译路径进行翻译\\n        if (this.path?.trim()) {\\n            this.lastResult = this.i18n.translate(this.path);\\n            return this.lastResult;\\n        }\\n\\n        // 如果没有提供翻译路径，但提供了值，尝试直接翻译该值\\n        if (value?.trim()) {\\n            this.lastResult = this.i18n.translate(value);\\n            return this.lastResult;\\n        }\\n\\n        // 如果都没有，返回空字符串\\n        return \'\';\\n    }\\n} "}],"interfaces":[{"name":"CanComponentDeactivate","id":"interface-CanComponentDeactivate-e9ffab0192d95449f7463f16f6ef5c9db328730fb82a8fafb9ddfa45ad0e777a2ebb5a84a4bc748d335fdada529691fff77ff74e1ffdb3bbd585683ed026c2fa","file":"src/services/canDeactive.guard.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CanDeactivateFn } from \'@angular/router\';\\nimport { Observable } from \'rxjs\';\\n\\n\\nexport interface CanComponentDeactivate {\\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\\n}\\n\\nexport const CanComponentDeactivateGuard: CanDeactivateFn<CanComponentDeactivate> = (\\n  component: CanComponentDeactivate\\n) => {\\n  return component.canDeactivate ? component.canDeactivate() : true;\\n}","properties":[{"name":"canDeactivate","deprecated":false,"deprecationMessage":"","type":"function","indexKey":"","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ChartData","id":"interface-ChartData-ae4dd3619643f7e37a7760363c9a86b1321bc9e6fe6a4da32c4fe71a89ce3cd4deb31596917022d9dff3bc6f786371990c963e02e7cb4ce922b1cd050d4edfd7","file":"library/AngularEcharts/components/typings.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface ChartData {\\n  label: string;\\n  type: ChartType;\\n  data: ChartDataItem[];\\n}\\n\\nexport interface ChartDataItem {\\n  label: string;\\n  value: number;\\n  unit?: string;\\n}\\n\\nexport enum ChartType {\\n  LINE = \'line\',\\n  PIE = \'pie\',\\n}\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"ChartDataItem[]","indexKey":"","optional":false,"description":"","line":4},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":2},{"name":"type","deprecated":false,"deprecationMessage":"","type":"ChartType","indexKey":"","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ChartDataItem","id":"interface-ChartDataItem-ae4dd3619643f7e37a7760363c9a86b1321bc9e6fe6a4da32c4fe71a89ce3cd4deb31596917022d9dff3bc6f786371990c963e02e7cb4ce922b1cd050d4edfd7","file":"library/AngularEcharts/components/typings.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface ChartData {\\n  label: string;\\n  type: ChartType;\\n  data: ChartDataItem[];\\n}\\n\\nexport interface ChartDataItem {\\n  label: string;\\n  value: number;\\n  unit?: string;\\n}\\n\\nexport enum ChartType {\\n  LINE = \'line\',\\n  PIE = \'pie\',\\n}\\n","properties":[{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":8},{"name":"unit","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":10},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"IAppConversation","id":"interface-IAppConversation-65eeb946dcf7d5a8afde7d3b63eec9261ebfd1382a93ca28b1a0ca338b4db97b530df8dbf25600c44865a8fb6b032f06c54d1728f5119dbd0c87fbd59a2a2fdb","file":"src/directives/event-source/typing.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export const StreamStatusIconMap = {\\n  \'default\': [\'loading\', \'status-icon loading\'],\\n  \'failed\': [\'question-circle\', \'status-icon error\'],\\n  \'succeeded\': [\'check-circle\', \'status-icon success\'],\\n  \'start\': [\'icons:node-start\', \'node-icon start\'],\\n  \'llm\': [\'icons:node-llm\', \'node-icon llm\'],\\n  \'if-else\': [\'icons:node-branch\', \'node-icon if-else\'],\\n  \'http-request\': [\'icons:node-http\', \'node-icon http-request\'],\\n  \'code\': [\'icons:script\', \'node-icon code\'],\\n  \'tool\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'iteration\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'answer\': [\'icons:node-answer\', \'node-icon answer\']\\n}\\nexport function formatSreamMeta(stream: any) {\\n  stream.status = stream.status || \'default\';\\n  const [icon, className] = StreamStatusIconMap[stream.status as keyof typeof StreamStatusIconMap];\\n  stream.status_icon = icon;\\n  stream.status_className = className;\\n\\n\\n  if (stream.node_type) {\\n    const [node_icon, node_className] = StreamStatusIconMap[stream.node_type as keyof typeof StreamStatusIconMap] || [\'\', \'\'];\\n    stream.node_icon = node_icon;\\n    stream.node_className = node_className;\\n  }\\n}\\n\\n\\nexport interface IAppConversation {\\n  id: string,\\n  name?: string,\\n  inputs?: any,\\n  status?: string,\\n  introduction?: string,\\n  created_at?: number,\\n  updated_at?: number\\n}\\n\\n\\nexport enum StreamEvent {\\n  PING = \'ping\',\\n  ERROR = \'error\',\\n  MESSAGE = \'message\',\\n  MESSAGE_END = \'message_end\',\\n  TTS_MESSAGE = \'tts_message\',\\n  TTS_MESSAGE_END = \'tts_message_end\',\\n  MESSAGE_FILE = \'message_file\',\\n  MESSAGE_REPLACE = \'message_replace\',\\n  AGENT_THOUGHT = \'agent_thought\',\\n  AGENT_MESSAGE = \'agent_message\',\\n  WORKFLOW_STARTED = \'workflow_started\',\\n  WORKFLOW_FINISHED = \'workflow_finished\',\\n  NODE_STARTED = \'node_started\',\\n  NODE_FINISHED = \'node_finished\',\\n  NODE_RETRY = \'node_retry\',\\n  PARALLEL_BRANCH_STARTED = \'parallel_branch_started\',\\n  PARALLEL_BRANCH_FINISHED = \'parallel_branch_finished\',\\n  ITERATION_STARTED = \'iteration_started\',\\n  ITERATION_NEXT = \'iteration_next\',\\n  ITERATION_COMPLETED = \'iteration_completed\',\\n  LOOP_STARTED = \'loop_started\',\\n  LOOP_NEXT = \'loop_next\',\\n  LOOP_COMPLETED = \'loop_completed\',\\n  TEXT_CHUNK = \'text_chunk\',\\n  TEXT_REPLACE = \'text_replace\',\\n  AGENT_LOG = \'agent_log\'\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":true,"description":"","line":35},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":30},{"name":"inputs","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":true,"description":"","line":32},{"name":"introduction","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":34},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":31},{"name":"status","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":33},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":true,"description":"","line":36}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"IAppIcon","id":"interface-IAppIcon-59505c6142b25678c8f63be522ce230d04f3fecc29855271afc78486a2bd5212f677249be3dcdac84cc23343d6464df61cb4885dc2b2062721982197c5426b4c","file":"src/components/assets/util/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DirectionIconNames, SuggestionIconNames, EditionIconNames, CommonIconNames } from \\"./sourceIcons\\";\\nimport { kebabCase } from \'lodash\';\\n\\nexport function ngZorroIconCategoryNames() {\\n  return {\\n    \'方向性图标\': DirectionIconNames.map(name => kebabCase(name)),\\n    \'提示建议性图标\': SuggestionIconNames.map(name => kebabCase(name)),\\n    \'编辑类图标\': EditionIconNames.map(name => kebabCase(name)),\\n    \'网站通用图标\': CommonIconNames.map(name => kebabCase(name))\\n  };\\n}\\n\\nexport interface IAppIcon {\\n  icon_type: IconType,\\n  icon: string,\\n  icon_background: string,\\n  icon_url: string,\\n}\\n\\nexport enum IconType {\\n  IMAGE = \'image\',\\n  EMOJI = \'emoji\',\\n  ICON = \'icon\'\\n}","properties":[{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":15},{"name":"icon_background","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":16},{"name":"icon_type","deprecated":false,"deprecationMessage":"","type":"IconType","indexKey":"","optional":false,"description":"","line":14},{"name":"icon_url","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"IChatContext","id":"interface-IChatContext-1ef0d4760b01c73cbb3b95e9c119304287d6150a53e539b640e129cd7ece1837334b8872b56fd9b2c01ceb09ec8b77deed9b3222dd8273016edfde969b962d18","file":"src/directives/event-source/event-source.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Directive } from \'@angular/core\';\\nimport { takeUntil } from \'rxjs\';\\nimport { DestroySubscription } from \'../destroy.subscription\';\\nimport { EventSourceService } from \'./event-source.service\';\\nimport { last, cloneDeep } from \\"lodash\\";\\nimport { formatSreamMeta, IAppConversation, StreamEvent } from \'./typing\';\\n\\nexport interface IChatContext {\\n  loading: any;\\n  messages: any[];\\n  messageMap: Map<string, any>;\\n  currentConversation?: IAppConversation;\\n}\\n@Directive()\\nexport class EventSourceDirective extends DestroySubscription {\\n  constructor(protected _eventSourceService: EventSourceService) { super() }\\n\\n  chat(request: { url: string, body: any }, chatContext: IChatContext) {\\n    chatContext.messages.push(cloneDeep(request.body));\\n    const currentMessage = last(chatContext.messages);\\n    currentMessage.answerLoading = true;\\n\\n\\n    this._eventSourceService.connectToServerSentEvents(\\n      request.url, {\\n      method: \'POST\',\\n      headers: { \'Content-Type\': \'application/json\', \'Authorization\': `Bearer token` },\\n      body: JSON.stringify(request.body),\\n      withCredentials: true\\n    }\\n    ).pipe(\\n      takeUntil(this.destroy$)\\n    ).subscribe({\\n      next: data => this._handleEvent(data, chatContext),\\n      error: error => this._handleError(error, chatContext)\\n    })\\n  }\\n\\n  private _handleEvent(message: any, chatContext: IChatContext) {\\n    const currentMessage = last(chatContext.messages);\\n    const { event, message_id, conversation_id, task_id, workflow_run_id, answer = \'\', thought, code, data } = message;\\n    if (chatContext.currentConversation) {\\n      chatContext.currentConversation.id = conversation_id;\\n    }\\n    currentMessage.id = message_id;\\n    data && formatSreamMeta(data);\\n    switch (event) {\\n      case StreamEvent.WORKFLOW_STARTED:\\n        chatContext.messageMap.set(message_id, { workflow: data, nodeMap: new Map() })\\n        break;\\n      case StreamEvent.NODE_STARTED:\\n      case StreamEvent.NODE_FINISHED:\\n        chatContext.messageMap.get(message_id).nodeMap.set(data.node_id, data);\\n        break;\\n      case StreamEvent.AGENT_THOUGHT:\\n        currentMessage.thought = thought;\\n        if (!!thought) {\\n          currentMessage.answerLoading = false;\\n        }\\n        break;\\n      case StreamEvent.AGENT_MESSAGE:\\n      case StreamEvent.MESSAGE:\\n        currentMessage.answer = currentMessage.answer + answer;\\n        this._replaceInput(currentMessage);\\n        break;\\n      case StreamEvent.WORKFLOW_FINISHED:\\n        currentMessage.answer = data.outputs?.answer || \'\';\\n        currentMessage.answerLoading = false;\\n        break;\\n      case StreamEvent.MESSAGE_END:\\n        currentMessage.answerLoading = false;\\n        break;\\n      case StreamEvent.ERROR:\\n        currentMessage.answer += code || \'抱歉，服务器异常\';\\n        currentMessage.answerLoading = false;\\n        break;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  private _handleError(error: any, chatContext: IChatContext) {\\n    const currentMessage = last(chatContext.messages);\\n    currentMessage.answer = error?.message || \'抱歉，服务器异常\';\\n    currentMessage.answerLoading = false;\\n  }\\n\\n  private _replaceInput(message: any) {\\n    if (message?.answer) {\\n      const inputs = message.inputs || {};\\n      let answer = message.answer;\\n      Object.keys(inputs).forEach(key => {\\n        const regex = new RegExp(`{{${key}}}`, \'g\');\\n        answer = answer.replace(regex, inputs[key]);\\n      });\\n      message.answer = answer;\\n    }\\n  }\\n}\\n","properties":[{"name":"currentConversation","deprecated":false,"deprecationMessage":"","type":"IAppConversation","indexKey":"","optional":true,"description":"","line":12},{"name":"loading","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"","line":9},{"name":"messageMap","deprecated":false,"deprecationMessage":"","type":"Map<string | any>","indexKey":"","optional":false,"description":"","line":11},{"name":"messages","deprecated":false,"deprecationMessage":"","type":"any[]","indexKey":"","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ICheckedStatus","id":"interface-ICheckedStatus-2535f7d0635284b28c3dc60938e88dd03bfd347c36cf3cf9661c838c9e53dab62901a5f9ecc101f19041dd436e8cba047852f1516d5626e24464ceb13aa5d3f8","file":"src/utils/list-checked.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { selectBy, Selector } from \'./object\';\\r\\n\\r\\nfunction getCheckedCount<T>(list: T[], checkedSelector: Selector<T, boolean>): number {\\r\\n  return list.reduce((acc, cur) => (selectBy(cur, checkedSelector) ? acc + 1 : acc), 0);\\r\\n}\\r\\n\\r\\nfunction _isAllChecked(checkedCount: number, totalCount: number): boolean {\\r\\n  // 若勾选数量或总数有0，不认为是全选\\r\\n  return !!(checkedCount && totalCount) && totalCount === checkedCount;\\r\\n}\\r\\n/**\\r\\n * 通用列表全勾选计算逻辑\\r\\n * @param list 列表\\r\\n * @param checkedSelector 列表项勾选状态选择器\\r\\n * @returns 列表状态是否为全勾选\\r\\n */\\r\\nexport function isAllChecked<T>(list: T[], checkedSelector: Selector<T, boolean>): boolean {\\r\\n  const checkedCount = getCheckedCount(list, checkedSelector);\\r\\n  const totalCount = list.length;\\r\\n  return _isAllChecked(checkedCount, totalCount);\\r\\n}\\r\\n\\r\\nfunction _isHalfChecked(checkedCount: number, totalCount: number): boolean {\\r\\n  // 若勾选数量或总数有0，不认为是半选\\r\\n  return !!(checkedCount && totalCount) && totalCount !== checkedCount;\\r\\n}\\r\\n/**\\r\\n * 通用列表半勾选计算逻辑\\r\\n * @param list 列表\\r\\n * @param checkedSelector 列表项勾选状态选择器\\r\\n * @returns 列表状态是否为半勾选\\r\\n */\\r\\nexport function isHalfChecked<T>(list: T[], checkedSelector: Selector<T, boolean>): boolean {\\r\\n  const checkedCount = getCheckedCount(list, checkedSelector);\\r\\n  const totalCount = list.length;\\r\\n  return _isHalfChecked(checkedCount, totalCount);\\r\\n}\\r\\n\\r\\nexport interface ICheckedStatus {\\r\\n  isAllChecked: boolean;\\r\\n  isHalfChecked: boolean;\\r\\n}\\r\\n/**\\r\\n * 通用列表勾选状态计算\\r\\n * @param list 列表\\r\\n * @param checkedSelector 列表项勾选状态选择器\\r\\n * @returns 列表勾选状态\\r\\n */\\r\\nexport function getListCheckedStatus<T>(list: T[], checkedSelector: Selector<T, boolean>): ICheckedStatus {\\r\\n  const checkedCount = getCheckedCount(list, checkedSelector);\\r\\n  const totalCount = list.length;\\r\\n  return {\\r\\n    isAllChecked: _isAllChecked(checkedCount, totalCount),\\r\\n    isHalfChecked: _isHalfChecked(checkedCount, totalCount),\\r\\n  };\\r\\n}\\r\\n","properties":[{"name":"isAllChecked","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":40},{"name":"isHalfChecked","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":41}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"IOperator","id":"interface-IOperator-f9aa5faf2d799e4c2bfa80c1bf2bcaa0541122dec1f771374334aff62d983a3927b952d610e72a82dc5fdc4e572b8f99832c7d6a4e2a370f9458a09699cbe2ed","file":"src/utils/typings.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export enum EOperator {\\n    GreaterThan = 0,\\n    LessThan = 1,\\n    EqualTo = 2,\\n    NotEqualTo = 3,\\n    Between = 4,\\n    Contains = 5,\\n    NotContains = 6\\n}\\nexport enum ECmpTypeOperatorMap {\\n    number = 1,\\n    char = 2,\\n    select_single = 3,\\n    select_multiple = 4,\\n    select_cascader = 5,\\n    date = 6,\\n}\\nexport interface IOperator {\\n    value: EOperator;\\n    label: string;\\n    dataTypes: ECmpTypeOperatorMap[];\\n    isRange: boolean;\\n}\\nexport const operators: IOperator[] = [\\n    {\\n        value: EOperator.GreaterThan, label: \'大于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.LessThan, label: \'小于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.EqualTo, label: \'等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.NotEqualTo, label: \'不等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.Between, label: \'范围\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: true\\n    }, {\\n        value: EOperator.Contains, label: \'包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    },\\n    {\\n        value: EOperator.NotContains, label: \'不包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    }\\n];\\n\\nexport interface ISelectOption {\\n    value: string;\\n    label: string;\\n    isLeaf?: boolean;\\n    children?: ISelectOption[];\\n}","properties":[{"name":"dataTypes","deprecated":false,"deprecationMessage":"","type":"ECmpTypeOperatorMap[]","indexKey":"","optional":false,"description":"","line":21},{"name":"isRange","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":22},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":20},{"name":"value","deprecated":false,"deprecationMessage":"","type":"EOperator","indexKey":"","optional":false,"description":"","line":19}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ISelectOption","id":"interface-ISelectOption-f9aa5faf2d799e4c2bfa80c1bf2bcaa0541122dec1f771374334aff62d983a3927b952d610e72a82dc5fdc4e572b8f99832c7d6a4e2a370f9458a09699cbe2ed","file":"src/utils/typings.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export enum EOperator {\\n    GreaterThan = 0,\\n    LessThan = 1,\\n    EqualTo = 2,\\n    NotEqualTo = 3,\\n    Between = 4,\\n    Contains = 5,\\n    NotContains = 6\\n}\\nexport enum ECmpTypeOperatorMap {\\n    number = 1,\\n    char = 2,\\n    select_single = 3,\\n    select_multiple = 4,\\n    select_cascader = 5,\\n    date = 6,\\n}\\nexport interface IOperator {\\n    value: EOperator;\\n    label: string;\\n    dataTypes: ECmpTypeOperatorMap[];\\n    isRange: boolean;\\n}\\nexport const operators: IOperator[] = [\\n    {\\n        value: EOperator.GreaterThan, label: \'大于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.LessThan, label: \'小于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.EqualTo, label: \'等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.NotEqualTo, label: \'不等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.Between, label: \'范围\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: true\\n    }, {\\n        value: EOperator.Contains, label: \'包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    },\\n    {\\n        value: EOperator.NotContains, label: \'不包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    }\\n];\\n\\nexport interface ISelectOption {\\n    value: string;\\n    label: string;\\n    isLeaf?: boolean;\\n    children?: ISelectOption[];\\n}","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"ISelectOption[]","indexKey":"","optional":true,"description":"","line":51},{"name":"isLeaf","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":50},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":49},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":48}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ISelectorOption","id":"interface-ISelectorOption-55ec6f9a42e49020cf27a16acf042164b38bec887f104f62b36cf42f2a2ab4f8d07e12287938a22e3271ca027576f31419e3571c3c29447dbc31e252a19e2110","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Validators, AbstractControl, ValidationErrors, ValidatorFn } from \'@angular/forms\';\\nimport { NzSafeAny } from \\"ng-zorro-antd/core/types\\";\\n\\nexport const REGEXP = {\\n  phoneNumber: /^1[3-9]\\\\d{9}$/,\\n  landlineAndPhone: /^((0\\\\d{2,3}-\\\\d{7,8})|(1[3-9]\\\\d{9}))$/,\\n  nonNegativeInteger: /^\\\\d+$/,\\n  positiveInteger: /^[1-9]\\\\d*$/,\\n  decimalNumber: /^[0-9]+(\\\\.[0-9]+)?$/,\\n  empty: /^\\\\s+$/,\\n  onlyChinese: /^[\\\\u4e00-\\\\u9fa5_a-zA-Z]+$/,\\n  certificateCode: /(^[1-9]\\\\d{5}(18|19|([23]\\\\d))\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$)|(^[1-9]\\\\d{5}\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{2}[0-9Xx]$)/,\\n  mailbox: /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z.]{2,6})$/\\n};\\n\\nexport interface ISelectorOption<T = number, U = unknown> {\\n  label: string;\\n  value: T;\\n  extra?: U;\\n  checked?: boolean;\\n  disabled?: boolean;\\n}\\n\\n/**\\n * 输入框不能为空（包括空白字符）\\n */\\nexport function noEmptyValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'noEmpty\': { value } };\\n\\n    return !value || REGEXP.empty.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function checkListRequireValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value as ISelectorOption[] || [];\\n    const errorTip = { \'requireChecked\': { value } };\\n\\n    return value && value.some((item) => item.checked) ? null : errorTip;\\n  };\\n}\\n\\nexport function nonNegativeIntegerValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'nonNegativeInteger\': { value } };\\n\\n    return value && REGEXP.nonNegativeInteger.test(value) ? null : errorTip;\\n  };\\n}\\n\\nexport function onlyChineseValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'onlyChinese\': { value } };\\n    return value && !REGEXP.onlyChinese.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function phoneNumberValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'phoneNumber\': { value } };\\n\\n    return value && !REGEXP.phoneNumber.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function landlineAndPhoneValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'landlineAndPhone\': { value } };\\n    return value && !REGEXP.landlineAndPhone.test(value) ? errorTip : null;\\n  };\\n}\\n\\n\\nexport function certificateCodeValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'certificateCode\': { value } };\\n    return value && !REGEXP.certificateCode.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function positiveIntegerValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'positiveInteger\': { value } };\\n\\n    return value && REGEXP.positiveInteger.test(value) ? null : errorTip;\\n  };\\n}\\n\\nexport function decimalNumberValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'decimalNumber\': { value } };\\n\\n    return value && REGEXP.decimalNumber.test(value) ? null : errorTip;\\n  };\\n}\\n\\n// 自定义表单校验\\nexport type MyErrorsOptions = { \'zh-cn\': string; en: string } & Record<\\n  string,\\n  NzSafeAny\\n>;\\nexport type MyValidationErrors = Record<string, MyErrorsOptions>;\\n\\n\\nexport class MyValidators extends Validators {\\n  static override minLength(minLength: number): ValidatorFn {\\n    return (control: AbstractControl): MyValidationErrors | null => {\\n      if (Validators.minLength(minLength)(control) === null) {\\n        return null;\\n      }\\n      return {\\n        minlength: {\\n          \'zh-cn\': `最小长度为 ${minLength}`,\\n          en: `MinLength is ${minLength}`,\\n        },\\n      };\\n    };\\n  }\\n\\n  static override maxLength(maxLength: number): ValidatorFn {\\n    return (control: AbstractControl): MyValidationErrors | null => {\\n      if (Validators.maxLength(maxLength)(control) === null) {\\n        return null;\\n      }\\n      return {\\n        maxlength: {\\n          \'zh-cn\': `最大长度为 ${maxLength}`,\\n          en: `MaxLength is ${maxLength}`,\\n        },\\n      };\\n    };\\n  }\\n  static myName(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n    if (/^[ ]*$/g.test(value)) {\\n      return {\\n        name: { \'zh-cn\': `姓名不可为空`, en: `usernName Cannot be empty` },\\n      };\\n    } else {\\n      return null;\\n    }\\n  }\\n  static mobile(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n\\n    if (isEmptyInputValue(value)) {\\n      return null;\\n    }\\n\\n    return isMobile(value)\\n      ? null\\n      : {\\n        phoneNumber: {\\n          \'zh-cn\': `手机号码格式不正确`,\\n          en: `Mobile phone number is not valid`,\\n        },\\n      };\\n  }\\n  static socialUnifiedCode(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n    if (!/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/.test(value)) {\\n      return {\\n        name: { \'zh-cn\': `社会信用代码格式错误`, en: `invalid socialUnifiedCode` },\\n      };\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  // 检验身份证\\n  static validateIdCardNo(idCard: string): MyValidationErrors | null {\\n    let isValidCard: boolean = false;\\n    // 15位和18位身份证号码的正则表达式\\n    const regIdCard = /^(^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$)|(^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])((\\\\d{4})|\\\\d{3}[Xx])$)$/;\\n    // 如果通过该验证，说明身份证格式正确，但准确性还需计算\\n    if (regIdCard.test(idCard)) {\\n      if (idCard.length === 18) {\\n        // 将前17位加权因子保存在数组里\\n        const idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);\\n        // 这是除以11后，可能产生的11位余数、验证码，也保存成数组\\n        const idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2);\\n        // 用来保存前17位各自乖以加权因子后的总和\\n        let idCardWiSum = 0;\\n\\n        for (let i = 0; i < 17; i++) {\\n          idCardWiSum += +(idCard.substring(i, i + 1)) * idCardWi[i];\\n        }\\n\\n        // 计算出校验码所在数组的位置\\n        const idCardMod = idCardWiSum % 11;\\n        // 得到最后一位身份证号码\\n        const idCardLast = idCard.substring(17);\\n        // 如果等于2，则说明校验码是10，身份证号码最后一位应该是X\\n        if (+idCardMod === 2) {\\n          if (idCardLast === \'X\' || idCardLast === \'x\') {\\n            // alert(\\"恭喜通过验证啦！\\");\\n            isValidCard = true;\\n          }\\n        } else {\\n          // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\\n          if (+idCardLast === idCardY[idCardMod]) {\\n            // alert(\\"恭喜通过验证啦！\\");\\n            isValidCard = true;\\n          }\\n        }\\n      }\\n    }\\n\\n    return isValidCard ? null : {\\n      name: { \'zh-cn\': `您输入的身份证号格式有误`, en: `invalid idCardNo` },\\n    };;\\n  }\\n\\n  static mailboxValidator(): ValidatorFn {\\n    return (control: AbstractControl): ValidationErrors | null => {\\n      const value = control.value;\\n      const errorTip = { \'mailbox\': { value } };\\n\\n      return value && !REGEXP.mailbox.test(value) ? errorTip : null;\\n    };\\n  }\\n}\\n\\nfunction isEmptyInputValue(value: NzSafeAny): boolean {\\n  return value == null || value.length === 0;\\n}\\n\\nfunction isMobile(value: string): boolean {\\n  return typeof value === \'string\' && /^1(3[0-9]|4[01456879]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\\\d{8}$/.test(value);\\n}","properties":[{"name":"checked","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":20},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":21},{"name":"extra","deprecated":false,"deprecationMessage":"","type":"U","indexKey":"","optional":true,"description":"","line":19},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":17},{"name":"value","deprecated":false,"deprecationMessage":"","type":"T","indexKey":"","optional":false,"description":"","line":18}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ITraceHighLightConf","id":"interface-ITraceHighLightConf-21564b58e6ff622c70f160b34c65848963ba41d3d84abf87774f390be5ea4050fa27934f9d9ad2ecfbe97ead5bcb6eb93e97e53660cd34a591bcc08c543e0c85","file":"src/directives/trace-highlight.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Directive, ElementRef, EventEmitter, HostBinding, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges } from \'@angular/core\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\nimport { filter, takeUntil } from \'rxjs/operators\';\\n\\nexport interface ITraceHighLightConf {\\n  isShadowDom?: boolean;\\n  shadowDomElement?: HTMLElement;\\n  isDisabled?: boolean;\\n  onHighlight$: BehaviorSubject<any>;\\n}\\nexport interface ITraceSourceItemFrontend {\\n  keyword?: string;\\n  fieldName?: string;\\n}\\n\\n@Directive({\\n  selector: \'[traceHighlight]\',\\n  // standalone: true,\\n})\\nexport class TraceHighlightDirective implements OnChanges, OnInit, OnDestroy {\\n  @Input(\'traceHighlight\') highlightConf: ITraceHighLightConf;\\n  @Input() highlightId: string;\\n  @Output() hightTraceIdSetChange = new EventEmitter<Set<string>>();\\n\\n  @HostBinding(\'style.position\') public wrapperPos = \'relative\';\\n  public hightTraceIdSet = new Set<string>();\\n  public destroy$: Subject<void> = new Subject<void>();\\n  \\n  // 添加样式常量\\n  private readonly HIGHLIGHT_STYLES = {\\n    normal: {\\n      background: \'rgba(255, 242, 123, 0.3)\',\\n      border: \'1.5px dashed #FD8701\'\\n    },\\n    active: {\\n      background: \'rgba(7, 181, 249, 0.3)\',\\n      border: \'none\'\\n    }\\n  } as const;\\n\\n  constructor(\\n    private elRef: ElementRef,\\n    private render: Renderer2\\n  ) { }\\n\\n  public ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\'highlightId\'] && this.highlightId) {\\n      const element = document.getElementById(this.highlightId);\\n      if (!element) return;\\n\\n      this.activeAndScrollToCurPoint(element as HTMLElement);\\n    }\\n  }\\n\\n  public ngOnInit(): void {\\n    if (this.highlightConf?.isDisabled) return;\\n    this.highlightConf.onHighlight$.pipe(\\n      takeUntil(this.destroy$),\\n      filter(value => value !== false)\\n    ).subscribe((value: any) => {\\n      // 清除所有高亮\\n      this.clearAllHighlights();\\n      value.forEach((point: ITraceSourceItemFrontend) => this.handleTracePoint(point));\\n      this.hightTraceIdSetChange.emit(this.hightTraceIdSet)\\n    });\\n  }\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next();\\n    this.destroy$.complete();\\n  }\\n\\n  /**\\n   * 根据单个溯源点信息进行DOM查找\\n   * @param tracePoint 单个溯源点信息\\n   */\\n  private handleTracePoint(tracePoint: ITraceSourceItemFrontend): void {\\n    // 兼容一些页面的样式偏移及shadowDom等的生成晚 在视图更新好后再进行高亮等的操作\\n    setTimeout(() => {\\n      const { isShadowDom, shadowDomElement } = this.highlightConf;\\n      // 兼容shadowDom元素的获取\\n      const walkerWrapper = isShadowDom ? shadowDomElement : this.elRef.nativeElement;\\n      if (!walkerWrapper) {\\n        return;\\n      }\\n      const { keyword, fieldName } = tracePoint;\\n      // 处理*等在正则中有特殊含义的字符转义\\n      // tslint:disable-next-line: newline-per-chained-call\\n      const regxStr = keyword?.replace(/([*+?$^.|\\\\\\\\\\\\)\\\\(])/g, \'\\\\\\\\$1\');\\n      const matchRegx = new RegExp(`${regxStr}`, \'g\');\\n\\n      // 对于关键字匹配方式直接查找匹配的Text节点\\n      this.searchMatchTextNode(walkerWrapper, matchRegx);\\n    });\\n  }\\n\\n  /**\\n   * 搜索指定元素下的匹配文本正则的文本节点，并循环进行相应处理\\n   * @param elementNode 要查找的HTML元素\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextNode(elementNode: Node, matchRegx: RegExp): void {\\n    const textNodeFilterFn = (node: Node) => {\\n      return node.nodeValue?.match(matchRegx) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\\n    };\\n    const textNodeWalker = document.createTreeWalker(elementNode, NodeFilter.SHOW_TEXT, textNodeFilterFn as any);\\n    // 元素节点下匹配的文本节点\\n    let curMatchTextNode = textNodeWalker.nextNode();\\n\\n    while (!!curMatchTextNode) {\\n\\n      this.searchMatchTextStr(curMatchTextNode, matchRegx);\\n\\n      curMatchTextNode = textNodeWalker.nextNode();\\n    }\\n  }\\n\\n  /**\\n   * 对匹配到的文本节点，需要通过正则查找到当前文本节点匹配的文本有哪些，并得出文本的具体位置\\n   * 然后才能对每个文本进行高亮的定位\\n   * @param textNode 匹配到的文本Node节点\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextStr(textNode: Node, matchRegx: RegExp): void {\\n    const textNodeStr = textNode.textContent;\\n    let matchResult = matchRegx.exec(textNodeStr || \'\');\\n\\n    while (!!matchResult) {\\n      const startIndex = matchResult?.index;\\n      const endIndex = matchRegx?.lastIndex;\\n      // 根据需要高亮的文本节点以及正则查找获得的文本起始高亮位置进行高亮操作\\n      this.highlightTextRange(textNode, startIndex, endIndex);\\n\\n      matchResult = matchRegx.exec(textNodeStr || \'\');\\n    }\\n  }\\n\\n  /**\\n   * 高亮匹配到的溯源文本\\n   * @param textNode 需要高亮的文本节点\\n   * @param startIndex 高亮文本节点开始下标\\n   * @param endIndex 高亮文本节点结束下标\\n   */\\n  private highlightTextRange(textNode: Node, startIndex: number, endIndex: number): void {\\n    try {\\n      const range = this.createRange(textNode, startIndex, endIndex);\\n      const rects = this.getHighlightRects(range, textNode);\\n      const highlightElement = this.createHighlightElement(rects);\\n      this.elRef.nativeElement.appendChild(highlightElement);\\n    } catch (err) {\\n      console.error(`${textNode}, 溯源文本高亮失败，错误信息：${err}`);\\n    }\\n  }\\n\\n  /**\\n   * 创建文本范围\\n   */\\n  private createRange(textNode: Node, startIndex: number, endIndex: number): Range {\\n    const range = document.createRange();\\n    range.setStart(textNode, startIndex);\\n    range.setEnd(textNode, endIndex);\\n    return range;\\n  }\\n\\n  /**\\n   * 获取高亮区域的位置信息\\n   */\\n  private getHighlightRects(range: Range, textNode: Node): {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  } {\\n    const clientRect = range.getBoundingClientRect();\\n    const elementClientRect = textNode.parentElement?.getBoundingClientRect() || clientRect;\\n    const wrapperClientRect = this.elRef.nativeElement.getBoundingClientRect();\\n    return { clientRect, elementClientRect, wrapperClientRect };\\n  }\\n\\n  /**\\n   * 创建高亮元素\\n   */\\n  private createHighlightElement(rects: {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  }): HTMLElement {\\n    // 使用 DocumentFragment 减少 DOM 操作\\n    const fragment = document.createDocumentFragment();\\n    const highLightElement = this.render.createElement(\'div\');\\n    fragment.appendChild(highLightElement);\\n\\n    // 使用 requestAnimationFrame 优化样式计算和渲染\\n    requestAnimationFrame(() => {\\n      const { clientRect, elementClientRect, wrapperClientRect } = rects;\\n      const highLightStyle = highLightElement.style;\\n\\n      // 设置高亮元素ID和样式\\n      highLightElement.id = this.generateHighlightId();\\n      this.hightTraceIdSet.add(highLightElement.id);\\n      highLightElement.className = \'highlight-mask\';\\n\\n      // 计算位置和尺寸\\n      const { left, top, width, height } = clientRect;\\n      const { width: parentWidth, left: parentLeft, right: parentRight } = elementClientRect;\\n      const { left: wrapperLeft, top: wrapperTop } = wrapperClientRect;\\n\\n      // 处理溢出情况\\n      const isOverflow = left > parentRight;\\n      const highLightLeft = isOverflow ? parentLeft - wrapperLeft : left - wrapperLeft;\\n      const highLightWidth = isOverflow ? parentWidth : width;\\n      const highLightTop = top - wrapperTop;\\n\\n      // 批量设置样式\\n      Object.assign(highLightStyle, {\\n        position: \'absolute\',\\n        left: `${highLightLeft}px`,\\n        top: `${highLightTop}px`,\\n        width: `${highLightWidth}px`,\\n        height: `${height}px`,\\n        maxWidth: `${parentWidth - (highLightLeft - (parentLeft - wrapperLeft))}px`,\\n        pointerEvents: \'none\',\\n        lineHeight: `${height}px`,\\n        ...this.HIGHLIGHT_STYLES.normal\\n      });\\n\\n      // 将元素添加到 DOM\\n      this.elRef.nativeElement.appendChild(fragment);\\n    });\\n\\n    return highLightElement;\\n  }\\n\\n  /**\\n   * 生成唯一的高亮ID\\n   */\\n  private generateHighlightId(): string {\\n    // 使用更高效的 ID 生成方式\\n    return `hl-${performance.now().toString(36)}`;\\n  }\\n\\n  /**\\n   * 高亮并定位至当前指向的溯源点\\n   * @param curActiveElement 当前定位的溯源点遮罩层元素\\n   */\\n  private activeAndScrollToCurPoint(curActiveElement?: HTMLElement): void {\\n    if (!curActiveElement) return;\\n\\n    // 使用 requestAnimationFrame 优化滚动和高亮\\n    requestAnimationFrame(() => {\\n      // 重置其它溯源点样式状态\\n      const highlightElements: HTMLElement[] = Array.from(document.querySelectorAll(\'.highlight-mask\'));\\n      highlightElements.forEach(element => {\\n        Object.assign(element.style, this.HIGHLIGHT_STYLES.normal);\\n      });\\n\\n      // 滚动并高亮当前溯源点\\n      curActiveElement.scrollIntoView({ behavior: \'smooth\', block: \'center\' });\\n      Object.assign(curActiveElement.style, this.HIGHLIGHT_STYLES.active);\\n    });\\n  }\\n\\n  /**\\n   * 清除所有高亮元素\\n   */\\n  private clearAllHighlights(): void {\\n    // 使用 requestAnimationFrame 优化清除操作\\n    requestAnimationFrame(() => {\\n      const wrapperElement = this.elRef.nativeElement;\\n      const highlightElements = wrapperElement.querySelectorAll(\'.highlight-mask\');\\n      \\n      // 使用 DocumentFragment 批量移除元素\\n      const fragment = document.createDocumentFragment();\\n      highlightElements.forEach((element: Element) => {\\n        fragment.appendChild(element);\\n      });\\n      \\n      // 清空 Set\\n      this.hightTraceIdSet.clear();\\n    });\\n  }\\n}\\n\\n","properties":[{"name":"isDisabled","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":8},{"name":"isShadowDom","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":6},{"name":"onHighlight$","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<any>","indexKey":"","optional":false,"description":"","line":9},{"name":"shadowDomElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":true,"description":"","line":7}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ITraceSourceItemFrontend","id":"interface-ITraceSourceItemFrontend-21564b58e6ff622c70f160b34c65848963ba41d3d84abf87774f390be5ea4050fa27934f9d9ad2ecfbe97ead5bcb6eb93e97e53660cd34a591bcc08c543e0c85","file":"src/directives/trace-highlight.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Directive, ElementRef, EventEmitter, HostBinding, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges } from \'@angular/core\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\nimport { filter, takeUntil } from \'rxjs/operators\';\\n\\nexport interface ITraceHighLightConf {\\n  isShadowDom?: boolean;\\n  shadowDomElement?: HTMLElement;\\n  isDisabled?: boolean;\\n  onHighlight$: BehaviorSubject<any>;\\n}\\nexport interface ITraceSourceItemFrontend {\\n  keyword?: string;\\n  fieldName?: string;\\n}\\n\\n@Directive({\\n  selector: \'[traceHighlight]\',\\n  // standalone: true,\\n})\\nexport class TraceHighlightDirective implements OnChanges, OnInit, OnDestroy {\\n  @Input(\'traceHighlight\') highlightConf: ITraceHighLightConf;\\n  @Input() highlightId: string;\\n  @Output() hightTraceIdSetChange = new EventEmitter<Set<string>>();\\n\\n  @HostBinding(\'style.position\') public wrapperPos = \'relative\';\\n  public hightTraceIdSet = new Set<string>();\\n  public destroy$: Subject<void> = new Subject<void>();\\n  \\n  // 添加样式常量\\n  private readonly HIGHLIGHT_STYLES = {\\n    normal: {\\n      background: \'rgba(255, 242, 123, 0.3)\',\\n      border: \'1.5px dashed #FD8701\'\\n    },\\n    active: {\\n      background: \'rgba(7, 181, 249, 0.3)\',\\n      border: \'none\'\\n    }\\n  } as const;\\n\\n  constructor(\\n    private elRef: ElementRef,\\n    private render: Renderer2\\n  ) { }\\n\\n  public ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\'highlightId\'] && this.highlightId) {\\n      const element = document.getElementById(this.highlightId);\\n      if (!element) return;\\n\\n      this.activeAndScrollToCurPoint(element as HTMLElement);\\n    }\\n  }\\n\\n  public ngOnInit(): void {\\n    if (this.highlightConf?.isDisabled) return;\\n    this.highlightConf.onHighlight$.pipe(\\n      takeUntil(this.destroy$),\\n      filter(value => value !== false)\\n    ).subscribe((value: any) => {\\n      // 清除所有高亮\\n      this.clearAllHighlights();\\n      value.forEach((point: ITraceSourceItemFrontend) => this.handleTracePoint(point));\\n      this.hightTraceIdSetChange.emit(this.hightTraceIdSet)\\n    });\\n  }\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next();\\n    this.destroy$.complete();\\n  }\\n\\n  /**\\n   * 根据单个溯源点信息进行DOM查找\\n   * @param tracePoint 单个溯源点信息\\n   */\\n  private handleTracePoint(tracePoint: ITraceSourceItemFrontend): void {\\n    // 兼容一些页面的样式偏移及shadowDom等的生成晚 在视图更新好后再进行高亮等的操作\\n    setTimeout(() => {\\n      const { isShadowDom, shadowDomElement } = this.highlightConf;\\n      // 兼容shadowDom元素的获取\\n      const walkerWrapper = isShadowDom ? shadowDomElement : this.elRef.nativeElement;\\n      if (!walkerWrapper) {\\n        return;\\n      }\\n      const { keyword, fieldName } = tracePoint;\\n      // 处理*等在正则中有特殊含义的字符转义\\n      // tslint:disable-next-line: newline-per-chained-call\\n      const regxStr = keyword?.replace(/([*+?$^.|\\\\\\\\\\\\)\\\\(])/g, \'\\\\\\\\$1\');\\n      const matchRegx = new RegExp(`${regxStr}`, \'g\');\\n\\n      // 对于关键字匹配方式直接查找匹配的Text节点\\n      this.searchMatchTextNode(walkerWrapper, matchRegx);\\n    });\\n  }\\n\\n  /**\\n   * 搜索指定元素下的匹配文本正则的文本节点，并循环进行相应处理\\n   * @param elementNode 要查找的HTML元素\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextNode(elementNode: Node, matchRegx: RegExp): void {\\n    const textNodeFilterFn = (node: Node) => {\\n      return node.nodeValue?.match(matchRegx) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\\n    };\\n    const textNodeWalker = document.createTreeWalker(elementNode, NodeFilter.SHOW_TEXT, textNodeFilterFn as any);\\n    // 元素节点下匹配的文本节点\\n    let curMatchTextNode = textNodeWalker.nextNode();\\n\\n    while (!!curMatchTextNode) {\\n\\n      this.searchMatchTextStr(curMatchTextNode, matchRegx);\\n\\n      curMatchTextNode = textNodeWalker.nextNode();\\n    }\\n  }\\n\\n  /**\\n   * 对匹配到的文本节点，需要通过正则查找到当前文本节点匹配的文本有哪些，并得出文本的具体位置\\n   * 然后才能对每个文本进行高亮的定位\\n   * @param textNode 匹配到的文本Node节点\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextStr(textNode: Node, matchRegx: RegExp): void {\\n    const textNodeStr = textNode.textContent;\\n    let matchResult = matchRegx.exec(textNodeStr || \'\');\\n\\n    while (!!matchResult) {\\n      const startIndex = matchResult?.index;\\n      const endIndex = matchRegx?.lastIndex;\\n      // 根据需要高亮的文本节点以及正则查找获得的文本起始高亮位置进行高亮操作\\n      this.highlightTextRange(textNode, startIndex, endIndex);\\n\\n      matchResult = matchRegx.exec(textNodeStr || \'\');\\n    }\\n  }\\n\\n  /**\\n   * 高亮匹配到的溯源文本\\n   * @param textNode 需要高亮的文本节点\\n   * @param startIndex 高亮文本节点开始下标\\n   * @param endIndex 高亮文本节点结束下标\\n   */\\n  private highlightTextRange(textNode: Node, startIndex: number, endIndex: number): void {\\n    try {\\n      const range = this.createRange(textNode, startIndex, endIndex);\\n      const rects = this.getHighlightRects(range, textNode);\\n      const highlightElement = this.createHighlightElement(rects);\\n      this.elRef.nativeElement.appendChild(highlightElement);\\n    } catch (err) {\\n      console.error(`${textNode}, 溯源文本高亮失败，错误信息：${err}`);\\n    }\\n  }\\n\\n  /**\\n   * 创建文本范围\\n   */\\n  private createRange(textNode: Node, startIndex: number, endIndex: number): Range {\\n    const range = document.createRange();\\n    range.setStart(textNode, startIndex);\\n    range.setEnd(textNode, endIndex);\\n    return range;\\n  }\\n\\n  /**\\n   * 获取高亮区域的位置信息\\n   */\\n  private getHighlightRects(range: Range, textNode: Node): {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  } {\\n    const clientRect = range.getBoundingClientRect();\\n    const elementClientRect = textNode.parentElement?.getBoundingClientRect() || clientRect;\\n    const wrapperClientRect = this.elRef.nativeElement.getBoundingClientRect();\\n    return { clientRect, elementClientRect, wrapperClientRect };\\n  }\\n\\n  /**\\n   * 创建高亮元素\\n   */\\n  private createHighlightElement(rects: {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  }): HTMLElement {\\n    // 使用 DocumentFragment 减少 DOM 操作\\n    const fragment = document.createDocumentFragment();\\n    const highLightElement = this.render.createElement(\'div\');\\n    fragment.appendChild(highLightElement);\\n\\n    // 使用 requestAnimationFrame 优化样式计算和渲染\\n    requestAnimationFrame(() => {\\n      const { clientRect, elementClientRect, wrapperClientRect } = rects;\\n      const highLightStyle = highLightElement.style;\\n\\n      // 设置高亮元素ID和样式\\n      highLightElement.id = this.generateHighlightId();\\n      this.hightTraceIdSet.add(highLightElement.id);\\n      highLightElement.className = \'highlight-mask\';\\n\\n      // 计算位置和尺寸\\n      const { left, top, width, height } = clientRect;\\n      const { width: parentWidth, left: parentLeft, right: parentRight } = elementClientRect;\\n      const { left: wrapperLeft, top: wrapperTop } = wrapperClientRect;\\n\\n      // 处理溢出情况\\n      const isOverflow = left > parentRight;\\n      const highLightLeft = isOverflow ? parentLeft - wrapperLeft : left - wrapperLeft;\\n      const highLightWidth = isOverflow ? parentWidth : width;\\n      const highLightTop = top - wrapperTop;\\n\\n      // 批量设置样式\\n      Object.assign(highLightStyle, {\\n        position: \'absolute\',\\n        left: `${highLightLeft}px`,\\n        top: `${highLightTop}px`,\\n        width: `${highLightWidth}px`,\\n        height: `${height}px`,\\n        maxWidth: `${parentWidth - (highLightLeft - (parentLeft - wrapperLeft))}px`,\\n        pointerEvents: \'none\',\\n        lineHeight: `${height}px`,\\n        ...this.HIGHLIGHT_STYLES.normal\\n      });\\n\\n      // 将元素添加到 DOM\\n      this.elRef.nativeElement.appendChild(fragment);\\n    });\\n\\n    return highLightElement;\\n  }\\n\\n  /**\\n   * 生成唯一的高亮ID\\n   */\\n  private generateHighlightId(): string {\\n    // 使用更高效的 ID 生成方式\\n    return `hl-${performance.now().toString(36)}`;\\n  }\\n\\n  /**\\n   * 高亮并定位至当前指向的溯源点\\n   * @param curActiveElement 当前定位的溯源点遮罩层元素\\n   */\\n  private activeAndScrollToCurPoint(curActiveElement?: HTMLElement): void {\\n    if (!curActiveElement) return;\\n\\n    // 使用 requestAnimationFrame 优化滚动和高亮\\n    requestAnimationFrame(() => {\\n      // 重置其它溯源点样式状态\\n      const highlightElements: HTMLElement[] = Array.from(document.querySelectorAll(\'.highlight-mask\'));\\n      highlightElements.forEach(element => {\\n        Object.assign(element.style, this.HIGHLIGHT_STYLES.normal);\\n      });\\n\\n      // 滚动并高亮当前溯源点\\n      curActiveElement.scrollIntoView({ behavior: \'smooth\', block: \'center\' });\\n      Object.assign(curActiveElement.style, this.HIGHLIGHT_STYLES.active);\\n    });\\n  }\\n\\n  /**\\n   * 清除所有高亮元素\\n   */\\n  private clearAllHighlights(): void {\\n    // 使用 requestAnimationFrame 优化清除操作\\n    requestAnimationFrame(() => {\\n      const wrapperElement = this.elRef.nativeElement;\\n      const highlightElements = wrapperElement.querySelectorAll(\'.highlight-mask\');\\n      \\n      // 使用 DocumentFragment 批量移除元素\\n      const fragment = document.createDocumentFragment();\\n      highlightElements.forEach((element: Element) => {\\n        fragment.appendChild(element);\\n      });\\n      \\n      // 清空 Set\\n      this.hightTraceIdSet.clear();\\n    });\\n  }\\n}\\n\\n","properties":[{"name":"fieldName","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":13},{"name":"keyword","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}],"injectables":[{"name":"CountdownService","id":"injectable-CountdownService-bf55fb7204f73c0db2e12b8987c8ddb97a46c10ec97cee0a6a861d1afce32d9854034f29eee24d933ebfcec6af476562720e25decbc6f6c625882e4afe5e4b43","file":"src/services/countdown.service.ts","properties":[{"name":"countdown$","defaultValue":"this.countdownSubject.asObservable()","deprecated":false,"deprecationMessage":"","type":"Observable<string>","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[125]},{"name":"countdownSubject","defaultValue":"new BehaviorSubject<string>(\'\')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"isPaused$","defaultValue":"this.pauseSubject.asObservable()","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[125]},{"name":"pauseSubject","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[123]},{"name":"remainingTime","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"timerSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","indexKey":"","optional":true,"description":"","line":8,"modifierKind":[123]}],"methods":[{"name":"cleanup","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""},{"name":"pauseCountdown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n暂停\\n","description":"<p>暂停</p>\\n","modifierKind":[125]},{"name":"resumeCountdown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n恢复\\n","description":"<p>恢复</p>\\n","modifierKind":[125]},{"name":"startCountdown","args":[{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5"}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5","tagName":{"text":"param"}}]},{"name":"startTimer","args":[{"name":"duration","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n开始计时\\n","description":"<p>开始计时</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1401,"end":1409,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1395,"end":1400,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":""}]},{"name":"stopCountdown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[125]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, Subscription, timer } from \'rxjs\';\\nimport { take, map } from \'rxjs/operators\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class CountdownService implements OnDestroy {\\n    private countdownSubject = new BehaviorSubject<string>(\'\');\\n    private timerSubscription?: Subscription;\\n    private pauseSubject = new BehaviorSubject<boolean>(false);\\n    private remainingTime: number = 0;\\n\\n    public countdown$: Observable<string> = this.countdownSubject.asObservable();\\n    public isPaused$: Observable<boolean> = this.pauseSubject.asObservable();\\n\\n    constructor() { }\\n\\n    public startCountdown(duration: number = 5): void {\\n        this.cleanup();\\n        this.remainingTime = duration;\\n        this.startTimer(duration);\\n    }\\n\\n    /**\\n     * 暂停\\n     */\\n    public pauseCountdown(): void {\\n        if (this.timerSubscription && !this.pauseSubject.value) {\\n            this.pauseSubject.next(true);\\n            this.timerSubscription.unsubscribe();\\n        }\\n    }\\n\\n    /**\\n     * 恢复\\n     */\\n    public resumeCountdown(): void {\\n        if (this.pauseSubject.value) {\\n            this.pauseSubject.next(false);\\n            this.startTimer(this.remainingTime);\\n        }\\n        if (!this.timerSubscription) {\\n            this.startTimer(this.remainingTime);\\n        }\\n    }\\n\\n    /**\\n     * 开始计时\\n     * @param duration \\n     */\\n    private startTimer(duration: number): void {\\n        this.timerSubscription = timer(0, 1000)\\n            .pipe(\\n                take(duration + 2),\\n                map(value => {\\n                    const remaining = duration - value;\\n                    this.remainingTime = remaining;\\n                    return `${remaining}s`;\\n                })\\n            )\\n            .subscribe({\\n                next: (text) => {\\n                    this.countdownSubject.next(text);\\n                },\\n                complete: () => {\\n                    this.countdownSubject.next(\'\');\\n                    this.cleanup();\\n                },\\n                error: (error) => {\\n                    console.error(\'Countdown error:\', error);\\n                    this.cleanup();\\n                }\\n            });\\n    }\\n\\n    public stopCountdown(): void {\\n        this.cleanup();\\n        this.countdownSubject.next(\'\');\\n        this.pauseSubject.next(false);\\n        this.remainingTime = 0;\\n    }\\n\\n    private cleanup(): void {\\n        if (this.timerSubscription) {\\n            this.timerSubscription.unsubscribe();\\n            this.timerSubscription = undefined;\\n        }\\n    }\\n\\n    ngOnDestroy(): void {\\n        this.cleanup();\\n    }\\n}","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"type":"injectable"},{"name":"EventSourceService","id":"injectable-EventSourceService-f20176317e26d4a92e3f5bc1f5077d1f0423c004c3538a72afa46ea72256f145bd23db8008fdc9d364016fc6e3c947f5baedff3636f1ee4253eee16386ac5491","file":"src/directives/event-source/event-source.service.ts","properties":[{"name":"xs","deprecated":false,"deprecationMessage":"","type":"EventTarget","indexKey":"","optional":false,"description":"","line":6}],"methods":[{"name":"_sseevent","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"connectToServerSentEvents","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Event>","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"XhrSource","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"opts","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"EventTarget","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"opts","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, NgZone } from \'@angular/core\';\\nimport { Observable, Subscriber } from \'rxjs\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class EventSourceService {\\n  xs: EventTarget;\\n\\n  constructor(private zone: NgZone) { }\\n\\n  connectToServerSentEvents(url: string, options: any): Observable<Event> {\\n    this.xs = this.XhrSource(url, options);\\n    return new Observable((subscriber: Subscriber<Event>) => {\\n      this.xs.addEventListener(\'error\', (error: any) => {\\n        this.zone.run(() => subscriber.error(JSON.parse(error[\'reason\'])));\\n      });\\n      this.xs.addEventListener(\'message\', (e: any) => {\\n        const message = JSON.parse(e[\'data\']);\\n\\n        this.zone.run(() => subscriber.next(message));\\n      });\\n      this.xs.addEventListener(\'close\', e => {\\n        // outputEl.textContent += \'\\\\nDONE\';\\n        this.zone.run(() => subscriber.complete());\\n      });\\n    });\\n  }\\n\\n  close(): void {\\n    if (!this.xs) {\\n      return;\\n    }\\n\\n    (this.xs as any)[\'close\']();\\n    (this.xs as any) = null;\\n  }\\n\\n  private XhrSource(url: string, opts: any): EventTarget {\\n    const eventTarget = new EventTarget();\\n    const xhr = new XMLHttpRequest();\\n\\n    xhr.open(opts.method || \'GET\', url, true);\\n    for (var k in opts.headers) {\\n      xhr.setRequestHeader(k, opts.headers[k]);\\n    }\\n\\n    var ongoing = false, start = 0;\\n    xhr.onprogress = () => {\\n      if (!ongoing) {\\n        // onloadstart is sync with `xhr.send`, listeners don\'t have a chance\\n        ongoing = true;\\n        const option = {\\n          status: xhr.status,\\n          headers: xhr.getAllResponseHeaders(),\\n          url: (xhr as any)[\'responseUrl\'],\\n        };\\n        eventTarget.dispatchEvent(new Event(\'open\', (option as any)));\\n      }\\n\\n      var i, chunk;\\n      while ((i = xhr.responseText.indexOf(\'\\\\n\\\\n\', start)) >= 0) {\\n        chunk = xhr.responseText.slice(start, i);\\n        start = i + 2;\\n        if (chunk.length) {\\n          eventTarget.dispatchEvent(this._sseevent(chunk));\\n        }\\n      }\\n    }\\n\\n    xhr.onloadend = _ => {\\n      if (xhr.status == 200) {\\n        eventTarget.dispatchEvent(new CloseEvent(\'close\'))\\n      } else {\\n        eventTarget.dispatchEvent(new CloseEvent(\'error\', { reason: xhr.response }));\\n      }\\n    }\\n\\n    xhr.timeout = opts.timeout;\\n    xhr.ontimeout = _ => {\\n      eventTarget.dispatchEvent(new CloseEvent(\'error\', { reason: JSON.stringify({ message: \'Network request timed out\' }) }));\\n    }\\n    xhr.onerror = _ => {\\n      eventTarget.dispatchEvent(new CloseEvent(\'error\', { reason: xhr.response }));\\n    }\\n    xhr.onabort = _ => {\\n      eventTarget.dispatchEvent(new CloseEvent(\'error\', { reason: JSON.stringify({ message: \'Network request aborted\' }) }));\\n    }\\n\\n    (eventTarget as any)[\'close\'] = () => {\\n      xhr.abort();\\n    }\\n\\n    xhr.send(opts.body);\\n    return eventTarget;\\n  }\\n\\n  private _sseevent(message: string) {\\n    let type = \'message\', start = 0;\\n    if (message.startsWith(\'event: \')) {\\n      start = message.indexOf(\'\\\\n\');\\n      type = message.slice(7, start);\\n    }\\n    start = message.indexOf(\': \', start) + 2;\\n    let data = message.slice(start, message.length);\\n\\n    return new MessageEvent(type, { data: data })\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":""}],"line":6,"jsdoctags":[{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"FileService","id":"injectable-FileService-a186252f5c6149ccc278ce7ba65e6d65dbdbfdcf79e861b6cb956c1a3e92f60a9bf2cf3fd9896a5d5b196ffa0c808466c9ede8436ff884abfd9c968f8097a34a","file":"src/services/file.service.ts","properties":[],"methods":[{"name":"createImpl","args":[{"name":"canvas","type":"any","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"pdf","type":"any","deprecated":false,"deprecationMessage":""},{"name":"htmlHeight","type":"number","deprecated":false,"deprecationMessage":""},{"name":"imgHeight","type":"number","deprecated":false,"deprecationMessage":""},{"name":"position","type":"number","deprecated":false,"deprecationMessage":""},{"name":"canvas1","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":211,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"canvas","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pdf","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"htmlHeight","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"imgHeight","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"position","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"canvas1","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"downloadDom","args":[{"name":"dom","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dom","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"downloadFile","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'export\'"}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'export\'","tagName":{"text":"param"}}]},{"name":"downloadFileWithBlob","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"exportPDF","args":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"exportPDFFile","args":[{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"pdfName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pdfName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"exportWord","args":[{"name":"contentNode","type":"any","deprecated":false,"deprecationMessage":""},{"name":"pagetitle","type":"string","deprecated":false,"deprecationMessage":""},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","optional":true,"function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"contentNode","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pagetitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","optional":true,"function":[],"tagName":{"text":"param"}}]},{"name":"prepareHeaders","args":[],"optional":false,"returnType":"HttpHeaders","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setFilesType","args":[{"name":"filesList","type":"literal type[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"literal type[]","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"filesList","type":"literal type[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpHeaders } from \\"@angular/common/http\\";\\nimport { Injectable } from \\"@angular/core\\";\\nimport html2canvas from \\"html2canvas\\";\\nimport JSPDF from \\"jspdf\\";\\nimport { catchError, map, of } from \\"rxjs\\";\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class FileService {\\n    constructor(private http: HttpClient) { }\\n\\n    public get signatureToken(): string | null {\\n        return localStorage.getItem(\'signatureToken\');\\n    }\\n\\n    public downloadFile(url: string, fileName: string = \'export\'): void {\\n        let alink;\\n        alink = document.createElement(\'a\');\\n        alink.setAttribute(\'href\', url);\\n        alink.setAttribute(\'download\', fileName);\\n        alink.style.visibility = \'hidden\';\\n        document.body.appendChild(alink);\\n        alink.click();\\n        document.body.removeChild(alink);\\n    }\\n\\n    public downloadFileWithBlob(url: string, fileName: string): Promise<any> {\\n        const headers = this.prepareHeaders();\\n        return new Promise((resolve, reject) => {\\n            this.http.post(url, {}, { headers, responseType: \'blob\' })\\n                .pipe(\\n                    map(res => {\\n                        const path = URL.createObjectURL(res);\\n                        let link = document.createElement(\'a\');\\n\\n                        link.style.display = \'none\';\\n                        link.href = path;\\n                        link.download = fileName;\\n                        document.body.appendChild(link);\\n                        link.click();\\n                        document.body.removeChild(link);\\n                        // link = null;\\n                        URL.revokeObjectURL(path);\\n                        resolve(true)\\n                    }),\\n                    catchError((err) => {\\n                        reject(err);\\n                        return of(err);\\n                    })\\n                )\\n        })\\n    }\\n\\n    exportPDFFile(element: HTMLElement, pdfName: string) {\\n        this.exportPDF(element).then((pdf: any) => {\\n            debugger;\\n            if (!pdf) return;\\n            pdf.save(pdfName + \'.pdf\')\\n        });\\n    }\\n\\n    exportWord(contentNode: any, pagetitle: string, callback?: () => void) {\\n        const mhtml = {\\n            top: \\"Mime-Version: 1.0\\\\nContent-Base: \\" + location.href + \\"\\\\nContent-Type: Multipart/related; boundary=\\\\\\"NEXT.ITEM-BOUNDARY\\\\\\";type=\\\\\\"text/html\\\\\\"\\\\n\\\\n--NEXT.ITEM-BOUNDARY\\\\nContent-Type: text/html; charset=\\\\\\"utf-8\\\\\\"\\\\nContent-Location: \\" + location.href + \\"\\\\n\\\\n<!DOCTYPE html>\\\\n<html>\\\\n_html_</html>\\",\\n            head: \\"<head>\\\\n<meta http-equiv=\\\\\\"Content-Type\\\\\\" content=\\\\\\"text/html; charset=utf-8\\\\\\">\\\\n<style>\\\\n_styles_\\\\n</style>\\\\n</head>\\\\n\\",\\n            body: \\"<body>_body_</body>\\"\\n        };\\n        const options = {\\n            maxWidth: 624,\\n        }\\n        let mhtmlBottom = \'\\\\n\';\\n        const images: any[] = [];\\n        contentNode.querySelectorAll(\'canvas\').forEach((v: any) => {\\n            var uri = v.toDataURL(\\"image/png\\");\\n            var downloadUrl = uri.replace(\\"image/png\\", \\"image/octet-stream\\");\\n            const elemParent = v.parentNode;\\n            const elemNew = document.createElement(\'img\');\\n            elemNew.setAttribute(\'src\', downloadUrl);\\n            elemNew.style.width = 625 + \'px\';\\n            elemNew.style.height = v.offsetHeight + \'px\';\\n            elemParent.replaceChild(elemNew, v);\\n            // Get data URL encoding of image\\n            images.push({\\n                type: uri.substring(uri.indexOf(\\":\\") + 1, uri.indexOf(\\";\\")),\\n                encoding: uri.substring(uri.indexOf(\\";\\") + 1, uri.indexOf(\\",\\")),\\n                location: downloadUrl,\\n                data: uri.substring(uri.indexOf(\\",\\") + 1)\\n            });\\n        });\\n\\n\\n        for (var i = 0; i < images.length; i++) {\\n            mhtmlBottom += \\"--NEXT.ITEM-BOUNDARY\\\\n\\";\\n            mhtmlBottom += \\"Content-Location: \\" + images[i].location + \\"\\\\n\\";\\n            mhtmlBottom += \\"Content-Type: \\" + images[i].type + \\"\\\\n\\";\\n            mhtmlBottom += \\"Content-Transfer-Encoding: \\" + images[i].encoding + \\"\\\\n\\\\n\\";\\n            mhtmlBottom += images[i].data + \\"\\\\n\\\\n\\";\\n        }\\n        mhtmlBottom += \\"--NEXT.ITEM-BOUNDARY--\\"\\n        const styles = `\\n        table {\\n          border: none;\\n        }\\n        table thead tr:last-child {\\n          border-bottom: 1px solid #D0D1D2;\\n        }\\n        table tbody tr:last-child {\\n          border-bottom: 1px solid #D0D1D2;\\n        }\\n        `;\\n\\n        // Aggregate parts of the file together\\n        const fileContent = mhtml.top.replace(\\"_html_\\", mhtml.head.replace(\\"_styles_\\", styles) + mhtml.body.replace(\\"_body_\\", contentNode.innerHTML)) + mhtmlBottom;\\n\\n        var blob = new Blob([fileContent], {\\n            type: \\"application/msword;charset=utf-8\\"\\n        });\\n        const url = URL.createObjectURL(blob);\\n        const a = document.createElement(\'a\');\\n        a.setAttribute(\'href\', url);\\n        a.setAttribute(\'download\', `${pagetitle}.doc`);\\n        a.style.visibility = \'hidden\';\\n        document.body.appendChild(a);\\n        a.click();\\n        document.body.removeChild(a);\\n        if (!!callback) {\\n            callback();\\n        }\\n    }\\n\\n    downloadDom(dom: HTMLElement, fileName: string) {\\n        return html2canvas(dom).then((canvas: any) => {\\n            canvas.toBlob((blob: string) => {\\n                const href = window.URL.createObjectURL(new Blob([blob]))\\n                const link = document.createElement(\'a\')\\n                link.href = href;\\n                link.download = `${fileName}.png`;\\n                document.body.appendChild(link)\\n                link.click()\\n                document.body.removeChild(link)\\n            }, \'image/png\')\\n        })\\n    }\\n\\n    // 处理文件类型\\n    public setFilesType(filesList: { sourceName: string, fileType: string }[]): { sourceName: string, fileType: string }[] {\\n        const regPic = /\\\\.(?:jpeg|png|gif|jpg)/i;\\n        const regDoc = /\\\\.(?:doc|docx)/i;\\n        const regXls = /\\\\.(?:xls|xlsx)/i;\\n        const newFileLists = filesList.map((item) => {\\n            if (regPic.test(item.sourceName)) {\\n                item.fileType = \'img\';\\n            } else if (regDoc.test(item.sourceName)) {\\n                item.fileType = \'doc\';\\n            } else if (regXls.test(item.sourceName)) {\\n                item.fileType = \'xls\';\\n            }\\n            return item;\\n        });\\n        return newFileLists;\\n    }\\n\\n    private prepareHeaders(): HttpHeaders {\\n        const headers = new HttpHeaders({ \'Content-Type\': \'application/json\' });\\n\\n        if (this.signatureToken) {\\n            const authorization = `Bearer ${this.signatureToken}`;\\n            headers.set(\'Authorization\', authorization);\\n        }\\n        return headers;\\n    }\\n\\n\\n    private exportPDF(element: any) {\\n        return html2canvas(element, { scale: 1, logging: false, backgroundColor: \'#FFFFFF\' })\\n            .then((canvas) => {\\n                const pdf = new JSPDF(\\"p\\", \\"mm\\", \\"a4\\") // A4纸，纵向\\n                const ctx = canvas.getContext(\\"2d\\");\\n                //未生成pdf的html页面高度\\n                let htmlHeight = canvas.height;\\n                const a4w = 190;\\n                const a4h = 257 // A4大小，210mm x 297mm，四边各保留20mm的边距\\n                const imgHeight = Math.floor(a4h * canvas.width / a4w) // 按A4显示比例换算一页图像的像素高度\\n                let renderedHeight = 0;\\n                let index = 0;\\n                //pdf页面偏移\\n                let position = 0;\\n                let canvas1 = document.createElement(\\"canvas\\");\\n                let pageData = canvas.toDataURL(\'image/jpeg\', 1.0)\\n\\n\\n                //当内容未超过pdf一页显示的范围，无需分页\\n                if (htmlHeight < imgHeight) {\\n                    pdf.addImage(\\n                        pageData,\\n                        \'JPEG\',\\n                        10,\\n                        10,\\n                        a4w, Math.min(a4h, a4w * canvas1.height / canvas1.width)\\n                    );\\n                    return pdf;\\n                } else {\\n                    try {\\n                        pdf.deletePage(0)\\n                        return this.createImpl(canvas, index, pdf, htmlHeight, imgHeight, position, canvas1);\\n                    } catch (err) {\\n                        return pdf;\\n                    }\\n                }\\n            })\\n    }\\n    private createImpl(\\n        canvas: any, index: number, pdf: any, htmlHeight: number, imgHeight: number,\\n        position: number,\\n        canvas1: any): any {\\n        const a4Width = 595.28\\n        const a4Height = 841.89 //A4大小，210mm x 297mm，四边各保留10mm的边距，显示区域190x277\\n        const a4w = 190;\\n        const a4h = 257 // A4大小，210mm x 297mm，四边各保留20mm的边距\\n        let height = 0;\\n        if (htmlHeight > 0) {\\n            index++;\\n            let checkCount = 0\\n            //设置背景色为白色，然后转成图片后，获取截断处图片像素点，从截断处往上一行行扫描像素点颜色，\\n            //碰到这一行颜色都是全白的，代表是从这里开始截断，将这个高度开始将往下的内容都放到下一页\\n            if (htmlHeight > imgHeight) {\\n                let i = position + imgHeight;\\n                for (i; i >= position; i--) {\\n                    let isNullLine = true; // 是否是空白像素行\\n                    for (var j = 0; j < canvas.width; j++) {\\n                        let c = canvas.getContext(\'2d\').getImageData(j, i, 1, 1).data\\n\\n                        if (c[0] != 0xff || c[1] != 0xff || c[2] != 0xff) {\\n                            isNullLine = false; // 只要有一个像素点不是白色，就代表该像素行是连续的\\n                            break\\n                        }\\n                    }\\n                    if (isNullLine) {\\n                        checkCount++;\\n                        if (checkCount >= 10) { // 连续超过10个空白像素行就换页\\n                            break\\n                        }\\n                    } else {\\n                        checkCount = 0\\n                    }\\n                }\\n                height = Math.round(i - position) || Math.min(htmlHeight, imgHeight)\\n                if (height <= 0) {\\n                    height = imgHeight\\n                }\\n            } else {\\n                height = htmlHeight\\n            }\\n\\n            canvas1.width = canvas.width;\\n            canvas1.height = height;\\n\\n\\n            let ctx = canvas1.getContext(\'2d\');\\n            if (!ctx) return;\\n\\n            ctx.drawImage(\\n                canvas,\\n                0,\\n                position,\\n                canvas.width,\\n                height,\\n                0,\\n                0,\\n                canvas.width,\\n                height,\\n            )\\n\\n            var pageHeight = Math.round((a4Width / canvas.width) * height)\\n            // pdf.setPageSize(null, pageHeight)\\n            if (position != 0) {\\n                pdf.addPage()\\n            }\\n            pdf.addImage(\\n                canvas1.toDataURL(\'image/jpeg\', 1.0),\\n                \'JPEG\',\\n                10,\\n                10,\\n                a4w, Math.min(a4h, a4w * canvas1.height / canvas1.width)\\n            )\\n            htmlHeight -= height\\n            position += height\\n            if (htmlHeight > 0) {\\n                return this.createImpl(canvas, index, pdf, htmlHeight, imgHeight, position, canvas1);\\n            } else {\\n                // if (!!callback) {\\n                //     callback();\\n                // }\\n                // pdf.save(pdfName + \'.pdf\')\\n                return pdf;\\n            }\\n        } else {\\n            return pdf;\\n        }\\n    }\\n}","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"signatureToken":{"name":"signatureToken","getSignature":{"name":"signatureToken","type":"","returnType":"string | null","line":11}}},"extends":[],"type":"injectable"},{"name":"MyModalService","id":"injectable-MyModalService-a6f8a52c9666306eb17ccab86eabdebbe592f2a9184c32c373ac01cd7e68bd7a32c1b63d69694b42535e814c1865c8c24dec138a7335756ccc3599e8c3e2bd3a","file":"src/services/modal.service.ts","properties":[],"methods":[{"name":"confirm","args":[{"name":"nzTitle","type":"string","deprecated":false,"deprecationMessage":""},{"name":"nzContent","type":"string | TemplateRef<NzSafeAny>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"nzTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"nzContent","type":"string | TemplateRef<NzSafeAny>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"create","args":[{"name":"tplTitle","type":"string","deprecated":false,"deprecationMessage":""},{"name":"tplContent","type":"string | TemplateRef<NzSafeAny>","deprecated":false,"deprecationMessage":""},{"name":"nzComponentParams","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{}"},{"name":"functions","type":"any[]","deprecated":false,"deprecationMessage":""},{"name":"modalOptions","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"tplTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tplContent","type":"string | TemplateRef<NzSafeAny>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"nzComponentParams","type":"object","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}},{"name":"functions","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"modalOptions","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, TemplateRef } from \\"@angular/core\\";\\nimport { NzModalService } from \\"ng-zorro-antd/modal\\";\\nimport { NzI18nService } from \\"ng-zorro-antd/i18n\\";\\nimport { NzSafeAny } from \\"ng-zorro-antd/core/types\\";\\n@Injectable({ providedIn: \'root\' })\\nexport class MyModalService {\\n  constructor(private _nzModal: NzModalService, private _nzI18nService: NzI18nService) { }\\n\\n  public create(tplTitle: string, tplContent: string | TemplateRef<NzSafeAny>, nzComponentParams = {}, functions: any[], modalOptions?: any) {\\n    const [disabledSubmit, submitCallback] = functions;\\n    const _modal = this._nzModal.create({\\n      nzTitle: tplTitle,\\n      nzContent: tplContent,\\n      nzMaskClosable: false,\\n      nzClosable: false,\\n      nzAutofocus: false,\\n      ...modalOptions,\\n      nzComponentParams: nzComponentParams,\\n      nzFooter: !!modalOptions && \'nzFooter\' in modalOptions\\n        ? modalOptions.nzFooter\\n        : [\\n          {\\n            label: this._nzI18nService.translate(\'Modal.cancelText\'),\\n            onClick: () => {\\n              _modal.destroy(false);\\n            }\\n          },\\n          {\\n            label: this._nzI18nService.translate(\'Modal.okText\'),\\n            type: \'primary\',\\n            disabled: disabledSubmit ? disabledSubmit : false,\\n            onClick: async () => {\\n              if (submitCallback) {\\n                _modal.updateConfig({ nzOkLoading: true });\\n                const res = await submitCallback();\\n                if (!!res) {\\n                  _modal.updateConfig({ nzOkLoading: false });\\n                  _modal.destroy(true);\\n                }\\n              } else {\\n                _modal.destroy(true);\\n              }\\n            }\\n          }\\n        ]\\n    });\\n    return _modal;\\n  }\\n\\n  public confirm(nzTitle: string, nzContent: string | TemplateRef<NzSafeAny>) {\\n    return new Promise((resolve) => {\\n      return this._nzModal.confirm({\\n        nzTitle, nzContent,\\n        nzOkDanger: true,\\n        nzOnCancel: () => resolve(false),\\n        nzOnOk: () => resolve(true)\\n      })\\n    })\\n  }\\n}","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_nzModal","type":"NzModalService","deprecated":false,"deprecationMessage":""},{"name":"_nzI18nService","type":"NzI18nService","deprecated":false,"deprecationMessage":""}],"line":6,"jsdoctags":[{"name":"_nzModal","type":"NzModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_nzI18nService","type":"NzI18nService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"MyValidators","id":"class-MyValidators-55ec6f9a42e49020cf27a16acf042164b38bec887f104f62b36cf42f2a2ab4f8d07e12287938a22e3271ca027576f31419e3571c3c29447dbc31e252a19e2110","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Validators, AbstractControl, ValidationErrors, ValidatorFn } from \'@angular/forms\';\\nimport { NzSafeAny } from \\"ng-zorro-antd/core/types\\";\\n\\nexport const REGEXP = {\\n  phoneNumber: /^1[3-9]\\\\d{9}$/,\\n  landlineAndPhone: /^((0\\\\d{2,3}-\\\\d{7,8})|(1[3-9]\\\\d{9}))$/,\\n  nonNegativeInteger: /^\\\\d+$/,\\n  positiveInteger: /^[1-9]\\\\d*$/,\\n  decimalNumber: /^[0-9]+(\\\\.[0-9]+)?$/,\\n  empty: /^\\\\s+$/,\\n  onlyChinese: /^[\\\\u4e00-\\\\u9fa5_a-zA-Z]+$/,\\n  certificateCode: /(^[1-9]\\\\d{5}(18|19|([23]\\\\d))\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$)|(^[1-9]\\\\d{5}\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{2}[0-9Xx]$)/,\\n  mailbox: /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z.]{2,6})$/\\n};\\n\\nexport interface ISelectorOption<T = number, U = unknown> {\\n  label: string;\\n  value: T;\\n  extra?: U;\\n  checked?: boolean;\\n  disabled?: boolean;\\n}\\n\\n/**\\n * 输入框不能为空（包括空白字符）\\n */\\nexport function noEmptyValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'noEmpty\': { value } };\\n\\n    return !value || REGEXP.empty.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function checkListRequireValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value as ISelectorOption[] || [];\\n    const errorTip = { \'requireChecked\': { value } };\\n\\n    return value && value.some((item) => item.checked) ? null : errorTip;\\n  };\\n}\\n\\nexport function nonNegativeIntegerValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'nonNegativeInteger\': { value } };\\n\\n    return value && REGEXP.nonNegativeInteger.test(value) ? null : errorTip;\\n  };\\n}\\n\\nexport function onlyChineseValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'onlyChinese\': { value } };\\n    return value && !REGEXP.onlyChinese.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function phoneNumberValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'phoneNumber\': { value } };\\n\\n    return value && !REGEXP.phoneNumber.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function landlineAndPhoneValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'landlineAndPhone\': { value } };\\n    return value && !REGEXP.landlineAndPhone.test(value) ? errorTip : null;\\n  };\\n}\\n\\n\\nexport function certificateCodeValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'certificateCode\': { value } };\\n    return value && !REGEXP.certificateCode.test(value) ? errorTip : null;\\n  };\\n}\\n\\nexport function positiveIntegerValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'positiveInteger\': { value } };\\n\\n    return value && REGEXP.positiveInteger.test(value) ? null : errorTip;\\n  };\\n}\\n\\nexport function decimalNumberValidator(): ValidatorFn {\\n  return (control: AbstractControl): ValidationErrors | null => {\\n    const value = control.value;\\n    const errorTip = { \'decimalNumber\': { value } };\\n\\n    return value && REGEXP.decimalNumber.test(value) ? null : errorTip;\\n  };\\n}\\n\\n// 自定义表单校验\\nexport type MyErrorsOptions = { \'zh-cn\': string; en: string } & Record<\\n  string,\\n  NzSafeAny\\n>;\\nexport type MyValidationErrors = Record<string, MyErrorsOptions>;\\n\\n\\nexport class MyValidators extends Validators {\\n  static override minLength(minLength: number): ValidatorFn {\\n    return (control: AbstractControl): MyValidationErrors | null => {\\n      if (Validators.minLength(minLength)(control) === null) {\\n        return null;\\n      }\\n      return {\\n        minlength: {\\n          \'zh-cn\': `最小长度为 ${minLength}`,\\n          en: `MinLength is ${minLength}`,\\n        },\\n      };\\n    };\\n  }\\n\\n  static override maxLength(maxLength: number): ValidatorFn {\\n    return (control: AbstractControl): MyValidationErrors | null => {\\n      if (Validators.maxLength(maxLength)(control) === null) {\\n        return null;\\n      }\\n      return {\\n        maxlength: {\\n          \'zh-cn\': `最大长度为 ${maxLength}`,\\n          en: `MaxLength is ${maxLength}`,\\n        },\\n      };\\n    };\\n  }\\n  static myName(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n    if (/^[ ]*$/g.test(value)) {\\n      return {\\n        name: { \'zh-cn\': `姓名不可为空`, en: `usernName Cannot be empty` },\\n      };\\n    } else {\\n      return null;\\n    }\\n  }\\n  static mobile(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n\\n    if (isEmptyInputValue(value)) {\\n      return null;\\n    }\\n\\n    return isMobile(value)\\n      ? null\\n      : {\\n        phoneNumber: {\\n          \'zh-cn\': `手机号码格式不正确`,\\n          en: `Mobile phone number is not valid`,\\n        },\\n      };\\n  }\\n  static socialUnifiedCode(control: AbstractControl): MyValidationErrors | null {\\n    const value = control.value;\\n    if (!/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/.test(value)) {\\n      return {\\n        name: { \'zh-cn\': `社会信用代码格式错误`, en: `invalid socialUnifiedCode` },\\n      };\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  // 检验身份证\\n  static validateIdCardNo(idCard: string): MyValidationErrors | null {\\n    let isValidCard: boolean = false;\\n    // 15位和18位身份证号码的正则表达式\\n    const regIdCard = /^(^[1-9]\\\\d{7}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}$)|(^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])((\\\\d{4})|\\\\d{3}[Xx])$)$/;\\n    // 如果通过该验证，说明身份证格式正确，但准确性还需计算\\n    if (regIdCard.test(idCard)) {\\n      if (idCard.length === 18) {\\n        // 将前17位加权因子保存在数组里\\n        const idCardWi = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);\\n        // 这是除以11后，可能产生的11位余数、验证码，也保存成数组\\n        const idCardY = new Array(1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2);\\n        // 用来保存前17位各自乖以加权因子后的总和\\n        let idCardWiSum = 0;\\n\\n        for (let i = 0; i < 17; i++) {\\n          idCardWiSum += +(idCard.substring(i, i + 1)) * idCardWi[i];\\n        }\\n\\n        // 计算出校验码所在数组的位置\\n        const idCardMod = idCardWiSum % 11;\\n        // 得到最后一位身份证号码\\n        const idCardLast = idCard.substring(17);\\n        // 如果等于2，则说明校验码是10，身份证号码最后一位应该是X\\n        if (+idCardMod === 2) {\\n          if (idCardLast === \'X\' || idCardLast === \'x\') {\\n            // alert(\\"恭喜通过验证啦！\\");\\n            isValidCard = true;\\n          }\\n        } else {\\n          // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\\n          if (+idCardLast === idCardY[idCardMod]) {\\n            // alert(\\"恭喜通过验证啦！\\");\\n            isValidCard = true;\\n          }\\n        }\\n      }\\n    }\\n\\n    return isValidCard ? null : {\\n      name: { \'zh-cn\': `您输入的身份证号格式有误`, en: `invalid idCardNo` },\\n    };;\\n  }\\n\\n  static mailboxValidator(): ValidatorFn {\\n    return (control: AbstractControl): ValidationErrors | null => {\\n      const value = control.value;\\n      const errorTip = { \'mailbox\': { value } };\\n\\n      return value && !REGEXP.mailbox.test(value) ? errorTip : null;\\n    };\\n  }\\n}\\n\\nfunction isEmptyInputValue(value: NzSafeAny): boolean {\\n  return value == null || value.length === 0;\\n}\\n\\nfunction isMobile(value: string): boolean {\\n  return typeof value === \'string\' && /^1(3[0-9]|4[01456879]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\\\\d{8}$/.test(value);\\n}","inputsClass":[],"outputsClass":[],"properties":[],"methods":[{"name":"mailboxValidator","args":[],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":223,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"maxLength","args":[{"name":"maxLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[126,164],"jsdoctags":[{"name":"maxLength","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"minLength","args":[{"name":"minLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[126,164],"jsdoctags":[{"name":"minLength","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mobile","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MyValidationErrors | null","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"myName","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MyValidationErrors | null","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"socialUnifiedCode","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MyValidationErrors | null","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"validateIdCardNo","args":[{"name":"idCard","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MyValidationErrors | null","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"idCard","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":["Validators"],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"BallParabolaDirective","id":"directive-BallParabolaDirective-1729f61054b19e27a416c2d0c86e7108fa9702d8000fda76fa61f175e1e0a19b5b184c78f8c1a8623317ff48373bf5c52c291b3a4869fd3e7e870fa386154441","file":"src/directives/ball-parabola.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { DOCUMENT } from \'@angular/common\';\\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, Inject, Input, Optional, Output, OnDestroy } from \'@angular/core\';\\nimport { fromEvent, Subscription } from \'rxjs\';\\nimport { distinctUntilChanged } from \'rxjs/operators\';\\n\\n@Directive({\\n  selector: \'[appBallParabola]\',\\n})\\nexport class BallParabolaDirective implements AfterViewInit, OnDestroy {\\n  /** 控制抛物线动画是否启用 */\\n  @Input() public isAnimationEnabled: boolean = false;\\n\\n  /** 目标元素的 DOM ID */\\n  @Input() public targetDomId: string;\\n\\n  /** 抛物线动画完成时触发的事件 */\\n  @Output() public finishParabola: EventEmitter<void> = new EventEmitter<void>();\\n\\n  /** 点击事件订阅 */\\n  private clickSubscription: Subscription | null = null;\\n\\n  /** 动画小球的样式配置 */\\n  private readonly BALL_STYLES = {\\n    initial: {\\n      width: \'14px\',\\n      height: \'14px\',\\n      borderRadius: \'7px\',\\n      backgroundColor: \'red\',\\n      position: \'absolute\',\\n      transition: \'left 1s, top 1s\'\\n    },\\n    final: {\\n      width: \'6px\',\\n      height: \'6px\',\\n      borderRadius: \'3px\',\\n      transition: \'left 1s ease-in, top 0.6s linear, width 0.7s linear, height 0.7s linear, borderRadius 0.7s linear\'\\n    }\\n  };\\n\\n  /** 动画时间配置（毫秒） */\\n  private readonly ANIMATION_TIMING = {\\n    initialDelay: 20,\\n    duration: 1500\\n  };\\n\\n  constructor(\\n    private readonly elementRef: ElementRef,\\n    @Optional() @Inject(DOCUMENT) private readonly document: Document\\n  ) {}\\n\\n  /**\\n   * 组件初始化后，根据动画开关状态决定是否监听点击事件\\n   */\\n  public ngAfterViewInit(): void {\\n    this.updateClickSubscription();\\n  }\\n\\n  /**\\n   * 组件销毁时，清理订阅\\n   */\\n  public ngOnDestroy(): void {\\n    this.unsubscribeClick();\\n  }\\n\\n  /**\\n   * 更新点击事件订阅状态\\n   */\\n  private updateClickSubscription(): void {\\n    this.unsubscribeClick();\\n\\n    if (this.isAnimationEnabled) {\\n      this.clickSubscription = fromEvent<MouseEvent>(this.elementRef.nativeElement, \'click\')\\n        .pipe(distinctUntilChanged())\\n        .subscribe((event) => {\\n          this.createParabolaBall(event);\\n        });\\n    }\\n  }\\n\\n  /**\\n   * 取消点击事件订阅\\n   */\\n  private unsubscribeClick(): void {\\n    if (this.clickSubscription) {\\n      this.clickSubscription.unsubscribe();\\n      this.clickSubscription = null;\\n    }\\n  }\\n\\n  /**\\n   * 创建并执行抛物线动画\\n   * @param event 点击事件对象\\n   */\\n  private createParabolaBall(event: MouseEvent): void {\\n    const ball = this.createBallElement();\\n    const targetElement = this.document.getElementById(this.targetDomId);\\n    \\n    if (!targetElement) {\\n      console.warn(`Target element with id \\"${this.targetDomId}\\" not found`);\\n      return;\\n    }\\n\\n    this.positionBall(ball);\\n    this.animateBall(ball, targetElement);\\n  }\\n\\n  /**\\n   * 创建动画小球元素\\n   */\\n  private createBallElement(): HTMLDivElement {\\n    const ball = this.document.createElement(\'div\');\\n    ball.className = \'parabola-ball\';\\n    Object.assign(ball.style, this.BALL_STYLES.initial);\\n    this.document.body.appendChild(ball);\\n    return ball;\\n  }\\n\\n  /**\\n   * 设置小球的初始位置\\n   * @param ball 小球元素\\n   */\\n  private positionBall(ball: HTMLDivElement): void {\\n    const originRect = this.elementRef.nativeElement.getBoundingClientRect();\\n    ball.style.top = `${originRect.top}px`;\\n    ball.style.left = `${originRect.left + originRect.width / 2}px`;\\n  }\\n\\n  /**\\n   * 执行小球动画\\n   * @param ball 小球元素\\n   * @param targetElement 目标元素\\n   */\\n  private animateBall(ball: HTMLDivElement, targetElement: HTMLElement): void {\\n    const targetRect = targetElement.getBoundingClientRect();\\n    \\n    // 设置最终位置和样式\\n    setTimeout(() => {\\n      Object.assign(ball.style, this.BALL_STYLES.final);\\n      ball.style.top = `${targetRect.top - 2}px`;\\n      ball.style.left = `${targetRect.left + targetRect.width - 3}px`;\\n    }, this.ANIMATION_TIMING.initialDelay);\\n\\n    // 清理动画元素\\n    setTimeout(() => {\\n      if (this.document.body.contains(ball)) {\\n        this.document.body.removeChild(ball);\\n      }\\n      this.finishParabola.emit();\\n    }, this.ANIMATION_TIMING.duration);\\n  }\\n}\\n","selector":"[appBallParabola]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[{"name":"isAnimationEnabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n控制抛物线动画是否启用","description":"<p>控制抛物线动画是否启用</p>\\n","line":22,"type":"boolean","decorators":[]},{"name":"targetDomId","deprecated":false,"deprecationMessage":"","rawdescription":"\\n目标元素的 DOM ID","description":"<p>目标元素的 DOM ID</p>\\n","line":25,"type":"string","decorators":[]}],"outputsClass":[{"name":"finishParabola","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n抛物线动画完成时触发的事件","description":"<p>抛物线动画完成时触发的事件</p>\\n","line":28,"type":"EventEmitter<void>"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"ANIMATION_TIMING","defaultValue":"{\\n    initialDelay: 20,\\n    duration: 1500\\n  }","deprecated":false,"deprecationMessage":"","type":"object","indexKey":"","optional":false,"description":"<p>动画时间配置（毫秒）</p>\\n","line":52,"rawdescription":"\\n动画时间配置（毫秒）","modifierKind":[123,148]},{"name":"BALL_STYLES","defaultValue":"{\\n    initial: {\\n      width: \'14px\',\\n      height: \'14px\',\\n      borderRadius: \'7px\',\\n      backgroundColor: \'red\',\\n      position: \'absolute\',\\n      transition: \'left 1s, top 1s\'\\n    },\\n    final: {\\n      width: \'6px\',\\n      height: \'6px\',\\n      borderRadius: \'3px\',\\n      transition: \'left 1s ease-in, top 0.6s linear, width 0.7s linear, height 0.7s linear, borderRadius 0.7s linear\'\\n    }\\n  }","deprecated":false,"deprecationMessage":"","type":"object","indexKey":"","optional":false,"description":"<p>动画小球的样式配置</p>\\n","line":34,"rawdescription":"\\n动画小球的样式配置","modifierKind":[123,148]},{"name":"clickSubscription","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"Subscription | null","indexKey":"","optional":false,"description":"<p>点击事件订阅</p>\\n","line":31,"rawdescription":"\\n点击事件订阅","modifierKind":[123]}],"methodsClass":[{"name":"animateBall","args":[{"name":"ball","type":"HTMLDivElement","deprecated":false,"deprecationMessage":""},{"name":"targetElement","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n执行小球动画\\n","description":"<p>执行小球动画</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3441,"end":3445,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"ball"},"type":"HTMLDivElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":3435,"end":3440,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>小球元素</p>\\n"},{"name":{"pos":3463,"end":3476,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"targetElement"},"type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":3457,"end":3462,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>目标元素</p>\\n"}]},{"name":"createBallElement","args":[],"optional":false,"returnType":"HTMLDivElement","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n创建动画小球元素\\n","description":"<p>创建动画小球元素</p>\\n","modifierKind":[123]},{"name":"createParabolaBall","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n创建并执行抛物线动画\\n","description":"<p>创建并执行抛物线动画</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2428,"end":2433,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"event"},"type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":2422,"end":2427,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>点击事件对象</p>\\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n组件初始化后，根据动画开关状态决定是否监听点击事件\\n","description":"<p>组件初始化后，根据动画开关状态决定是否监听点击事件</p>\\n","modifierKind":[125]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n组件销毁时，清理订阅\\n","description":"<p>组件销毁时，清理订阅</p>\\n","modifierKind":[125]},{"name":"positionBall","args":[{"name":"ball","type":"HTMLDivElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n设置小球的初始位置\\n","description":"<p>设置小球的初始位置</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3146,"end":3150,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"ball"},"type":"HTMLDivElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":3140,"end":3145,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>小球元素</p>\\n"}]},{"name":"unsubscribeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n取消点击事件订阅\\n","description":"<p>取消点击事件订阅</p>\\n","modifierKind":[123]},{"name":"updateClickSubscription","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n更新点击事件订阅状态\\n","description":"<p>更新点击事件订阅状态</p>\\n","modifierKind":[123]}],"extends":[],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":""}],"line":55,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"ChartAbstract","id":"directive-ChartAbstract-0b2db82dac4f0fa14a70dc0aa7b04a344e7aeef9df93563510e3d85fc272529a3631078dd058f2312acca3d372996e116436ebbb1922c6a903ded937ff63cc83","file":"library/AngularEcharts/components/chart.abstract.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { AfterViewInit, Directive } from \'@angular/core\';\\nimport * as echarts from \'echarts\';\\n\\n@Directive()\\nexport abstract class ChartAbstract implements AfterViewInit {\\n  protected option: echarts.EChartsOption = { ...BASE_OPTION };\\n  protected myChart!: echarts.ECharts;\\n  protected chartId: string = \'\';\\n  ngAfterViewInit() {\\n    window.addEventListener(\'resize\', (e) => {\\n      this.myChart.resize();\\n    });\\n  }\\n\\n  protected initChart() {\\n    this.myChart = echarts.init(document.getElementById(this.chartId) as HTMLDivElement);\\n  }\\n\\n}\\n\\nconst BASE_OPTION: echarts.EChartsOption = {\\n  grid: {},\\n  legend: {\\n    show: false,\\n  }\\n};","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"chartId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[124]},{"name":"myChart","deprecated":false,"deprecationMessage":"","type":"echarts.ECharts","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[124]},{"name":"option","defaultValue":"{ ...BASE_OPTION }","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","indexKey":"","optional":false,"description":"","line":6,"modifierKind":[124]}],"methodsClass":[{"name":"initChart","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[124]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["AfterViewInit"]},{"name":"DestroySubscription","id":"directive-DestroySubscription-094f9440da6751b94a12a454fc646434e2f77467c1d5feb77a69f6a5559b0abe02334780eee31fe3be46e86a6e7aa8e433a30708b629bbc9f2d8742214e47c01","file":"src/directives/destroy.subscription.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, OnDestroy } from \'@angular/core\';\\nimport { Subject } from \'rxjs\';\\n\\n// tslint:disable-next-line:directive-class-suffix\\n@Directive()\\nexport abstract class DestroySubscription implements OnDestroy {\\n  protected destroy$: Subject<unknown> = new Subject();\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next({});\\n    this.destroy$.complete();\\n  }\\n}\\n","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"destroy$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<>","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[124]}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[125]}],"extends":[],"implements":["OnDestroy"]},{"name":"EventSourceDirective","id":"directive-EventSourceDirective-1ef0d4760b01c73cbb3b95e9c119304287d6150a53e539b640e129cd7ece1837334b8872b56fd9b2c01ceb09ec8b77deed9b3222dd8273016edfde969b962d18","file":"src/directives/event-source/event-source.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive } from \'@angular/core\';\\nimport { takeUntil } from \'rxjs\';\\nimport { DestroySubscription } from \'../destroy.subscription\';\\nimport { EventSourceService } from \'./event-source.service\';\\nimport { last, cloneDeep } from \\"lodash\\";\\nimport { formatSreamMeta, IAppConversation, StreamEvent } from \'./typing\';\\n\\nexport interface IChatContext {\\n  loading: any;\\n  messages: any[];\\n  messageMap: Map<string, any>;\\n  currentConversation?: IAppConversation;\\n}\\n@Directive()\\nexport class EventSourceDirective extends DestroySubscription {\\n  constructor(protected _eventSourceService: EventSourceService) { super() }\\n\\n  chat(request: { url: string, body: any }, chatContext: IChatContext) {\\n    chatContext.messages.push(cloneDeep(request.body));\\n    const currentMessage = last(chatContext.messages);\\n    currentMessage.answerLoading = true;\\n\\n\\n    this._eventSourceService.connectToServerSentEvents(\\n      request.url, {\\n      method: \'POST\',\\n      headers: { \'Content-Type\': \'application/json\', \'Authorization\': `Bearer token` },\\n      body: JSON.stringify(request.body),\\n      withCredentials: true\\n    }\\n    ).pipe(\\n      takeUntil(this.destroy$)\\n    ).subscribe({\\n      next: data => this._handleEvent(data, chatContext),\\n      error: error => this._handleError(error, chatContext)\\n    })\\n  }\\n\\n  private _handleEvent(message: any, chatContext: IChatContext) {\\n    const currentMessage = last(chatContext.messages);\\n    const { event, message_id, conversation_id, task_id, workflow_run_id, answer = \'\', thought, code, data } = message;\\n    if (chatContext.currentConversation) {\\n      chatContext.currentConversation.id = conversation_id;\\n    }\\n    currentMessage.id = message_id;\\n    data && formatSreamMeta(data);\\n    switch (event) {\\n      case StreamEvent.WORKFLOW_STARTED:\\n        chatContext.messageMap.set(message_id, { workflow: data, nodeMap: new Map() })\\n        break;\\n      case StreamEvent.NODE_STARTED:\\n      case StreamEvent.NODE_FINISHED:\\n        chatContext.messageMap.get(message_id).nodeMap.set(data.node_id, data);\\n        break;\\n      case StreamEvent.AGENT_THOUGHT:\\n        currentMessage.thought = thought;\\n        if (!!thought) {\\n          currentMessage.answerLoading = false;\\n        }\\n        break;\\n      case StreamEvent.AGENT_MESSAGE:\\n      case StreamEvent.MESSAGE:\\n        currentMessage.answer = currentMessage.answer + answer;\\n        this._replaceInput(currentMessage);\\n        break;\\n      case StreamEvent.WORKFLOW_FINISHED:\\n        currentMessage.answer = data.outputs?.answer || \'\';\\n        currentMessage.answerLoading = false;\\n        break;\\n      case StreamEvent.MESSAGE_END:\\n        currentMessage.answerLoading = false;\\n        break;\\n      case StreamEvent.ERROR:\\n        currentMessage.answer += code || \'抱歉，服务器异常\';\\n        currentMessage.answerLoading = false;\\n        break;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  private _handleError(error: any, chatContext: IChatContext) {\\n    const currentMessage = last(chatContext.messages);\\n    currentMessage.answer = error?.message || \'抱歉，服务器异常\';\\n    currentMessage.answerLoading = false;\\n  }\\n\\n  private _replaceInput(message: any) {\\n    if (message?.answer) {\\n      const inputs = message.inputs || {};\\n      let answer = message.answer;\\n      Object.keys(inputs).forEach(key => {\\n        const regex = new RegExp(`{{${key}}}`, \'g\');\\n        answer = answer.replace(regex, inputs[key]);\\n      });\\n      message.answer = answer;\\n    }\\n  }\\n}\\n","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"destroy$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<>","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[124],"inheritance":{"file":"DestroySubscription"}}],"methodsClass":[{"name":"_handleError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_handleEvent","args":[{"name":"message","type":"any","deprecated":false,"deprecationMessage":""},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"message","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_replaceInput","args":[{"name":"message","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"message","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"chat","args":[{"name":"request","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"request","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"chatContext","type":"IChatContext","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"inheritance":{"file":"DestroySubscription"}}],"extends":["DestroySubscription"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_eventSourceService","type":"EventSourceService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"_eventSourceService","type":"EventSourceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"IntersectionObserverDirective","id":"directive-IntersectionObserverDirective-0af27f170ca604cccfa52ead1e5b3d4e644ef6d3f05b6dd97642b54379ea90ea843b3c87539c37b32b9e27284a6c004a768f69445eb9d501ebd2e9505e7c4eb0","file":"src/directives/intersectionObserver.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, EventEmitter, OnDestroy, Output } from \\"@angular/core\\";\\n\\n@Directive({\\n    selector: \'[appIntersectionObserver]\'\\n})\\nexport class IntersectionObserverDirective implements AfterViewInit, OnDestroy {\\n    @Output() public visible = new EventEmitter<void>();\\n    private intersectionObserver: IntersectionObserver; // Intersection Observer instance\\n\\n    constructor(private elementRef: ElementRef) {\\n        const callback = (entries: IntersectionObserverEntry[]) => {\\n            entries.forEach(({ intersectionRatio }) => {\\n                // Only emit when element is actually visible (intersectionRatio > 0)\\n                if (intersectionRatio > 0) {\\n                    this.visible.emit();\\n                }\\n            });\\n        };\\n        this.intersectionObserver = new IntersectionObserver(callback, { threshold: 0.1 });\\n    }\\n\\n    /**\\n     * Start observing the element after view initialization\\n     */\\n    public ngAfterViewInit(): void {\\n        this.intersectionObserver.observe(this.elementRef.nativeElement);\\n    }\\n\\n    /**\\n     * Clean up by disconnecting the observer when directive is destroyed\\n     */\\n    public ngOnDestroy(): void {\\n        this.intersectionObserver.disconnect();\\n    }\\n}","selector":"[appIntersectionObserver]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[{"name":"visible","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":29,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"intersectionObserver","deprecated":false,"deprecationMessage":"","type":"IntersectionObserver","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStart observing the element after view initialization\\n","description":"<p>Start observing the element after view initialization</p>\\n","modifierKind":[125]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClean up by disconnecting the observer when directive is destroyed\\n","description":"<p>Clean up by disconnecting the observer when directive is destroyed</p>\\n","modifierKind":[125]}],"extends":[],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":30,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"MutationObserverDirective","id":"directive-MutationObserverDirective-01a9ff57b32bacfa6033803767de9e2e223f323dc7a5a777b9d389d587c19932753c7cfe437bfc34aadee23b5598bfd2acbf33132e5f22c90432b14ddf67f4ca","file":"src/directives/mutationObserver.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, EventEmitter, OnDestroy, Output } from \\"@angular/core\\";\\n\\n@Directive({\\n    selector: \'[appMutationObserver]\'\\n})\\nexport class MutationObserverDirective implements AfterViewInit, OnDestroy {\\n    @Output() public mutationChange = new EventEmitter<MutationRecord>();\\n    private mutationObserver: MutationObserver;\\n    private readonly config: MutationObserverInit = {\\n        attributes: true,\\n        childList: true,\\n        subtree: false\\n    };\\n\\n    constructor(private elementRef: ElementRef) {\\n        const callback = (mutationList: MutationRecord[]) => {\\n            for (const mutation of mutationList) {\\n                if (mutation.type === \\"attributes\\" || mutation.type === \\"childList\\") {\\n                    this.mutationChange.emit(mutation);\\n                }\\n            }\\n        };\\n\\n        this.mutationObserver = new MutationObserver(callback);\\n    }\\n\\n    /**\\n     * Start observing the element after view initialization\\n     */\\n    public ngAfterViewInit(): void {\\n        this.mutationObserver.observe(this.elementRef.nativeElement, this.config);\\n    }\\n\\n    /**\\n     * Clean up by disconnecting the observer when directive is destroyed\\n     */\\n    public ngOnDestroy(): void {\\n        this.mutationObserver.disconnect();\\n    }\\n}\\n","selector":"[appMutationObserver]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[{"name":"mutationChange","defaultValue":"new EventEmitter<MutationRecord>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"config","defaultValue":"{\\n        attributes: true,\\n        childList: true,\\n        subtree: false\\n    }","deprecated":false,"deprecationMessage":"","type":"MutationObserverInit","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[123,148]},{"name":"mutationObserver","deprecated":false,"deprecationMessage":"","type":"MutationObserver","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStart observing the element after view initialization\\n","description":"<p>Start observing the element after view initialization</p>\\n","modifierKind":[125]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClean up by disconnecting the observer when directive is destroyed\\n","description":"<p>Clean up by disconnecting the observer when directive is destroyed</p>\\n","modifierKind":[125]}],"extends":[],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"PollingDirective","id":"directive-PollingDirective-02a697da667ef276d7b43ad8dfea6f6494072aae497b65738e6c07e6b8f81e7038a5af365e0d4fde67cf59d3c8c201d400f39b788ea872c333398f8fc73fe349","file":"src/directives/polling.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Input, OnDestroy } from \'@angular/core\';\\nimport { catchError, EMPTY, Observable, retry, Subscription, switchMap, takeWhile, timer } from \'rxjs\';\\n\\n@Directive()\\nexport class PollingDirective implements OnDestroy {\\n    /** 轮询间隔时间（毫秒），默认2秒 */\\n    @Input() interval: number = 2000;\\n\\n    /** 轮询的Observable流 */\\n    polling$: Observable<void>;\\n\\n    /** 订阅对象，用于管理轮询的订阅 */\\n    private subscription?: Subscription;\\n\\n    /** 是否正在轮询 */\\n    private _isPolling: boolean = false;\\n\\n    /**\\n     * 组件销毁时取消订阅，防止内存泄漏\\n     */\\n    ngOnDestroy(): void {\\n        this._stopPolling();\\n    }\\n\\n    /**\\n     * 设置轮询\\n     * \\n     * @param source 数据源Observable，每次轮询都会调用\\n     * @param minRetry 最小重试次数，当请求失败时重试\\n     * @param condition 轮询条件函数，返回true继续轮询，false停止轮询\\n     * @throws Error 如果轮询已经在进行中\\n     */\\n    protected polling(source: Observable<any>, minRetry: number, condition: (response: any) => boolean) {\\n        if (this._isPolling) {\\n            throw new Error(\'Polling is already in progress\');\\n        }\\n\\n        this._isPolling = true;\\n        \\n        // 创建定时器Observable，立即开始，每隔interval时间触发一次\\n        this.polling$ = timer(0, this.interval)\\n            .pipe(\\n                // 每次定时器触发时，切换到新的数据源Observable\\n                switchMap(() => {\\n                    return source.pipe(\\n                        // 请求失败时重试指定次数\\n                        retry(minRetry),\\n                        // 错误处理，发生错误时继续轮询\\n                        catchError(error => {\\n                            this.pollingError(error);\\n                            return EMPTY; // 返回空Observable，不终止流\\n                        })\\n                    );\\n                }),\\n                // 根据条件决定是否继续轮询\\n                takeWhile(\\n                    // 检查响应是否满足继续轮询的条件\\n                    response => this._isPolling && condition(response),\\n                    true // 包含最后一个符合条件的响应\\n                )\\n            );\\n    }\\n\\n    /**\\n     * 开始监听轮询结果\\n     * \\n     * @throws Error 如果轮询未设置\\n     */\\n    protected listenPolling() {\\n        if (!this.polling$) {\\n            throw new Error(\'Polling is not set up. Call polling() first.\');\\n        }\\n\\n        this.subscription = this.polling$.subscribe({\\n            next: (response) => this.pollingNext(response),\\n            error: (err) => this.pollingError(err),\\n            complete: () => this.pollingComplete()\\n        });\\n    }\\n\\n    /**\\n     * 处理轮询数据\\n     * \\n     * @param response 轮询返回的数据\\n     */\\n    protected pollingNext(response: any) {\\n        console.log(\'Polling response:\', response);\\n    }\\n\\n    /**\\n     * 处理轮询错误\\n     * \\n     * @param err 错误信息\\n     */\\n    protected pollingError(err: any) {\\n        console.error(\'Polling error:\', err);\\n        this._stopPolling();\\n    }\\n\\n    /**\\n     * 轮询完成时的处理\\n     */\\n    protected pollingComplete() {\\n        console.log(\'Polling completed\');\\n        this._isPolling = false;\\n    }\\n\\n    /**\\n     * 停止轮询\\n     */\\n    private _stopPolling() {\\n        this._isPolling = false;\\n        if (this.subscription) {\\n            this.subscription.unsubscribe();\\n            this.subscription = undefined;\\n        }\\n    }\\n}\\n","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[{"name":"interval","defaultValue":"2000","deprecated":false,"deprecationMessage":"","rawdescription":"\\n轮询间隔时间（毫秒），默认2秒","description":"<p>轮询间隔时间（毫秒），默认2秒</p>\\n","line":26,"type":"number","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_isPolling","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"<p>是否正在轮询</p>\\n","line":35,"rawdescription":"\\n是否正在轮询","modifierKind":[123]},{"name":"polling$","deprecated":false,"deprecationMessage":"","type":"Observable<void>","indexKey":"","optional":false,"description":"<p>轮询的Observable流</p>\\n","line":29,"rawdescription":"\\n轮询的Observable流"},{"name":"subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","indexKey":"","optional":true,"description":"<p>订阅对象，用于管理轮询的订阅</p>\\n","line":32,"rawdescription":"\\n订阅对象，用于管理轮询的订阅","modifierKind":[123]}],"methodsClass":[{"name":"_stopPolling","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n停止轮询\\n","description":"<p>停止轮询</p>\\n","modifierKind":[123]},{"name":"listenPolling","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n开始监听轮询结果\\n\\n","description":"<p>开始监听轮询结果</p>\\n","modifierKind":[124],"jsdoctags":[]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n组件销毁时取消订阅，防止内存泄漏\\n","description":"<p>组件销毁时取消订阅，防止内存泄漏</p>\\n"},{"name":"polling","args":[{"name":"source","type":"Observable<any>","deprecated":false,"deprecationMessage":""},{"name":"minRetry","type":"number","deprecated":false,"deprecationMessage":""},{"name":"condition","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"response","type":"any","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n设置轮询\\n\\n","description":"<p>设置轮询</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":987,"end":993,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"source"},"type":"Observable<any>","deprecated":false,"deprecationMessage":"","tagName":{"pos":981,"end":986,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>数据源Observable，每次轮询都会调用</p>\\n"},{"name":{"pos":1031,"end":1039,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"minRetry"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1025,"end":1030,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>最小重试次数，当请求失败时重试</p>\\n"},{"name":{"pos":1070,"end":1079,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"condition"},"type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"response","type":"any","deprecated":false,"deprecationMessage":""}],"tagName":{"pos":1064,"end":1069,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>轮询条件函数，返回true继续轮询，false停止轮询</p>\\n"}]},{"name":"pollingComplete","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n轮询完成时的处理\\n","description":"<p>轮询完成时的处理</p>\\n","modifierKind":[124]},{"name":"pollingError","args":[{"name":"err","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n处理轮询错误\\n\\n","description":"<p>处理轮询错误</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":2915,"end":2918,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"err"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2909,"end":2914,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>错误信息</p>\\n"}]},{"name":"pollingNext","args":[{"name":"response","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n处理轮询数据\\n\\n","description":"<p>处理轮询数据</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":2744,"end":2752,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"response"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2738,"end":2743,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>轮询返回的数据</p>\\n"}]}],"extends":[],"implements":["OnDestroy"]},{"name":"ScrollDirective","id":"directive-ScrollDirective-3ca19d6279033e15915433b85ec43fd86b6324c6c1a669996cbe7b215f1dfb68cdc6492a619ca82c1932cbf9b53cb55ec20d86fbb26035349c3055674282f736","file":"src/directives/scroll.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ElementRef, EventEmitter, HostListener, Output } from \'@angular/core\';\\n\\n@Directive({\\n  selector: \'[appScroll]\'\\n})\\nexport class ScrollDirective {\\n  @Output() scrollToTop = new EventEmitter<void>();\\n  @Output() scrollToBottom = new EventEmitter<void>();\\n\\n  private readonly threshold = 50; // 触发阈值，距离顶部或底部多少像素时触发\\n\\n  constructor(private elementRef: ElementRef) { }\\n\\n  @HostListener(\'scroll\', [\'$event\'])\\n  onScroll(event: Event): void {\\n    const element = event.target as HTMLElement;\\n    const scrollTop = element.scrollTop;\\n    const scrollHeight = element.scrollHeight;\\n    const clientHeight = element.clientHeight;\\n\\n    // 检查是否滚动到底部\\n    if (scrollHeight - scrollTop - clientHeight < this.threshold) {\\n      this.scrollToBottom.emit();\\n    }\\n\\n    // 检查是否滚动到顶部\\n    if (scrollTop < this.threshold) {\\n      this.scrollToTop.emit();\\n    }\\n  }\\n}","selector":"[appScroll]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[],"outputsClass":[{"name":"scrollToBottom","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":14,"type":"EventEmitter"},{"name":"scrollToTop","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":13,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"scroll","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":21}],"propertiesClass":[{"name":"threshold","defaultValue":"50","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[123,148]}],"methodsClass":[{"name":"onScroll","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'scroll\', [\'$event\']"}],"modifierKind":[170],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"TraceHighlightDirective","id":"directive-TraceHighlightDirective-21564b58e6ff622c70f160b34c65848963ba41d3d84abf87774f390be5ea4050fa27934f9d9ad2ecfbe97ead5bcb6eb93e97e53660cd34a591bcc08c543e0c85","file":"src/directives/trace-highlight.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ElementRef, EventEmitter, HostBinding, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges } from \'@angular/core\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\nimport { filter, takeUntil } from \'rxjs/operators\';\\n\\nexport interface ITraceHighLightConf {\\n  isShadowDom?: boolean;\\n  shadowDomElement?: HTMLElement;\\n  isDisabled?: boolean;\\n  onHighlight$: BehaviorSubject<any>;\\n}\\nexport interface ITraceSourceItemFrontend {\\n  keyword?: string;\\n  fieldName?: string;\\n}\\n\\n@Directive({\\n  selector: \'[traceHighlight]\',\\n  // standalone: true,\\n})\\nexport class TraceHighlightDirective implements OnChanges, OnInit, OnDestroy {\\n  @Input(\'traceHighlight\') highlightConf: ITraceHighLightConf;\\n  @Input() highlightId: string;\\n  @Output() hightTraceIdSetChange = new EventEmitter<Set<string>>();\\n\\n  @HostBinding(\'style.position\') public wrapperPos = \'relative\';\\n  public hightTraceIdSet = new Set<string>();\\n  public destroy$: Subject<void> = new Subject<void>();\\n  \\n  // 添加样式常量\\n  private readonly HIGHLIGHT_STYLES = {\\n    normal: {\\n      background: \'rgba(255, 242, 123, 0.3)\',\\n      border: \'1.5px dashed #FD8701\'\\n    },\\n    active: {\\n      background: \'rgba(7, 181, 249, 0.3)\',\\n      border: \'none\'\\n    }\\n  } as const;\\n\\n  constructor(\\n    private elRef: ElementRef,\\n    private render: Renderer2\\n  ) { }\\n\\n  public ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\'highlightId\'] && this.highlightId) {\\n      const element = document.getElementById(this.highlightId);\\n      if (!element) return;\\n\\n      this.activeAndScrollToCurPoint(element as HTMLElement);\\n    }\\n  }\\n\\n  public ngOnInit(): void {\\n    if (this.highlightConf?.isDisabled) return;\\n    this.highlightConf.onHighlight$.pipe(\\n      takeUntil(this.destroy$),\\n      filter(value => value !== false)\\n    ).subscribe((value: any) => {\\n      // 清除所有高亮\\n      this.clearAllHighlights();\\n      value.forEach((point: ITraceSourceItemFrontend) => this.handleTracePoint(point));\\n      this.hightTraceIdSetChange.emit(this.hightTraceIdSet)\\n    });\\n  }\\n\\n  public ngOnDestroy(): void {\\n    this.destroy$.next();\\n    this.destroy$.complete();\\n  }\\n\\n  /**\\n   * 根据单个溯源点信息进行DOM查找\\n   * @param tracePoint 单个溯源点信息\\n   */\\n  private handleTracePoint(tracePoint: ITraceSourceItemFrontend): void {\\n    // 兼容一些页面的样式偏移及shadowDom等的生成晚 在视图更新好后再进行高亮等的操作\\n    setTimeout(() => {\\n      const { isShadowDom, shadowDomElement } = this.highlightConf;\\n      // 兼容shadowDom元素的获取\\n      const walkerWrapper = isShadowDom ? shadowDomElement : this.elRef.nativeElement;\\n      if (!walkerWrapper) {\\n        return;\\n      }\\n      const { keyword, fieldName } = tracePoint;\\n      // 处理*等在正则中有特殊含义的字符转义\\n      // tslint:disable-next-line: newline-per-chained-call\\n      const regxStr = keyword?.replace(/([*+?$^.|\\\\\\\\\\\\)\\\\(])/g, \'\\\\\\\\$1\');\\n      const matchRegx = new RegExp(`${regxStr}`, \'g\');\\n\\n      // 对于关键字匹配方式直接查找匹配的Text节点\\n      this.searchMatchTextNode(walkerWrapper, matchRegx);\\n    });\\n  }\\n\\n  /**\\n   * 搜索指定元素下的匹配文本正则的文本节点，并循环进行相应处理\\n   * @param elementNode 要查找的HTML元素\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextNode(elementNode: Node, matchRegx: RegExp): void {\\n    const textNodeFilterFn = (node: Node) => {\\n      return node.nodeValue?.match(matchRegx) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\\n    };\\n    const textNodeWalker = document.createTreeWalker(elementNode, NodeFilter.SHOW_TEXT, textNodeFilterFn as any);\\n    // 元素节点下匹配的文本节点\\n    let curMatchTextNode = textNodeWalker.nextNode();\\n\\n    while (!!curMatchTextNode) {\\n\\n      this.searchMatchTextStr(curMatchTextNode, matchRegx);\\n\\n      curMatchTextNode = textNodeWalker.nextNode();\\n    }\\n  }\\n\\n  /**\\n   * 对匹配到的文本节点，需要通过正则查找到当前文本节点匹配的文本有哪些，并得出文本的具体位置\\n   * 然后才能对每个文本进行高亮的定位\\n   * @param textNode 匹配到的文本Node节点\\n   * @param matchRegx 需要匹配的文本正则\\n   */\\n  private searchMatchTextStr(textNode: Node, matchRegx: RegExp): void {\\n    const textNodeStr = textNode.textContent;\\n    let matchResult = matchRegx.exec(textNodeStr || \'\');\\n\\n    while (!!matchResult) {\\n      const startIndex = matchResult?.index;\\n      const endIndex = matchRegx?.lastIndex;\\n      // 根据需要高亮的文本节点以及正则查找获得的文本起始高亮位置进行高亮操作\\n      this.highlightTextRange(textNode, startIndex, endIndex);\\n\\n      matchResult = matchRegx.exec(textNodeStr || \'\');\\n    }\\n  }\\n\\n  /**\\n   * 高亮匹配到的溯源文本\\n   * @param textNode 需要高亮的文本节点\\n   * @param startIndex 高亮文本节点开始下标\\n   * @param endIndex 高亮文本节点结束下标\\n   */\\n  private highlightTextRange(textNode: Node, startIndex: number, endIndex: number): void {\\n    try {\\n      const range = this.createRange(textNode, startIndex, endIndex);\\n      const rects = this.getHighlightRects(range, textNode);\\n      const highlightElement = this.createHighlightElement(rects);\\n      this.elRef.nativeElement.appendChild(highlightElement);\\n    } catch (err) {\\n      console.error(`${textNode}, 溯源文本高亮失败，错误信息：${err}`);\\n    }\\n  }\\n\\n  /**\\n   * 创建文本范围\\n   */\\n  private createRange(textNode: Node, startIndex: number, endIndex: number): Range {\\n    const range = document.createRange();\\n    range.setStart(textNode, startIndex);\\n    range.setEnd(textNode, endIndex);\\n    return range;\\n  }\\n\\n  /**\\n   * 获取高亮区域的位置信息\\n   */\\n  private getHighlightRects(range: Range, textNode: Node): {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  } {\\n    const clientRect = range.getBoundingClientRect();\\n    const elementClientRect = textNode.parentElement?.getBoundingClientRect() || clientRect;\\n    const wrapperClientRect = this.elRef.nativeElement.getBoundingClientRect();\\n    return { clientRect, elementClientRect, wrapperClientRect };\\n  }\\n\\n  /**\\n   * 创建高亮元素\\n   */\\n  private createHighlightElement(rects: {\\n    clientRect: DOMRect;\\n    elementClientRect: DOMRect;\\n    wrapperClientRect: DOMRect;\\n  }): HTMLElement {\\n    // 使用 DocumentFragment 减少 DOM 操作\\n    const fragment = document.createDocumentFragment();\\n    const highLightElement = this.render.createElement(\'div\');\\n    fragment.appendChild(highLightElement);\\n\\n    // 使用 requestAnimationFrame 优化样式计算和渲染\\n    requestAnimationFrame(() => {\\n      const { clientRect, elementClientRect, wrapperClientRect } = rects;\\n      const highLightStyle = highLightElement.style;\\n\\n      // 设置高亮元素ID和样式\\n      highLightElement.id = this.generateHighlightId();\\n      this.hightTraceIdSet.add(highLightElement.id);\\n      highLightElement.className = \'highlight-mask\';\\n\\n      // 计算位置和尺寸\\n      const { left, top, width, height } = clientRect;\\n      const { width: parentWidth, left: parentLeft, right: parentRight } = elementClientRect;\\n      const { left: wrapperLeft, top: wrapperTop } = wrapperClientRect;\\n\\n      // 处理溢出情况\\n      const isOverflow = left > parentRight;\\n      const highLightLeft = isOverflow ? parentLeft - wrapperLeft : left - wrapperLeft;\\n      const highLightWidth = isOverflow ? parentWidth : width;\\n      const highLightTop = top - wrapperTop;\\n\\n      // 批量设置样式\\n      Object.assign(highLightStyle, {\\n        position: \'absolute\',\\n        left: `${highLightLeft}px`,\\n        top: `${highLightTop}px`,\\n        width: `${highLightWidth}px`,\\n        height: `${height}px`,\\n        maxWidth: `${parentWidth - (highLightLeft - (parentLeft - wrapperLeft))}px`,\\n        pointerEvents: \'none\',\\n        lineHeight: `${height}px`,\\n        ...this.HIGHLIGHT_STYLES.normal\\n      });\\n\\n      // 将元素添加到 DOM\\n      this.elRef.nativeElement.appendChild(fragment);\\n    });\\n\\n    return highLightElement;\\n  }\\n\\n  /**\\n   * 生成唯一的高亮ID\\n   */\\n  private generateHighlightId(): string {\\n    // 使用更高效的 ID 生成方式\\n    return `hl-${performance.now().toString(36)}`;\\n  }\\n\\n  /**\\n   * 高亮并定位至当前指向的溯源点\\n   * @param curActiveElement 当前定位的溯源点遮罩层元素\\n   */\\n  private activeAndScrollToCurPoint(curActiveElement?: HTMLElement): void {\\n    if (!curActiveElement) return;\\n\\n    // 使用 requestAnimationFrame 优化滚动和高亮\\n    requestAnimationFrame(() => {\\n      // 重置其它溯源点样式状态\\n      const highlightElements: HTMLElement[] = Array.from(document.querySelectorAll(\'.highlight-mask\'));\\n      highlightElements.forEach(element => {\\n        Object.assign(element.style, this.HIGHLIGHT_STYLES.normal);\\n      });\\n\\n      // 滚动并高亮当前溯源点\\n      curActiveElement.scrollIntoView({ behavior: \'smooth\', block: \'center\' });\\n      Object.assign(curActiveElement.style, this.HIGHLIGHT_STYLES.active);\\n    });\\n  }\\n\\n  /**\\n   * 清除所有高亮元素\\n   */\\n  private clearAllHighlights(): void {\\n    // 使用 requestAnimationFrame 优化清除操作\\n    requestAnimationFrame(() => {\\n      const wrapperElement = this.elRef.nativeElement;\\n      const highlightElements = wrapperElement.querySelectorAll(\'.highlight-mask\');\\n      \\n      // 使用 DocumentFragment 批量移除元素\\n      const fragment = document.createDocumentFragment();\\n      highlightElements.forEach((element: Element) => {\\n        fragment.appendChild(element);\\n      });\\n      \\n      // 清空 Set\\n      this.hightTraceIdSet.clear();\\n    });\\n  }\\n}\\n\\n","selector":"[traceHighlight]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[{"name":"highlightId","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"traceHighlight","deprecated":false,"deprecationMessage":"","line":21,"type":"ITraceHighLightConf","decorators":[]}],"outputsClass":[{"name":"hightTraceIdSetChange","defaultValue":"new EventEmitter<Set<string>>()","deprecated":false,"deprecationMessage":"","line":23,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.position","defaultValue":"\'relative\'","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[{"name":"destroy$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[125]},{"name":"HIGHLIGHT_STYLES","defaultValue":"{\\n    normal: {\\n      background: \'rgba(255, 242, 123, 0.3)\',\\n      border: \'1.5px dashed #FD8701\'\\n    },\\n    active: {\\n      background: \'rgba(7, 181, 249, 0.3)\',\\n      border: \'none\'\\n    }\\n  } as const","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[123,148]},{"name":"hightTraceIdSet","defaultValue":"new Set<string>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[125]},{"name":"wrapperPos","defaultValue":"\'relative\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":25,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.position\'"}],"modifierKind":[170,125]}],"methodsClass":[{"name":"activeAndScrollToCurPoint","args":[{"name":"curActiveElement","type":"HTMLElement","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":245,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n高亮并定位至当前指向的溯源点\\n","description":"<p>高亮并定位至当前指向的溯源点</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7549,"end":7565,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"curActiveElement"},"type":"HTMLElement","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":7543,"end":7548,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>当前定位的溯源点遮罩层元素</p>\\n"}]},{"name":"clearAllHighlights","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":265,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n清除所有高亮元素\\n","description":"<p>清除所有高亮元素</p>\\n","modifierKind":[123]},{"name":"createHighlightElement","args":[{"name":"rects","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"HTMLElement","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n创建高亮元素\\n","description":"<p>创建高亮元素</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"rects","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createRange","args":[{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":""},{"name":"startIndex","type":"number","deprecated":false,"deprecationMessage":""},{"name":"endIndex","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Range","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n创建文本范围\\n","description":"<p>创建文本范围</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"startIndex","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"endIndex","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateHighlightId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":236,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n生成唯一的高亮ID\\n","description":"<p>生成唯一的高亮ID</p>\\n","modifierKind":[123]},{"name":"getHighlightRects","args":[{"name":"range","type":"Range","deprecated":false,"deprecationMessage":""},{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"literal type","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n获取高亮区域的位置信息\\n","description":"<p>获取高亮区域的位置信息</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"range","type":"Range","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleTracePoint","args":[{"name":"tracePoint","type":"ITraceSourceItemFrontend","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n根据单个溯源点信息进行DOM查找\\n","description":"<p>根据单个溯源点信息进行DOM查找</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2171,"end":2181,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"tracePoint"},"type":"ITraceSourceItemFrontend","deprecated":false,"deprecationMessage":"","tagName":{"pos":2165,"end":2170,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>单个溯源点信息</p>\\n"}]},{"name":"highlightTextRange","args":[{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":""},{"name":"startIndex","type":"number","deprecated":false,"deprecationMessage":""},{"name":"endIndex","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n高亮匹配到的溯源文本\\n","description":"<p>高亮匹配到的溯源文本</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4284,"end":4292,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"textNode"},"type":"Node","deprecated":false,"deprecationMessage":"","tagName":{"pos":4278,"end":4283,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>需要高亮的文本节点</p>\\n"},{"name":{"pos":4315,"end":4325,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"startIndex"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4309,"end":4314,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>高亮文本节点开始下标</p>\\n"},{"name":{"pos":4349,"end":4357,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"endIndex"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4343,"end":4348,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>高亮文本节点结束下标</p>\\n"}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"searchMatchTextNode","args":[{"name":"elementNode","type":"Node","deprecated":false,"deprecationMessage":""},{"name":"matchRegx","type":"RegExp","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n搜索指定元素下的匹配文本正则的文本节点，并循环进行相应处理\\n","description":"<p>搜索指定元素下的匹配文本正则的文本节点，并循环进行相应处理</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2995,"end":3006,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"elementNode"},"type":"Node","deprecated":false,"deprecationMessage":"","tagName":{"pos":2989,"end":2994,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>要查找的HTML元素</p>\\n"},{"name":{"pos":3030,"end":3039,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"matchRegx"},"type":"RegExp","deprecated":false,"deprecationMessage":"","tagName":{"pos":3024,"end":3029,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>需要匹配的文本正则</p>\\n"}]},{"name":"searchMatchTextStr","args":[{"name":"textNode","type":"Node","deprecated":false,"deprecationMessage":""},{"name":"matchRegx","type":"RegExp","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n对匹配到的文本节点，需要通过正则查找到当前文本节点匹配的文本有哪些，并得出文本的具体位置\\n然后才能对每个文本进行高亮的定位\\n","description":"<p>对匹配到的文本节点，需要通过正则查找到当前文本节点匹配的文本有哪些，并得出文本的具体位置\\n然后才能对每个文本进行高亮的定位</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3722,"end":3730,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"textNode"},"type":"Node","deprecated":false,"deprecationMessage":"","tagName":{"pos":3716,"end":3721,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>匹配到的文本Node节点</p>\\n"},{"name":{"pos":3756,"end":3765,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"matchRegx"},"type":"RegExp","deprecated":false,"deprecationMessage":"","tagName":{"pos":3750,"end":3755,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>需要匹配的文本正则</p>\\n"}]}],"extends":[],"implements":["OnChanges","OnInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"render","type":"Renderer2","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"elRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"render","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},{"name":"WaterMarkDirective","id":"directive-WaterMarkDirective-559e97e39798dac6a55e312d2a7bd68d256c4a6a1b1cb861b5f239e0b0cc34827f1d5df1ecf689363e28eb58b6f58cd779514aa9382c8ad783a0b1ebe7fda284","file":"src/directives/water-mark.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ElementRef, HostBinding, Renderer2, AfterViewInit, Input } from \'@angular/core\';\\nimport { format } from \'date-fns\';\\n\\n@Directive({\\n  selector: \'[appWaterMark]\'\\n})\\nexport class WaterMarkDirective implements AfterViewInit {\\n  @Input() name: string;\\n  @Input() isDisplay: boolean;\\n  @HostBinding(\'style.position\') public positionStyle = \'relative\';\\n\\n  constructor(private el: ElementRef,\\n    private renderer: Renderer2) {\\n  }\\n\\n  public async ngAfterViewInit(): Promise<void> {\\n    if (!this.name || !this.isDisplay) return;\\n\\n    const waterMarkDiv = this.renderer.createElement(\'div\');\\n    const waterMarkImg = this.getWaterMarkImageUrl();\\n    const waterMarkDivStyle = `\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      pointer-events: none;\\n      opacity: 0.13;\\n      z-index: 1005;\\n      background-image: url(\'${waterMarkImg}\');\\n    `;\\n    this.renderer.setAttribute(waterMarkDiv, \'style\', waterMarkDivStyle);\\n    this.renderer.appendChild(this.el.nativeElement, waterMarkDiv);\\n\\n  }\\n\\n  private getWaterMarkImageUrl(): string {\\n    const canvas = this.renderer.createElement(\'canvas\');\\n    canvas.setAttribute(\'width\', \'250px\');\\n    canvas.setAttribute(\'height\', \'150px\');\\n\\n    const ctx = canvas.getContext(\'2d\');\\n    ctx.textAlign = \'left\';\\n    ctx.textBaseline = \'middle\';\\n    ctx.font = \'12px PingFangSC-Regular, PingFang SC\';\\n    ctx.fillStyle = \'#54627B\';\\n    ctx.rotate(10 * Math.PI / 180);\\n    const strArr = [`${this.name} ${format(new Date(), \'yyyy-MM-dd HH:mm:ss\')}`];\\n    strArr.forEach((str, i) => {\\n      ctx.fillText(str, 40, 70 + i * 15);\\n    });\\n\\n    return canvas.toDataURL();\\n  }\\n}\\n","selector":"[appWaterMark]","providers":[],"hostDirectives":[],"standalone":false,"inputsClass":[{"name":"isDisplay","deprecated":false,"deprecationMessage":"","line":9,"type":"boolean","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","line":8,"type":"string","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"style.position","defaultValue":"\'relative\'","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[{"name":"positionStyle","defaultValue":"\'relative\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":10,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'style.position\'"}],"modifierKind":[170,125]}],"methodsClass":[{"name":"getWaterMarkImageUrl","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[125,134]}],"extends":[],"implements":["AfterViewInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"el","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}],"components":[{"name":"AppAssets","id":"component-AppAssets-50c594c34ab58a1798abc260a6a7ee9277f4e195158a0f2536a5efc1810a9fdeca9147f5d49f630718f175a812e3ff158d8c09b9db750f49974aaa1452581a72","file":"src/components/assets/assets.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":["\\n    .group {\\n        margin: 16px;\\n        padding: 12px 16px;\\n        border-radius: 4px;\\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.15);\\n    }\\n    .group-subGroup {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 16px;\\n    }\\n    .item {\\n        display: grid;\\n        grid-template-rows: minmax(0, 1fr) 28px;\\n        gap: 12px;\\n        align-items: center;\\n        justify-content: space-between;\\n    }\\n\\n    .img-wrapper {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n    .item img {\\n        max-width: 100px;\\n        max-height: 80px;\\n        min-height: 48px;\\n    }\\n    .ant-typography {\\n        display: inline-flex;\\n    }\\n    .file-name {\\n        display: inline-block;\\n        overflow: hidden;\\n        white-space: nowrap;\\n        text-overflow: ellipsis;\\n        width: 80px;\\n    }\\n    "],"template":"    <h4>组件库图标</h4>\\n<div class=\\"group\\" *ngFor=\\"let obj of categories|keyvalue; let i = index\\">\\n\\n  <h4>{{obj.key}}</h4>\\n  <div class=\\"group-subGroup\\">\\n    <div class=\\"item\\" *ngFor=\\"let icon of obj.value\\">\\n      <span class=\\"img-wrapper\\">\\n        <span sds-icon [nzType]=\\"icon\\" style=\\"font-size: 40px;color: #4D4D4D\\"></span>\\n      </span>\\n      <span sds-typography nzCopyable [nzCopyText]=\\"getIconCopyText(icon)\\" sds-tooltip [nzTooltipTitle]=\\"titleTemplate\\"\\n        [nzTooltipTitleContext]=\\"{ $implicit: icon }\\">\\n        <i class=\\"file-name\\">{{icon}}</i>\\n        <ng-template #titleTemplate let-item>\\n          <p>图标方式引用: </p>\\n          <p>{{ getIconCopyText(icon) }}</p>\\n        </ng-template>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\"group\\" *ngFor=\\"let group of assets\\">\\n  <h4>{{group.group}}</h4>\\n  <div class=\\"group-subGroup\\">\\n    <div class=\\"item\\" *ngFor=\\"let item of group.children\\">\\n      <span class=\\"img-wrapper\\">\\n        <span *ngIf=\\"item.isIcon\\" sds-icon [nzType]=\\"item.nzType\\" style=\\"font-size: 40px;color: #4D4D4D\\"></span>\\n        <img *ngIf=\\"item.usingImg\\" sds-image [nzSrc]=\\"item.path\\" />\\n      </span>\\n\\n      <span sds-typography nzCopyable [nzCopyText]=\\"getCopyText(item)\\" sds-tooltip [nzTooltipTitle]=\\"titleTemplate\\"\\n        [nzTooltipTitleContext]=\\"{ $implicit: item }\\">\\n        <i class=\\"file-name\\">{{item.name}}</i>\\n        <ng-template #titleTemplate let-item>\\n          <p>资源路径: </p>\\n          <p>{{ item.path }}</p>\\n\\n          <p *ngIf=\\"item.isIcon\\">图标方式引用: </p>\\n          <p *ngIf=\\"item.isIcon\\">{{ getCopyText(item) }}</p>\\n        </ng-template>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"assets","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"","line":101,"modifierKind":[125]},{"name":"categories","deprecated":false,"deprecationMessage":"","type":"literal type","indexKey":"","optional":false,"description":"","line":102,"modifierKind":[125]}],"methodsClass":[{"name":"getCopyText","args":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getIconCopyText","args":[{"name":"nzType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"nzType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[125]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"NzIconModule","type":"module"},{"name":"NzTypographyModule","type":"module"},{"name":"NzImageModule","type":"module"},{"name":"NzToolTipModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, OnInit } from \\"@angular/core\\";\\nimport { FormsModule } from \\"@angular/forms\\";\\nimport { NzTypographyModule } from \'ng-zorro-antd/typography\';\\nimport { NzIconModule } from \'ng-zorro-antd/icon\';\\nimport { NzImageModule } from \'ng-zorro-antd/image\';\\nimport * as assets from \'./util/list.json\';\\nimport { NzToolTipModule } from \\"ng-zorro-antd/tooltip\\";\\nimport { ngZorroIconCategoryNames } from \\"./util\\";\\n\\n@Component({\\n  template: `\\n    <h4>组件库图标</h4>\\n<div class=\\"group\\" *ngFor=\\"let obj of categories|keyvalue; let i = index\\">\\n\\n  <h4>{{obj.key}}</h4>\\n  <div class=\\"group-subGroup\\">\\n    <div class=\\"item\\" *ngFor=\\"let icon of obj.value\\">\\n      <span class=\\"img-wrapper\\">\\n        <span sds-icon [nzType]=\\"icon\\" style=\\"font-size: 40px;color: #4D4D4D\\"></span>\\n      </span>\\n      <span sds-typography nzCopyable [nzCopyText]=\\"getIconCopyText(icon)\\" sds-tooltip [nzTooltipTitle]=\\"titleTemplate\\"\\n        [nzTooltipTitleContext]=\\"{ $implicit: icon }\\">\\n        <i class=\\"file-name\\">{{icon}}</i>\\n        <ng-template #titleTemplate let-item>\\n          <p>图标方式引用: </p>\\n          <p>{{ getIconCopyText(icon) }}</p>\\n        </ng-template>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\"group\\" *ngFor=\\"let group of assets\\">\\n  <h4>{{group.group}}</h4>\\n  <div class=\\"group-subGroup\\">\\n    <div class=\\"item\\" *ngFor=\\"let item of group.children\\">\\n      <span class=\\"img-wrapper\\">\\n        <span *ngIf=\\"item.isIcon\\" sds-icon [nzType]=\\"item.nzType\\" style=\\"font-size: 40px;color: #4D4D4D\\"></span>\\n        <img *ngIf=\\"item.usingImg\\" sds-image [nzSrc]=\\"item.path\\" />\\n      </span>\\n\\n      <span sds-typography nzCopyable [nzCopyText]=\\"getCopyText(item)\\" sds-tooltip [nzTooltipTitle]=\\"titleTemplate\\"\\n        [nzTooltipTitleContext]=\\"{ $implicit: item }\\">\\n        <i class=\\"file-name\\">{{item.name}}</i>\\n        <ng-template #titleTemplate let-item>\\n          <p>资源路径: </p>\\n          <p>{{ item.path }}</p>\\n\\n          <p *ngIf=\\"item.isIcon\\">图标方式引用: </p>\\n          <p *ngIf=\\"item.isIcon\\">{{ getCopyText(item) }}</p>\\n        </ng-template>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n    `,\\n  styles: [`\\n    .group {\\n        margin: 16px;\\n        padding: 12px 16px;\\n        border-radius: 4px;\\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.15);\\n    }\\n    .group-subGroup {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 16px;\\n    }\\n    .item {\\n        display: grid;\\n        grid-template-rows: minmax(0, 1fr) 28px;\\n        gap: 12px;\\n        align-items: center;\\n        justify-content: space-between;\\n    }\\n\\n    .img-wrapper {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n    .item img {\\n        max-width: 100px;\\n        max-height: 80px;\\n        min-height: 48px;\\n    }\\n    .ant-typography {\\n        display: inline-flex;\\n    }\\n    .file-name {\\n        display: inline-block;\\n        overflow: hidden;\\n        white-space: nowrap;\\n        text-overflow: ellipsis;\\n        width: 80px;\\n    }\\n    `],\\n  imports: [CommonModule, FormsModule, NzIconModule, NzTypographyModule, NzImageModule, NzToolTipModule]\\n})\\nexport class AppAssets implements OnInit {\\n  public assets: any;\\n  public categories: { 通用操作: string[]; 导航及指示: string[]; 图表相关: string[]; 角色相关: string[]; 符号和标识: string[]; 办公文档: string[]; 业务相关: string[]; 快捷键: string[]; };\\n\\n  constructor() { }\\n\\n  public ngOnInit(): void {\\n    this.assets = assets[\'default\'];\\n    this.categories = ngZorroIconCategoryNames();\\n  }\\n\\n  public getIconCopyText(nzType: string) {\\n    return `<span sds-icon nzType=\\"${nzType}\\"></span>`;\\n  }\\n\\n  public getCopyText(item: any) {\\n    switch (true) {\\n      case item.isIcon:\\n        return `<span sds-icon nzType=\\"${item.nzType}\\"></span>`;\\n      case item.usingImg:\\n        return `<img src=\\"${item.path}\\">`;\\n      case !item.isIcon && !item.usingImg:\\n        return item.path;\\n    }\\n  }\\n\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    .group {\\n        margin: 16px;\\n        padding: 12px 16px;\\n        border-radius: 4px;\\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.15);\\n    }\\n    .group-subGroup {\\n        display: flex;\\n        flex-wrap: wrap;\\n        gap: 16px;\\n    }\\n    .item {\\n        display: grid;\\n        grid-template-rows: minmax(0, 1fr) 28px;\\n        gap: 12px;\\n        align-items: center;\\n        justify-content: space-between;\\n    }\\n\\n    .img-wrapper {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n    .item img {\\n        max-width: 100px;\\n        max-height: 80px;\\n        min-height: 48px;\\n    }\\n    .ant-typography {\\n        display: inline-flex;\\n    }\\n    .file-name {\\n        display: inline-block;\\n        overflow: hidden;\\n        white-space: nowrap;\\n        text-overflow: ellipsis;\\n        width: 80px;\\n    }\\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":102},"extends":[],"implements":["OnInit"]},{"name":"AppComponent","id":"component-AppComponent-cf0bb225c96f1a33698bc74f1576d22c49f17f76ee6fd5546802e2503b0d7cd750a6b1f9c4e303a85dbea379a657f36bbc1eb91ac7264dcd9550c749750ae82e","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":[],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"keyword","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":11},{"name":"title","defaultValue":"\'components-angular\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":12}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"FormsModule","type":"module"},{"name":"NzInputModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { NzInputModule } from \'ng-zorro-antd/input\';\\n@Component({\\n  selector: \'app-root\',\\n  imports: [FormsModule, NzInputModule],\\n  templateUrl: \'./app.component.html\',\\n  styleUrl: \'./app.component.scss\'\\n})\\nexport class AppComponent {\\n  keyword = \'\';\\n  title = \'components-angular\';\\n}\\n","styleUrl":"./app.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<h1 class=\\"text-3xl font-bold underline\\">\\n    Hello world!\\n</h1>\\n<input type=\\"text\\" nz-input>\\n<button class=\\"bg-sky-500 hover:bg-sky-700\\">Save changes</button>\\n<button class=\\"text-lg rounded-xl px-4 py-2 mx-6 my-4 text-white shadow-xl border-slate-400/50 border-2 bg-blue-700\\">\\n    Save\\n</button>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-0ae7db733a55de4874e27ac7fc72fa331505a35b1046301ae0528e01428db67b1378ca130dca11e4403f715e793ab5731df5c99712d4a521b35f405bd8525e98","file":"src/components/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-button","styleUrls":["./button.scss"],"styles":[],"template":" <button  type=\\"button\\"\\n  (click)=\\"onClick.emit($event)\\"\\n  [ngClass]=\\"classes\\"\\n  [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n>\\n  {{ label }}\\n</button>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"backgroundColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\nWhat background color to use","description":"<p>What background color to use</p>\\n","line":24,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'Button\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":741,"end":754,"kind":327,"id":0,"flags":16842752,"modifierFlagsCache":0,"transformFlags":0,"tagName":{"pos":742,"end":750,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"required"},"comment":""}],"rawdescription":"\\n\\nButton contents\\n\\n","description":"<p>Button contents</p>\\n","line":36,"type":"string","decorators":[]},{"name":"primary","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\nIs this the principal call to action on the page?","description":"<p>Is this the principal call to action on the page?</p>\\n","line":20,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"\'medium\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\nHow large should the button be?","description":"<p>How large should the button be?</p>\\n","line":28,"type":"\\"small\\" | \\"medium\\" | \\"large\\"","decorators":[]}],"outputsClass":[{"name":"onClick","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\nOptional click handler","description":"<p>Optional click handler</p>\\n","line":40,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Input, Output, EventEmitter } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'storybook-button\',\\n  imports: [CommonModule],\\n  template: ` <button\\n  type=\\"button\\"\\n  (click)=\\"onClick.emit($event)\\"\\n  [ngClass]=\\"classes\\"\\n  [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n>\\n  {{ label }}\\n</button>`,\\n  styleUrls: [\'./button.scss\'],\\n})\\nexport class ButtonComponent {\\n  /** Is this the principal call to action on the page? */\\n  @Input()\\n  primary = false;\\n\\n  /** What background color to use */\\n  @Input()\\n  backgroundColor?: string;\\n\\n  /** How large should the button be? */\\n  @Input()\\n  size: \'small\' | \'medium\' | \'large\' = \'medium\';\\n\\n  /**\\n   * Button contents\\n   *\\n   * @required\\n   */\\n  @Input()\\n  label = \'Button\';\\n\\n  /** Optional click handler */\\n  @Output()\\n  onClick = new EventEmitter<Event>();\\n\\n  public get classes(): string[] {\\n    const mode = this.primary ? \'storybook-button--primary\' : \'storybook-button--secondary\';\\n\\n    return [\'storybook-button\', `storybook-button--${this.size}`, mode];\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".storybook-button {\\n  display: inline-block;\\n  cursor: pointer;\\n  border: 0;\\n  border-radius: 3em;\\n  font-weight: 700;\\n  line-height: 1;\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n}\\n.storybook-button--primary {\\n  background-color: #555ab9;\\n  color: white;\\n}\\n.storybook-button--secondary {\\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\\n  background-color: transparent;\\n  color: #333;\\n}\\n.storybook-button--small {\\n  padding: 10px 16px;\\n  font-size: 12px;\\n}\\n.storybook-button--medium {\\n  padding: 11px 20px;\\n  font-size: 14px;\\n}\\n.storybook-button--large {\\n  padding: 12px 24px;\\n  font-size: 16px;\\n}\\n","styleUrl":"./button.scss"}],"stylesData":"","extends":[],"accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":42}}}},{"name":"FormOperatorCompactComponent","id":"component-FormOperatorCompactComponent-548b1c6e95299515d4d21fc280deeee60f0ce60532562364b1d6e9561e17cf442c5e0653eeec2c4b92e099ee77a94ff65231a5816cd692277e97f0e9e650dbad","file":"src/components/form-operator-compact/form-operator-compact.ts","encapsulation":[],"entryComponents":[],"host":{},"inputs":[],"outputs":[],"providers":[],"selector":"form-operator-compact","styleUrls":[],"styles":["\\n  .values {\\n    display: flex;\\n  }\\n  "],"templateUrl":["./form-operator-compact.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dataType","deprecated":false,"deprecationMessage":"","line":23,"type":"ECmpTypeOperatorMap","decorators":[]},{"name":"extraOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":29,"type":"ISelectOption[]","decorators":[]},{"name":"isReadonly","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":30,"type":"boolean","decorators":[]},{"name":"min","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","line":28,"type":"number","decorators":[]},{"name":"operator","deprecated":false,"deprecationMessage":"","line":25,"type":"EOperator","decorators":[]},{"name":"operators","deprecated":false,"deprecationMessage":"","line":24,"type":"IOperator[]","decorators":[]},{"name":"values","defaultValue":"new Array(2)","deprecated":false,"deprecationMessage":"","line":27,"type":"any","decorators":[]}],"outputsClass":[{"name":"operatorChange","defaultValue":"new EventEmitter<EOperator>()","deprecated":false,"deprecationMessage":"","line":26,"type":"EventEmitter"},{"name":"valuesChange","defaultValue":"new EventEmitter<any[]>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter"}],"propertiesClass":[{"name":"ECmpTypeOperatorMap","defaultValue":"ECmpTypeOperatorMap","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[125]},{"name":"EOperator","defaultValue":"EOperator","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[125]}],"methodsClass":[{"name":"getDisplayValue","args":[{"name":"isEndValue","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"isEndValue","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setOperator","args":[{"name":"operator","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"operator","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateDateRangeValue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"updateValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"isEndValue","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isEndValue","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"NzInputModule","type":"module"},{"name":"NzInputNumberModule","type":"module"},{"name":"NzSelectModule","type":"module"},{"name":"NzDatePickerModule","type":"module"},{"name":"NzCascaderModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \\"@angular/core\\";\\nimport { FormsModule } from \\"@angular/forms\\";\\nimport { ECmpTypeOperatorMap, EOperator, IOperator, ISelectOption } from \\"@Utils\\";\\nimport { NzCascaderModule } from \\"ng-zorro-antd/cascader\\";\\nimport { NzDatePickerModule } from \\"ng-zorro-antd/date-picker\\";\\nimport { NzInputModule } from \\"ng-zorro-antd/input\\";\\nimport { NzInputNumberModule } from \\"ng-zorro-antd/input-number\\";\\nimport { NzSelectModule } from \\"ng-zorro-antd/select\\";\\n\\n@Component({\\n  selector: \'form-operator-compact\',\\n  templateUrl: \'./form-operator-compact.html\',\\n  styles: [`\\n  .values {\\n    display: flex;\\n  }\\n  `],\\n  host: { class: \'full-width\' },\\n  imports: [CommonModule, FormsModule, NzInputModule, NzInputNumberModule, NzSelectModule, NzDatePickerModule, NzCascaderModule]\\n})\\nexport class FormOperatorCompactComponent implements OnChanges {\\n  @Input() public dataType: ECmpTypeOperatorMap;\\n  @Input() public operators: IOperator[];\\n  @Input() public operator: EOperator;\\n  @Output() public operatorChange = new EventEmitter<EOperator>();\\n  @Input() public values = new Array(2);\\n  @Input() public min?: number = undefined;\\n  @Input() public extraOptions: ISelectOption[] = [];\\n  @Input() public isReadonly = false;\\n  @Output() public valuesChange = new EventEmitter<any[]>();\\n\\n  public EOperator = EOperator;\\n  public ECmpTypeOperatorMap = ECmpTypeOperatorMap;\\n\\n  constructor() { }\\n\\n  public get isRange(): boolean {\\n    const currentOperator = this.operators.find(o => o.value === this.operator);\\n    return currentOperator && currentOperator.isRange || false;\\n  }\\n\\n  public ngOnChanges(changes: SimpleChanges) {\\n    const { dataType } = changes;\\n    if (dataType && !!dataType.previousValue) {\\n      this.values = new Array(2);\\n    }\\n  }\\n\\n  public setOperator(operator: any) {\\n    this.values = new Array(2);\\n    this.operator = operator;\\n    this.operatorChange.emit(operator);\\n  }\\n\\n  public updateValue(value: any, isEndValue: boolean) {\\n    isEndValue\\n      ? this.values[1] = value\\n      : this.values[0] = value;\\n    this.valuesChange.emit(this.values)\\n  }\\n\\n  public updateDateRangeValue() {\\n    this.valuesChange.emit(this.values)\\n  }\\n\\n  public getDisplayValue(isEndValue: boolean): any {\\n    if (isEndValue) {\\n      return this.values[1]\\n    }\\n\\n    if (this.dataType === ECmpTypeOperatorMap.date) {\\n      if (Array.isArray(this.values[0])) {\\n        if (this.isRange) {\\n          return this.values;\\n        }\\n        return this.values[0][0]\\n      }\\n    }\\n    return this.values[0];\\n  }\\n}\\n\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  .values {\\n    display: flex;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":34},"extends":[],"implements":["OnChanges"],"accessors":{"isRange":{"name":"isRange","getSignature":{"name":"isRange","type":"boolean","returnType":"boolean","line":38}}},"templateData":"<nz-input-group nzCompact\\n                 class=\\"values flex-1\\">\\n  <nz-select [(ngModel)]=\\"operator\\"\\n              (ngModelChange)=\\"setOperator($event)\\"\\n              nzPlaceHolder=\\"请选择\\"\\n              [nzDisabled]=\\"isReadonly\\"\\n              [style.width.px]=\\"84\\"\\n              [nzOptions]=\\"operators\\">\\n  </nz-select>\\n  <ng-container *ngTemplateOutlet=\\"valueTpl;context: {$implicit: false, isEndValue:false}\\"></ng-container>\\n  <ng-container *ngIf=\\"isRange&&dataType!==ECmpTypeOperatorMap.date\\">\\n    <input type=\\"text\\"\\n           disabled\\n           nz-input\\n           placeholder=\\"~\\"\\n           style=\\"width: 30px; border-right: 0; pointer-events: none; background-color: #fff;\\" />\\n    <ng-container *ngTemplateOutlet=\\"valueTpl;context: {$implicit: true, isEndValue:true}\\"></ng-container>\\n  </ng-container>\\n</nz-input-group>\\n<ng-template #valueTpl\\n             let-isEndValue=\\"isEndValue\\">\\n  <ng-container [ngSwitch]=\\"dataType\\">\\n    <nz-input-number *ngSwitchCase=\\"ECmpTypeOperatorMap.number\\"\\n                      class=\\"valueInput flex-1\\"\\n                      [nzDisabled]=\\"isReadonly\\"\\n                      [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n                      (ngModelChange)=\\"updateValue($event,isEndValue)\\"\\n                      [nzMin]=\\"min===undefined?\'null\':min\\"></nz-input-number>\\n    <input *ngSwitchCase=\\"ECmpTypeOperatorMap.char\\"\\n           class=\\"valueInput flex-1\\"\\n           nz-input\\n           placeholder=\\"请输入\\"\\n           [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n           (ngModelChange)=\\"updateValue($event,isEndValue)\\"\\n           [disabled]=\\"isReadonly\\" />\\n    <nz-cascader *ngSwitchCase=\\"ECmpTypeOperatorMap.select_cascader\\"\\n                  class=\\"valueInput flex-1\\"\\n                  [nzDisabled]=\\"isReadonly\\"\\n                  [nzOptions]=\\"extraOptions\\"\\n                  [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n                  (ngModelChange)=\\"updateValue($event,isEndValue)\\"></nz-cascader>\\n    <ng-container *ngSwitchCase=\\"ECmpTypeOperatorMap.date\\">\\n      <nz-date-picker *ngIf=\\"!isRange\\"\\n                       class=\\"valueInput flex-1\\"\\n                       [nzDisabled]=\\"isReadonly\\"\\n                       [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n                       (ngModelChange)=\\"updateValue($event,isEndValue)\\"></nz-date-picker>\\n      <nz-range-picker *ngIf=\\"isRange\\"\\n                        class=\\"flex-1\\"\\n                        [nzDisabled]=\\"isReadonly\\"\\n                        nzFormat=\\"yyyy-MM-dd\\"\\n                        [(ngModel)]=\\"values\\"\\n                        (ngModelChange)=\\"updateDateRangeValue($event,isEndValue)\\">\\n      </nz-range-picker>\\n    </ng-container>\\n    <nz-select *ngSwitchCase=\\"ECmpTypeOperatorMap.select_single\\"\\n                class=\\"valueInput flex-1\\"\\n                [nzDisabled]=\\"isReadonly\\"\\n                [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n                (ngModelChange)=\\"updateValue($event,isEndValue)\\"\\n                nzPlaceHolder=\\"请选择\\"\\n                [nzOptions]=\\"extraOptions\\">\\n    </nz-select>\\n    <nz-select *ngSwitchCase=\\"ECmpTypeOperatorMap.select_multiple\\"\\n                class=\\"valueInput flex-1\\"\\n                [nzDisabled]=\\"isReadonly\\"\\n                [nzMode]=\\"\'multiple\'\\"\\n                [ngModel]=\\"getDisplayValue(isEndValue)\\"\\n                (ngModelChange)=\\"updateValue($event,isEndValue)\\"\\n                nzPlaceHolder=\\"请选择\\"\\n                [nzOptions]=\\"extraOptions\\">\\n    </nz-select>\\n  </ng-container>\\n</ng-template>"},{"name":"IconRenderComponent","id":"component-IconRenderComponent-4dea0b225cdd69f4bf143621982559fbdc1b582b82267f35b64d4e4bb155281121cb709fa7fd8531677380beb99dadc1418b031a4465bb614c0d9eadebb1c7e9","file":"src/components/assets/icon-render.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"icon-render","styleUrls":[],"styles":["\\n    :host {\\n      display: inline-flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    :host.round {\\n      border-radius:100%;\\n    }\\n    :host:not(.round) {\\n      border-radius: 4px;\\n    }\\n    .icon-box {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    .img-box {\\n      overflow: hidden;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n    }\\n    .img-box img {\\n      max-width: 100%;\\n      max-height: 100%;\\n    }\\n"],"template":"<ng-container [ngSwitch]=\\"icon_type\\">\\n  <span *ngSwitchCase=\\"IconType.EMOJI\\" class=\\"icon-box\\">\\n    <i *ngIf=\\"isOriginEmoji\\">{{icon}}</i>\\n    <i *ngIf=\\"!isOriginEmoji\\" nz-icon [nzType]=\\"icon\\" [style.color]=\\"icon_color\\" [style.font-size.px]=\\"icon_size\\"></i>\\n  </span>\\n\\n  <span *ngSwitchCase=\\"IconType.ICON\\" class=\\"icon-box\\">\\n    <i *ngIf=\\"isOriginEmoji\\">{{icon}}</i>\\n    <i *ngIf=\\"!isOriginEmoji\\" nz-icon [nzType]=\\"icon\\" [style.color]=\\"icon_color\\" [style.font-size.px]=\\"icon_size\\"></i>\\n  </span>\\n\\n  <ng-container *ngSwitchCase=\\"IconType.IMAGE\\">\\n    <span class=\\"img-box\\"><img [src]=\\"icon_url\\" /></span>\\n  </ng-container>\\n</ng-container>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"icon","defaultValue":"\\"🤖\\"","deprecated":false,"deprecationMessage":"","line":65,"type":"string","decorators":[]},{"name":"icon_background","defaultValue":"\\"#F3F4F6\\"","deprecated":false,"deprecationMessage":"","line":60,"type":"string","decorators":[]},{"name":"icon_color","defaultValue":"\'#fff\'","deprecated":false,"deprecationMessage":"","line":67,"type":"string","decorators":[]},{"name":"icon_size","defaultValue":"16","deprecated":false,"deprecationMessage":"","line":68,"type":"number","decorators":[]},{"name":"icon_type","deprecated":false,"deprecationMessage":"","line":63,"type":"IconType","decorators":[]},{"name":"icon_url","deprecated":false,"deprecationMessage":"","line":66,"type":"string","decorators":[]},{"name":"round","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":61,"type":"boolean","decorators":[]},{"name":"width","defaultValue":"24","deprecated":false,"deprecationMessage":"","line":59,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"IconType","defaultValue":"IconType","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":70},{"name":"isOriginEmoji","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":71}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"NzIconModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, HostBinding, Input, OnInit } from \\"@angular/core\\";\\nimport { NzIconModule } from \\"ng-zorro-antd/icon\\";\\nimport { IconType } from \\"./util\\";\\n\\n@Component({\\n  selector: \'icon-render\',\\n  template: `\\n  <ng-container [ngSwitch]=\\"icon_type\\">\\n    <span *ngSwitchCase=\\"IconType.EMOJI\\" class=\\"icon-box\\">\\n      <i *ngIf=\\"isOriginEmoji\\">{{icon}}</i>\\n      <i *ngIf=\\"!isOriginEmoji\\" nz-icon [nzType]=\\"icon\\" [style.color]=\\"icon_color\\" [style.font-size.px]=\\"icon_size\\"></i>\\n    </span>\\n\\n    <span *ngSwitchCase=\\"IconType.ICON\\" class=\\"icon-box\\">\\n      <i *ngIf=\\"isOriginEmoji\\">{{icon}}</i>\\n      <i *ngIf=\\"!isOriginEmoji\\" nz-icon [nzType]=\\"icon\\" [style.color]=\\"icon_color\\" [style.font-size.px]=\\"icon_size\\"></i>\\n    </span>\\n\\n    <ng-container *ngSwitchCase=\\"IconType.IMAGE\\">\\n      <span class=\\"img-box\\"><img [src]=\\"icon_url\\" /></span>\\n    </ng-container>\\n  </ng-container>\\n    `,\\n  styles: [`\\n    :host {\\n      display: inline-flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    :host.round {\\n      border-radius:100%;\\n    }\\n    :host:not(.round) {\\n      border-radius: 4px;\\n    }\\n    .icon-box {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    .img-box {\\n      overflow: hidden;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n    }\\n    .img-box img {\\n      max-width: 100%;\\n      max-height: 100%;\\n    }\\n`],\\n  imports: [CommonModule, NzIconModule]\\n})\\nexport class IconRenderComponent implements OnInit {\\n  @HostBinding(\'style.width.px\')\\n  @HostBinding(\'style.height.px\')\\n  @Input() width: number = 24;\\n  @HostBinding(\'style.backgroundColor\') @Input() icon_background = \\"#F3F4F6\\";\\n  @HostBinding(\'class.round\') @Input() round = false;\\n\\n  @Input() icon_type: IconType; //  \\"emoji\\",\\n\\n  @Input() icon = \\"🤖\\";\\n  @Input() icon_url: string;\\n  @Input() icon_color = \'#fff\';\\n  @Input() icon_size: number = 16;\\n\\n  IconType = IconType;\\n  isOriginEmoji = false;\\n\\n  ngOnInit(): void {\\n    this.icon = this.icon || \\"🤖\\";\\n    this.icon_background = this.icon_background || \\"#F3F4F6\\";\\n    this.isOriginEmoji = !this.icon.startsWith(\'icons:\') && /\\\\p{Emoji}/u.test(this.icon);\\n  }\\n\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    :host {\\n      display: inline-flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    :host.round {\\n      border-radius:100%;\\n    }\\n    :host:not(.round) {\\n      border-radius: 4px;\\n    }\\n    .icon-box {\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n    }\\n    .img-box {\\n      overflow: hidden;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n    }\\n    .img-box img {\\n      max-width: 100%;\\n      max-height: 100%;\\n    }\\n\\n","extends":[],"implements":["OnInit"]},{"name":"IconSelectComponent","id":"component-IconSelectComponent-717fecff8fa9e04938c8d41d6ac665c267d20c047a6cbb3170b1f2b854469c839c6fd6dbcf37ec8906f910b210a95b209ff7b23158be4466e0fc8f2116e13f11","file":"src/components/assets/icon-select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"icon-select","styleUrls":[],"styles":["\\n.anticons-list {\\n    display: grid;\\n    grid-auto-rows: 40px;\\n    grid-template-columns: repeat(auto-fill, 40px);\\n    align-items: center;\\n    gap: 1px;\\n    justify-content: center;\\n    max-height: 200px;\\n    overflow: hidden auto;\\n\\n    li {\\n      cursor: pointer;\\n      text-align: center;\\n      list-style: none;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 4px;\\n    }\\n    li:hover {\\n      background: #108AC9;\\n      color: #fff;\\n    }\\n    li.active {\\n      background: #3664d9;\\n      color: #fff;\\n    }\\n    .icon {\\n      font-size: 24px;\\n    }\\n    img {\\n      max-width: 32px;\\n      max-height: 32px;\\n      display: inline-block;\\n    }\\n}\\n\\n.bg-wrapper{\\n    display: flex;\\n    gap: 12px;\\n    flex-wrap: wrap;\\n}\\n.bg-box{\\n      padding: 4px;\\n      border: 1.5px solid #fff;\\n      border-radius: 4px;\\n    }\\n.bg-box.active {\\n    border-color: #3664d9;\\n}\\n.icon-box{\\n    background: rgb(54, 100, 217);\\n    min-width: 32px;\\n    min-height: 32px;\\n    max-width: 60px;\\n    max-height: 60px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border-radius: 4px;\\n    color: #fff;\\n    font-size: 20px;\\n}\\n\\n.icon-box img{\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n}\\n\\n"],"template":"<div class=\\"assets-wrapper\\">\\n  <ul class=\\"anticons-list\\">\\n    <ng-container *ngFor=\\"let item of assets\\">\\n      <li *ngIf=\\"item.icon_type==\'icon\'\\" [class.active]=\\"icon?.icon==item.icon\\" (click)=\\"updateIcon(item)\\">\\n        <nz-icon class=\\"icon\\" [nzType]=\\"item.icon\\" />\\n      </li>\\n      <li *ngIf=\\"item.icon_type==\'emoji\'\\" [class.active]=\\"icon?.icon==item.icon\\" (click)=\\"updateIcon(item)\\">\\n         <nz-icon class=\\"icon\\" [nzType]=\\"item.icon\\" />\\n      </li>\\n      <li *ngIf=\\"item.icon_type==\'image\'\\" [class.active]=\\"icon?.icon_url==item.icon_url\\" (click)=\\"updateIcon(item)\\">\\n        <img [src]=\\"item.icon_url\\">\\n      </li>\\n    </ng-container>\\n  </ul>\\n</div>\\n<h3>Choose Style</h3>\\n<div *ngIf=\\"icon\\" class=\\"bg-wrapper\\">\\n  <div class=\\"bg-box cursor-pointer\\" *ngFor=\\"let background of iconBackgrounds; let i = index\\"\\n  [class.active]=\\"icon.icon_background==background\\"\\n  (click)=\\"updateIconBackground(background)\\">\\n    <span [style.background]=\\"background\\" class=\\"icon-box\\">\\n      <span *ngIf=\\"icon.icon_type==\'emoji\'\\" [style.color]=\\"i==0 ? \'#000\' : \'#fff\'\\"\\n        nz-icon [nzType]=\\"icon.icon\\"></span>\\n      <img *ngIf=\\"icon.icon_type==\'image\'\\" [src]=\\"icon.icon_url\\">\\n    </span>\\n  </div>\\n</div>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"filter_icon_type","deprecated":false,"deprecationMessage":"","line":117,"type":"IconType","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","line":115,"type":"IAppIcon","decorators":[]}],"outputsClass":[{"name":"iconChange","defaultValue":"new EventEmitter<IAppIcon>()","deprecated":false,"deprecationMessage":"","line":116,"type":"EventEmitter"}],"propertiesClass":[{"name":"assets","deprecated":false,"deprecationMessage":"","type":"any[]","indexKey":"","optional":false,"description":"","line":118,"modifierKind":[125]},{"name":"iconBackgrounds","defaultValue":"[\\n    \'inherit\', \'#3664D9\', \'#757575\', \'#8200FF\', \'#0DC4CB\', \'#2DC76D\', \'#FF3143\',\\n    \'#FD8701\', \'#FFC900\', \'#FF9900\', \'#FF6600\', \'#FEF7C3\'\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","indexKey":"","optional":false,"description":"","line":119,"modifierKind":[125]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"updateIcon","args":[{"name":"asset","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"asset","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateIconBackground","args":[{"name":"background","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"background","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"NzIconModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \\"@angular/core\\";\\nimport { default as assetsJson } from \'./util/list.json\';\\nimport { ngZorroIconCategoryNames, IAppIcon, IconType } from \\"./util\\";\\nimport { CommonModule } from \\"@angular/common\\";\\nimport { NzIconModule } from \\"ng-zorro-antd/icon\\";\\n\\n@Component({\\n  selector: \'icon-select\',\\n  template: `\\n<div class=\\"assets-wrapper\\">\\n  <ul class=\\"anticons-list\\">\\n    <ng-container *ngFor=\\"let item of assets\\">\\n      <li *ngIf=\\"item.icon_type==\'icon\'\\" [class.active]=\\"icon?.icon==item.icon\\" (click)=\\"updateIcon(item)\\">\\n        <nz-icon class=\\"icon\\" [nzType]=\\"item.icon\\" />\\n      </li>\\n      <li *ngIf=\\"item.icon_type==\'emoji\'\\" [class.active]=\\"icon?.icon==item.icon\\" (click)=\\"updateIcon(item)\\">\\n         <nz-icon class=\\"icon\\" [nzType]=\\"item.icon\\" />\\n      </li>\\n      <li *ngIf=\\"item.icon_type==\'image\'\\" [class.active]=\\"icon?.icon_url==item.icon_url\\" (click)=\\"updateIcon(item)\\">\\n        <img [src]=\\"item.icon_url\\">\\n      </li>\\n    </ng-container>\\n  </ul>\\n</div>\\n<h3>Choose Style</h3>\\n<div *ngIf=\\"icon\\" class=\\"bg-wrapper\\">\\n  <div class=\\"bg-box cursor-pointer\\" *ngFor=\\"let background of iconBackgrounds; let i = index\\"\\n  [class.active]=\\"icon.icon_background==background\\"\\n  (click)=\\"updateIconBackground(background)\\">\\n    <span [style.background]=\\"background\\" class=\\"icon-box\\">\\n      <span *ngIf=\\"icon.icon_type==\'emoji\'\\" [style.color]=\\"i==0 ? \'#000\' : \'#fff\'\\"\\n        nz-icon [nzType]=\\"icon.icon\\"></span>\\n      <img *ngIf=\\"icon.icon_type==\'image\'\\" [src]=\\"icon.icon_url\\">\\n    </span>\\n  </div>\\n</div>\\n`,\\n  styles: [`\\n.anticons-list {\\n    display: grid;\\n    grid-auto-rows: 40px;\\n    grid-template-columns: repeat(auto-fill, 40px);\\n    align-items: center;\\n    gap: 1px;\\n    justify-content: center;\\n    max-height: 200px;\\n    overflow: hidden auto;\\n\\n    li {\\n      cursor: pointer;\\n      text-align: center;\\n      list-style: none;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 4px;\\n    }\\n    li:hover {\\n      background: #108AC9;\\n      color: #fff;\\n    }\\n    li.active {\\n      background: #3664d9;\\n      color: #fff;\\n    }\\n    .icon {\\n      font-size: 24px;\\n    }\\n    img {\\n      max-width: 32px;\\n      max-height: 32px;\\n      display: inline-block;\\n    }\\n}\\n\\n.bg-wrapper{\\n    display: flex;\\n    gap: 12px;\\n    flex-wrap: wrap;\\n}\\n.bg-box{\\n      padding: 4px;\\n      border: 1.5px solid #fff;\\n      border-radius: 4px;\\n    }\\n.bg-box.active {\\n    border-color: #3664d9;\\n}\\n.icon-box{\\n    background: rgb(54, 100, 217);\\n    min-width: 32px;\\n    min-height: 32px;\\n    max-width: 60px;\\n    max-height: 60px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border-radius: 4px;\\n    color: #fff;\\n    font-size: 20px;\\n}\\n\\n.icon-box img{\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n}\\n\\n`],\\n  imports: [CommonModule, NzIconModule]\\n})\\nexport class IconSelectComponent {\\n  @Input() icon: IAppIcon;\\n  @Output() iconChange = new EventEmitter<IAppIcon>();\\n  @Input() filter_icon_type: IconType;\\n  public assets: any[];\\n  public iconBackgrounds = [\\n    \'inherit\', \'#3664D9\', \'#757575\', \'#8200FF\', \'#0DC4CB\', \'#2DC76D\', \'#FF3143\',\\n    \'#FD8701\', \'#FFC900\', \'#FF9900\', \'#FF6600\', \'#FEF7C3\'\\n  ];\\n\\n\\n  constructor() {\\n    this.assets = [];\\n    Object.values(ngZorroIconCategoryNames()).forEach(icons => {\\n      const groupIcons = icons.map(icon => ({ icon_type: IconType.EMOJI, icon: icon, icon_url: null, name: icon + \'\' }));\\n      this.assets.push(...groupIcons);\\n    });\\n    (assetsJson as any[])\\n      .filter((item: any) => [\'png\', \'gif\', \'jpg\', \'svg\'].includes(item.group))\\n      .forEach((item: any) => {\\n        this.assets.push(...(item.children.map((icon: any) => {\\n          const icon_type = icon.usingImg ? IconType.IMAGE : IconType.EMOJI;\\n          return {\\n            icon_type,\\n            icon: icon_type == IconType.EMOJI ? icon.nzType : null,\\n            icon_url: icon_type == IconType.IMAGE ? icon.path : null,\\n            name: icon.name\\n          }\\n        })))\\n      });\\n  }\\n\\n  public get valid(): boolean {\\n    return !!this.icon?.icon_type && !!this.icon?.icon_background;\\n  }\\n\\n  public ngOnInit(): void {\\n    if (!this.icon) {\\n      this.icon = { icon_type: IconType.EMOJI, icon: this.assets[0].icon, icon_url: \'\', icon_background: this.iconBackgrounds[1] };\\n    }\\n    if (this.filter_icon_type) {\\n      this.assets = this.assets.filter((asset: any) => this.filter_icon_type == IconType.IMAGE ? asset.icon_type == IconType.IMAGE : true);\\n    }\\n  }\\n\\n  public updateIcon(asset: any) {\\n    if (!this.icon?.icon_background) {\\n      this.icon.icon_background = this.iconBackgrounds[1];\\n    }\\n    if (asset.icon_type == IconType.EMOJI) {\\n      this.icon = { ...this.icon, icon_type: IconType.EMOJI, icon: asset.icon, icon_url: \'\' };\\n    } else {\\n      this.icon = { ...this.icon, icon_type: IconType.IMAGE, icon: \'\', icon_url: asset.icon_url };\\n    }\\n    this.iconChange.emit(this.icon);\\n  }\\n\\n  public updateIconBackground(background: string) {\\n    this.icon = { ...this.icon, icon_background: background };\\n    this.iconChange.emit(this.icon);\\n  }\\n}","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n.anticons-list {\\n    display: grid;\\n    grid-auto-rows: 40px;\\n    grid-template-columns: repeat(auto-fill, 40px);\\n    align-items: center;\\n    gap: 1px;\\n    justify-content: center;\\n    max-height: 200px;\\n    overflow: hidden auto;\\n\\n    li {\\n      cursor: pointer;\\n      text-align: center;\\n      list-style: none;\\n      width: 100%;\\n      height: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 4px;\\n    }\\n    li:hover {\\n      background: #108AC9;\\n      color: #fff;\\n    }\\n    li.active {\\n      background: #3664d9;\\n      color: #fff;\\n    }\\n    .icon {\\n      font-size: 24px;\\n    }\\n    img {\\n      max-width: 32px;\\n      max-height: 32px;\\n      display: inline-block;\\n    }\\n}\\n\\n.bg-wrapper{\\n    display: flex;\\n    gap: 12px;\\n    flex-wrap: wrap;\\n}\\n.bg-box{\\n      padding: 4px;\\n      border: 1.5px solid #fff;\\n      border-radius: 4px;\\n    }\\n.bg-box.active {\\n    border-color: #3664d9;\\n}\\n.icon-box{\\n    background: rgb(54, 100, 217);\\n    min-width: 32px;\\n    min-height: 32px;\\n    max-width: 60px;\\n    max-height: 60px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border-radius: 4px;\\n    color: #fff;\\n    font-size: 20px;\\n}\\n\\n.icon-box img{\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n}\\n\\n\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":122},"extends":[],"accessors":{"valid":{"name":"valid","getSignature":{"name":"valid","type":"boolean","returnType":"boolean","line":146}}}},{"name":"LibAutocompleteComponent","id":"component-LibAutocompleteComponent-6c9a8f79bdceb39a4c141ec6385592e07de54decdc34bb30d10b9ec026218a9f3631bc781de5d5f434809d65da4519b08f09594b38c2aec8f86cf4842b9da415","file":"src/components/autocomplete/autocomplete.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LibAutocompleteComponent), multi: true,\\n}","type":"component"}],"selector":"[LibAutocomplete]","styleUrls":[],"styles":[],"template":"<input type=\\"text\\"\\n       [placeholder]=\\"placeholder\\"\\n       (compositionstart)=\\"isComposition = true; beforeValue = currentValue;\\"\\n       (compositionend)=\\"handleComposition($event)\\"\\n       (focus)=\\"actived=true\\"\\n       [value]=\\"currentValue\\"\\n       (input)=\\"handleInput($event.target.value)\\"\\n/>\\n<div class=\\"suggestion-list\\" [class.actived]=\\"actived\\" style=\\"max-height: 200px;overflow: auto;z-index:11\\"\\n     *ngIf=\\"suggestions.length\\">\\n  <ul class=\\"vertical suggestions\\">\\n    <li [class.disabled]=\\"true\\" *ngIf=\\"loading\\">\\n    <i sds-icon nzType=\\"loading\\"></i>\\n    </li>\\n    <li *ngFor=\\"let suggestion of suggestions; let i = index\\"\\n        class=\\"suggestion\\"\\n        [ngClass]=\\"{\'selected-item\': currentValue===suggestion}\\"\\n        (click)=\\"changeCurrentValue(suggestion, true, i); actived = false\\">\\n        <ng-container *ngIf=\\"!isCustom\\">\\n            <span>{{suggestion}}</span>\\n            <span *ngIf=\\"subSuggestions[i]\\" class=\\"sub-suggestion\\">{{subSuggestions[i]}}</span>\\n            <span *ngIf=\\"tips[i]\\" class=\\"tip\\">「{{tips[i]}}」</span>\\n        </ng-container>\\n        <ng-container *ngIf=\\"isCustom\\">\\n            <span class=\\"sub-suggestion\\">{{subSuggestions[i]}}</span>\\n            <span *ngIf=\\"tips[i]\\" class=\\"tip\\">「{{tips[i]}}」</span>\\n        </ng-container>\\n    </li>\\n  </ul>\\n</div>\\n","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"isCustom","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":57,"type":"boolean","decorators":[]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":58,"type":"boolean","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":62,"type":"string","decorators":[]},{"name":"selectedValue","deprecated":false,"deprecationMessage":"","line":63,"type":"string","decorators":[]},{"name":"subSuggestions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":60,"type":"string[]","decorators":[]},{"name":"suggestions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":59,"type":"string[]","decorators":[]},{"name":"tips","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":61,"type":"string[]","decorators":[]}],"outputsClass":[{"name":"changeClickEmitter","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":65,"type":"EventEmitter"},{"name":"changeEmitter","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":64,"type":"EventEmitter"}],"propertiesClass":[{"name":"actived","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[125]},{"name":"beforeValue","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[125]},{"name":"classSelector","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":68,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.lib-autocomplete\'"}],"modifierKind":[170,125]},{"name":"currentValue","deprecated":false,"deprecationMessage":"","type":"any","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[125]},{"name":"currentValueChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":106,"modifierKind":[125]},{"name":"isComposition","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[125]},{"name":"isUsingZh","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[125]}],"methodsClass":[{"name":"changeCurrentValue","args":[{"name":"suggestion","type":"any","deprecated":false,"deprecationMessage":""},{"name":"isClick","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"},{"name":"i","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"suggestion","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isClick","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}},{"name":"i","type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"handleComposition","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleInput","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetSuggestionScrollBar","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n解决全选变量栏内的关键词, 切换关键词搜索滚动条还在上一次滚动的位置的bug\\n手动将suggestion-list的滚动条重置回顶部位置\\n","description":"<p>解决全选变量栏内的关键词, 切换关键词搜索滚动条还在上一次滚动的位置的bug\\n手动将suggestion-list的滚动条重置回顶部位置</p>\\n","modifierKind":[123]},{"name":"setDisabledSuggestionList","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'document:click\', [\'$event\']"}],"modifierKind":[170,125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"v","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"v","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.lib-autocomplete","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":68,"type":"boolean","decorators":[]}],"hostListeners":[{"name":"document:click","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":94}],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport {\\n    NgZone, Component, Input, Output, HostBinding, EventEmitter, forwardRef, HostListener, ElementRef\\n} from \'@angular/core\';\\nimport { FormsModule, ControlValueAccessor, NG_VALUE_ACCESSOR } from \'@angular/forms\';\\n\\n@Component({\\n    selector: \'[LibAutocomplete]\',\\n    providers: [\\n        {\\n            provide: NG_VALUE_ACCESSOR,\\n            useExisting: forwardRef(() => LibAutocompleteComponent),\\n            multi: true,\\n        },\\n    ],\\n    template: `\\n    <input type=\\"text\\"\\n           [placeholder]=\\"placeholder\\"\\n           (compositionstart)=\\"isComposition = true; beforeValue = currentValue;\\"\\n           (compositionend)=\\"handleComposition($event)\\"\\n           (focus)=\\"actived=true\\"\\n           [value]=\\"currentValue\\"\\n           (input)=\\"handleInput($event.target.value)\\"\\n    />\\n    <div class=\\"suggestion-list\\" [class.actived]=\\"actived\\" style=\\"max-height: 200px;overflow: auto;z-index:11\\"\\n         *ngIf=\\"suggestions.length\\">\\n      <ul class=\\"vertical suggestions\\">\\n        <li [class.disabled]=\\"true\\" *ngIf=\\"loading\\">\\n        <i sds-icon nzType=\\"loading\\"></i>\\n        </li>\\n        <li *ngFor=\\"let suggestion of suggestions; let i = index\\"\\n            class=\\"suggestion\\"\\n            [ngClass]=\\"{\'selected-item\': currentValue===suggestion}\\"\\n            (click)=\\"changeCurrentValue(suggestion, true, i); actived = false\\">\\n            <ng-container *ngIf=\\"!isCustom\\">\\n                <span>{{suggestion}}</span>\\n                <span *ngIf=\\"subSuggestions[i]\\" class=\\"sub-suggestion\\">{{subSuggestions[i]}}</span>\\n                <span *ngIf=\\"tips[i]\\" class=\\"tip\\">「{{tips[i]}}」</span>\\n            </ng-container>\\n            <ng-container *ngIf=\\"isCustom\\">\\n                <span class=\\"sub-suggestion\\">{{subSuggestions[i]}}</span>\\n                <span *ngIf=\\"tips[i]\\" class=\\"tip\\">「{{tips[i]}}」</span>\\n            </ng-container>\\n        </li>\\n      </ul>\\n    </div>\\n  `,\\n  imports: [CommonModule, FormsModule],\\n})\\nexport class LibAutocompleteComponent implements ControlValueAccessor {\\n    public isComposition = false; // fix中文输入法触发\\n    public currentValue: any;\\n    public actived = false;\\n    public isUsingZh: boolean;\\n    public beforeValue = \'\';\\n\\n    @Input() public isCustom = false;\\n    @Input() public loading = false;\\n    @Input() public suggestions: string[] = [];\\n    @Input() public subSuggestions: string[] = [];\\n    @Input() public tips: string[] = [];\\n    @Input() public placeholder = \'\';\\n    @Input() public selectedValue: string;\\n    @Output() public changeEmitter = new EventEmitter();\\n    @Output() public changeClickEmitter = new EventEmitter();\\n\\n    @HostBinding(\'class.lib-autocomplete\')\\n    public classSelector = true;\\n\\n    constructor(\\n        private eleRef: ElementRef, private zone: NgZone) {\\n\\n    }\\n\\n    public changeCurrentValue(suggestion: any, isClick: boolean = false, i?: number): void {\\n        this.currentValue = suggestion;\\n        this.changeEmitter.emit(this.currentValue);\\n        if (this.isCustom && i !== undefined) {\\n            this.changeEmitter.emit(this.subSuggestions[i]);\\n            if (isClick) {\\n                this.changeClickEmitter.emit(this.subSuggestions[i]);\\n            }\\n        } else {\\n            this.changeEmitter.emit(this.currentValue);\\n            if (isClick) {\\n                this.changeClickEmitter.emit(this.currentValue);\\n            }\\n        }\\n        this.currentValueChange(this.currentValue);\\n        this.resetSuggestionScrollBar();\\n    }\\n\\n    @HostListener(\'document:click\', [\'$event\'])\\n    public setDisabledSuggestionList(event: any): void {\\n        if (!this.eleRef.nativeElement.contains(event.target)) {\\n            this.actived = false;\\n        }\\n    }\\n\\n    public writeValue(v: any): void {\\n        if (v !== undefined) {\\n            this.currentValue = v;\\n        }\\n    }\\n    // tslint:disable-next-line:no-empty\\n    public currentValueChange = (_: any) => {\\n    }\\n\\n    public registerOnChange(fn: any): void {\\n        this.currentValueChange = fn;\\n    }\\n\\n    // tslint:disable-next-line:no-empty\\n    public registerOnTouched(fn: any): void {\\n    }\\n\\n    public handleComposition($event: any): void {\\n        setTimeout(() => {\\n            this.changeCurrentValue($event.target.value);\\n            this.isComposition = false;\\n        }, 0);\\n    }\\n\\n    public handleInput(value: any): void {\\n        this.actived = true;\\n        if (!this.isComposition) {\\n            this.changeCurrentValue(value);\\n        }\\n    }\\n\\n    /**\\n     * 解决全选变量栏内的关键词, 切换关键词搜索滚动条还在上一次滚动的位置的bug\\n     * 手动将suggestion-list的滚动条重置回顶部位置\\n     */\\n    private resetSuggestionScrollBar(): void {\\n        const childrenList: any[] = Array.from(this.eleRef.nativeElement.children);\\n        const suggestionElement = childrenList.find((child) => child.className.includes(\'suggestion-list\'));\\n        if (suggestionElement) {\\n            suggestionElement.scrollTop = 0;\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"eleRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"eleRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"zone","type":"NgZone","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["ControlValueAccessor"]},{"name":"LineChartComponent","id":"component-LineChartComponent-1f60271f94d0b78034372d29b6ec83be1183cf7d1bd4732f37512c3a77f0f8b104066c71ed09901167b9dc4e2c71b63921fe6a4f6822704d08d837a56856ca8f","file":"library/AngularEcharts/components/chart-line.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"chart-line","styleUrls":["./chart.scss"],"styles":[],"template":"<div id=\\"echarts-line\\" class=\\"chart-item line\\"></div>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"chartData","deprecated":false,"deprecationMessage":"","line":11,"type":"ChartData","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"chartId","defaultValue":"\'echarts-line\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[164],"inheritance":{"file":"ChartAbstract"}},{"name":"option","defaultValue":"{ ...BASE_OPTION }","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[164],"inheritance":{"file":"ChartAbstract"}},{"name":"myChart","deprecated":false,"deprecationMessage":"","type":"echarts.ECharts","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[124],"inheritance":{"file":"ChartAbstract"}}],"methodsClass":[{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initChart","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"inheritance":{"file":"ChartAbstract"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"ChartAbstract"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnChanges, SimpleChanges } from \'@angular/core\';\\nimport * as echarts from \'echarts\';\\nimport { ChartData } from \'./typings\';\\nimport { ChartAbstract } from \'./chart.abstract\';\\n@Component({\\n  selector: \'chart-line\',\\n  template: `<div id=\\"echarts-line\\" class=\\"chart-item line\\"></div>`,\\n  styleUrls: [\'./chart.scss\']\\n})\\nexport class LineChartComponent extends ChartAbstract implements OnChanges {\\n  @Input() chartData!: ChartData;\\n  override option: echarts.EChartsOption = { ...BASE_OPTION };\\n  override chartId: string = \'echarts-line\';\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes[\'chartData\']) {\\n      const labels = this.chartData.data.map((d: any) => d.label);\\n      const values = this.chartData.data.map((d: any) => d.value);\\n      this.option.xAxis = { ...this.option.xAxis, data: labels };\\n      this.option.series = [{ type: \'line\', data: values, smooth: true }];\\n\\n      if (!this.myChart) {\\n        this.initChart();\\n      };\\n\\n      this.myChart.setOption(this.option);\\n    }\\n  }\\n}\\n\\nconst BASE_OPTION: echarts.EChartsOption = {\\n  grid: {},\\n  legend: {\\n    show: false,\\n  },\\n  tooltip: {\\n    trigger: \'axis\',\\n    confine: true,\\n    backgroundColor: \'rgba(255, 255, 255, 1)\',\\n    borderWidth: 1,\\n    borderColor: \'#ccc\',\\n    padding: 10,\\n    textStyle: {\\n      color: \'#000\',\\n      fontSize: 12,\\n    }\\n  },\\n  xAxis: {\\n    type: \'category\',\\n    data: [],\\n  },\\n  yAxis: {\\n    type: \'value\',\\n  },\\n  series: [],\\n  // color: undefined,\\n};","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  height: 100%;\\n  width: 100%;\\n  display: block;\\n}\\n.chart-item {\\n  height: 100%;\\n  width: 100%;\\n  min-height: 120px;\\n}\\n","styleUrl":"./chart.scss"}],"stylesData":"","extends":["ChartAbstract"],"implements":["OnChanges"]},{"name":"SearchBoxComponent","id":"component-SearchBoxComponent-49521038947d44e34b3473448395c091b6f10c5e5b036ccd8764e59e3cd29a6321806fff6fdf9205333e4f9c7df3b14dd4e18fee73ecf689f2fe6aeb4ce99cc9","file":"src/components/search-box/search-box.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"search-box","styleUrls":[],"styles":[":host{display:inline-flex;height: 28px;box-sizing: content-box;}"],"templateUrl":["./search-box.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n是否禁用搜索框","description":"<p>是否禁用搜索框</p>\\n","line":27,"type":"boolean","decorators":[]},{"name":"keyword","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n搜索关键词","description":"<p>搜索关键词</p>\\n","line":23,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'input search text\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n搜索框占位符文本","description":"<p>搜索框占位符文本</p>\\n","line":25,"type":"string","decorators":[]},{"name":"width","defaultValue":"120","deprecated":false,"deprecationMessage":"","rawdescription":"\\n搜索框宽度","description":"<p>搜索框宽度</p>\\n","line":29,"type":"number","decorators":[]}],"outputsClass":[{"name":"keywordChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n关键词变更事件发射器","description":"<p>关键词变更事件发射器</p>\\n","line":31,"type":"EventEmitter"}],"propertiesClass":[{"name":"_keyword$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>用于处理搜索关键词的 Subject</p>\\n","line":33,"rawdescription":"\\n用于处理搜索关键词的 Subject","modifierKind":[123]}],"methodsClass":[{"name":"cancel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n取消搜索\\n清空搜索框并触发关键词变更事件\\n","description":"<p>取消搜索\\n清空搜索框并触发关键词变更事件</p>\\n","modifierKind":[125]},{"name":"keywordUpdate","args":[{"name":"keyword","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n处理输入框值变更\\n","description":"<p>处理输入框值变更</p>\\n","modifierKind":[125],"jsdoctags":[{"name":{"pos":1375,"end":1382,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"keyword"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1369,"end":1374,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>新的搜索关键词</p>\\n"}]},{"name":"submit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n提交搜索\\n立即触发关键词变更事件\\n","description":"<p>提交搜索\\n立即触发关键词变更事件</p>\\n","modifierKind":[125]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"NzInputModule","type":"module"},{"name":"NzIconModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { Subject, debounceTime, distinctUntilChanged } from \'rxjs\';\\nimport { NzIconModule } from \'ng-zorro-antd/icon\';\\nimport { NzInputModule } from \'ng-zorro-antd/input\';\\n\\n@Component({\\n  selector: \'search-box\',\\n  templateUrl: \'./search-box.component.html\',\\n  imports: [\\n    CommonModule, FormsModule,\\n    NzInputModule, NzIconModule\\n  ],\\n  styles: [`:host{display:inline-flex;height: 28px;box-sizing: content-box;}`]\\n})\\nexport class SearchBoxComponent {\\n  /** 搜索关键词 */\\n  @Input() public keyword: string = \'\';\\n  /** 搜索框占位符文本 */\\n  @Input() public placeholder: string = \'input search text\';\\n  /** 是否禁用搜索框 */\\n  @Input() public disabled: boolean = false;\\n  /** 搜索框宽度 */\\n  @Input() public width = 120;\\n  /** 关键词变更事件发射器 */\\n  @Output() public keywordChange = new EventEmitter();\\n  /** 用于处理搜索关键词的 Subject */\\n  private _keyword$ = new Subject<string>();\\n\\n  /**\\n   * 构造函数\\n   * 初始化关键词变更的订阅处理\\n   */\\n  constructor() {\\n    this._keyword$\\n      .pipe(\\n        // 仅当值发生变化时才触发\\n        distinctUntilChanged(),\\n        // 设置300ms的防抖时间\\n        debounceTime(300),\\n      )\\n      .subscribe((keyword) => {\\n        this.keywordChange.emit(keyword);\\n      });\\n  }\\n\\n  /**\\n   * 处理输入框值变更\\n   * @param keyword 新的搜索关键词\\n   */\\n  public keywordUpdate(keyword: string) {\\n    this._keyword$.next(keyword);\\n  }\\n\\n  /**\\n   * 提交搜索\\n   * 立即触发关键词变更事件\\n   */\\n  public submit(): void {\\n    this.keywordChange.emit(this.keyword);\\n  }\\n\\n  /**\\n   * 取消搜索\\n   * 清空搜索框并触发关键词变更事件\\n   */\\n  public cancel(): void {\\n    this.keyword = \'\';\\n    this.keywordChange.emit(this.keyword);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":":host{display:inline-flex;height: 28px;box-sizing: content-box;}\\n","constructorObj":{"name":"constructor","description":"<p>构造函数\\n初始化关键词变更的订阅处理</p>\\n","deprecated":false,"deprecationMessage":"","args":[],"line":33,"rawdescription":"\\n\\n构造函数\\n初始化关键词变更的订阅处理\\n"},"extends":[],"templateData":"<nz-input-group class=\\"keywords\\"\\n                 [style.width]=\\"width||\'max-content\'\\"\\n                 [style.height.%]=\\"100\\"\\n                 [nzPrefix]=\\"searchIcon\\"\\n                 [nzSuffix]=\\"clearTpl\\">\\n  <input nz-input\\n         [(ngModel)]=\\"keyword\\"\\n         (ngModelChange)=\\"keywordUpdate($event)\\"\\n         [disabled]=\\"disabled\\"\\n         (keyup.enter)=\\"submit()\\"\\n         [placeholder]=\\"placeholder\\" />\\n  <ng-template #searchIcon><i nz-icon\\n       nzType=\\"search\\"></i></ng-template>\\n  <ng-template #clearTpl>\\n    <span nz-icon\\n          *ngIf=\\"keyword\\"\\n          class=\\"ant-input-clear-icon\\"\\n          nzType=\\"close-circle\\"\\n          nzTheme=\\"fill\\"\\n          (click)=\\"cancel()\\"></span>\\n  </ng-template>\\n</nz-input-group>\\n"},{"name":"SearchTagComponent","id":"component-SearchTagComponent-50fbfd6997c1218b19eb018c91426dbc6d248eaaa6f072e8668f443a584e1639e6ad975790a7bf575c36c10d31dcc7580200b22cf494e01deb96f24612b63b84","file":"src/components/search-tag/search-tag.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-search-tag","styleUrls":[],"styles":["\\n    :host{\\n      display: block;\\n      width: 100%;\\n      height: 28px;\\n      text-align: left;\\n      font-size: 14px;\\n    }\\n    .tag-group {\\n      min-width: 200px;\\n      max-width: 300px;\\n    }\\n    .tag-item {\\n      margin: 0;\\n    }\\n    .icon{\\n      color: #d9d9d9;\\n    }\\n    "],"templateUrl":["./search-tag.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"tagIds","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":41,"type":"string[]","decorators":[]},{"name":"tagList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":39,"type":"any[]","decorators":[]},{"name":"width","defaultValue":"150","deprecated":false,"deprecationMessage":"","line":40,"type":"number","decorators":[]}],"outputsClass":[{"name":"tagIdsChange","defaultValue":"new EventEmitter<string[]>()","deprecated":false,"deprecationMessage":"","line":42,"type":"EventEmitter"}],"propertiesClass":[{"name":"checkSet","defaultValue":"new Set<string>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":43}],"methodsClass":[{"name":"clearCheckTags","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"toggleCheckTag","args":[{"name":"tagId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"tagId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"FormsModule","type":"module"},{"name":"NzSelectModule","type":"module"},{"name":"NzIconModule","type":"module"},{"name":"NzDropDownModule","type":"module"},{"name":"NzCheckboxModule","type":"module"},{"name":"TranslatePipe","type":"pipe"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Output, EventEmitter } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { NzSelectModule } from \'ng-zorro-antd/select\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { NzDropDownModule } from \'ng-zorro-antd/dropdown\';\\nimport { NzCheckboxModule } from \'ng-zorro-antd/checkbox\';\\nimport { NzI18nService } from \'ng-zorro-antd/i18n\';\\nimport { NzIconModule } from \'ng-zorro-antd/icon\';\\nimport { TranslatePipe } from \'@Pipes\';\\n@Component({\\n  selector: \'app-search-tag\',\\n  templateUrl: \'./search-tag.component.html\',\\n  styles: [`\\n    :host{\\n      display: block;\\n      width: 100%;\\n      height: 28px;\\n      text-align: left;\\n      font-size: 14px;\\n    }\\n    .tag-group {\\n      min-width: 200px;\\n      max-width: 300px;\\n    }\\n    .tag-item {\\n      margin: 0;\\n    }\\n    .icon{\\n      color: #d9d9d9;\\n    }\\n    `],\\n  imports: [\\n    CommonModule, FormsModule,\\n    NzSelectModule, NzIconModule, NzDropDownModule, NzCheckboxModule,\\n    TranslatePipe,\\n  ]\\n})\\nexport class SearchTagComponent {\\n  @Input() tagList: any[] = [];\\n  @Input() width: number = 150;\\n  @Input() tagIds: string[] = [];\\n  @Output() tagIdsChange = new EventEmitter<string[]>();\\n  checkSet = new Set<string>();\\n\\n  constructor(private i18n: NzI18nService) { }\\n\\n  get firstTag(): string {\\n    return this.checkSet.size > 0\\n      ? this.tagList.find(tag => this.checkSet.has(tag.id))?.name\\n      : this.i18n.translate(\'Role.CommandTagPlaceholder\')\\n  }\\n  get tagsSurfix(): string {\\n    return this.checkSet.size > 1\\n      ? `+ ${this.checkSet.size - 1}`\\n      : \'\';\\n  }\\n\\n  toggleCheckTag(tagId: string) {\\n    this.checkSet.has(tagId) ? this.checkSet.delete(tagId) : this.checkSet.add(tagId);\\n    this.tagIdsChange.emit([...this.checkSet]);\\n  }\\n\\n  clearCheckTags() {\\n    this.checkSet.clear();\\n    this.tagIdsChange.emit([...this.checkSet]);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    :host{\\n      display: block;\\n      width: 100%;\\n      height: 28px;\\n      text-align: left;\\n      font-size: 14px;\\n    }\\n    .tag-group {\\n      min-width: 200px;\\n      max-width: 300px;\\n    }\\n    .tag-item {\\n      margin: 0;\\n    }\\n    .icon{\\n      color: #d9d9d9;\\n    }\\n    \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"i18n","type":"NzI18nService","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"i18n","type":"NzI18nService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"accessors":{"firstTag":{"name":"firstTag","getSignature":{"name":"firstTag","type":"string","returnType":"string","line":47}},"tagsSurfix":{"name":"tagsSurfix","getSignature":{"name":"tagsSurfix","type":"string","returnType":"string","line":52}}},"templateData":"<span\\n  class=\\"flex bg-white gap-md cursor-pointer bordered full-width full-height padding-sm border-radius\\"\\n  [style.width.px]=\\"width\\" align=\\"center\\">\\n  <span class=\\"flex gap-xs flex-1 ellipsis\\" align=\\"center\\" nz-dropdown [nzDropdownMenu]=\\"menu\\">\\n    <i nz-icon nzType=\\"tags\\" [nzTheme]=\\"checkSet.size?\'fill\':\'outline\'\\"></i>\\n    <i class=\\"flex-1 text-left ellipsis\\">{{firstTag}}</i>\\n    <i>{{tagsSurfix}}</i>\\n  </span>\\n  <i *ngIf=\\"checkSet.size\\" class=\\"icon\\" nz-icon nzType=\\"close-circle\\" nzTheme=\\"fill\\" (click)=\\"clearCheckTags()\\"></i>\\n  <i *ngIf=\\"!checkSet.size\\" class=\\"icon\\" nz-icon nzType=\\"down\\"></i>\\n</span>\\n\\n<nz-dropdown-menu #menu=\\"nzDropdownMenu\\">\\n  <div class=\\"tag-group flex bg-white gap-sm padding-md bordered\\" vertical>\\n    <label class=\\"tag-item ellipsis\\" *ngFor=\\"let tag of tagList\\" nz-checkbox [ngModel]=\\"checkSet.has(tag.id)\\"\\n      (ngModelChange)=\\"toggleCheckTag(tag.id)\\">\\n      <span class=\\"ellipsis\\"><i >{{tag.name}}</i></span>\\n    </label>\\n  </div>\\n</nz-dropdown-menu>"}],"modules":[],"miscellaneous":{"variables":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideZoneChangeDetection({ eventCoalescing: true }),\\n    provideRouter(routes),\\n    provideAnimationsAsync(),\\n    provideHttpClient(), //added the function here\\n    provideNzI18n(en_US)\\n  ]\\n}"},{"name":"BASE_OPTION","ctype":"miscellaneous","subtype":"variable","file":"library/AngularEcharts/components/chart-line.ts","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","defaultValue":"{\\n  grid: {},\\n  legend: {\\n    show: false,\\n  },\\n  tooltip: {\\n    trigger: \'axis\',\\n    confine: true,\\n    backgroundColor: \'rgba(255, 255, 255, 1)\',\\n    borderWidth: 1,\\n    borderColor: \'#ccc\',\\n    padding: 10,\\n    textStyle: {\\n      color: \'#000\',\\n      fontSize: 12,\\n    }\\n  },\\n  xAxis: {\\n    type: \'category\',\\n    data: [],\\n  },\\n  yAxis: {\\n    type: \'value\',\\n  },\\n  series: [],\\n  // color: undefined,\\n}"},{"name":"BASE_OPTION","ctype":"miscellaneous","subtype":"variable","file":"library/AngularEcharts/components/chart.abstract.ts","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","defaultValue":"{\\n  grid: {},\\n  legend: {\\n    show: false,\\n  }\\n}"},{"name":"CanComponentDeactivateGuard","ctype":"miscellaneous","subtype":"variable","file":"src/services/canDeactive.guard.ts","deprecated":false,"deprecationMessage":"","type":"CanDeactivateFn<CanComponentDeactivate>","defaultValue":"(\\n  component: CanComponentDeactivate\\n) => {\\n  return component.canDeactivate ? component.canDeactivate() : true;\\n}"},{"name":"COLLAPSE_ANIMATION","ctype":"miscellaneous","subtype":"variable","file":"src/animations/animations.ts","deprecated":false,"deprecationMessage":"","type":"AnimationTriggerMetadata","defaultValue":"trigger(\'collapse\', [\\n  transition(\'no => yes, void => yes\', [\\n    animate(\'300ms cubic-bezier(0.4, 0, 0.2, 1)\', keyframes([\\n      style({\\n        height: \'60px\',\\n        opacity: 0.5,\\n        transform: \'scale(0.95)\',\\n        overflow: \'hidden\',\\n      }),\\n      style({\\n        height: \'*\',\\n        opacity: 1,\\n        transform: \'scale(1)\',\\n        overflow: \'hidden\',\\n      }),\\n    ])),\\n  ]),\\n  transition(\'yes => no\', [\\n    animate(\'300ms cubic-bezier(0.4, 0, 0.2, 1)\', keyframes([\\n      style({\\n        height: \'*\',\\n        opacity: 1,\\n        transform: \'scale(1)\',\\n        overflow: \'hidden\',\\n      }),\\n      style({\\n        opacity: 0.5,\\n        transform: \'scale(0.95)\',\\n        overflow: \'hidden\',\\n      }),\\n    ])),\\n  ]),\\n])","rawdescription":"折叠动画","description":"<p>折叠动画</p>\\n"},{"name":"CommonIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Aim\',\\n    \'Alert\',\\n    \'Api\',\\n    \'AppstoreAdd\',\\n    \'Apartment\',\\n    \'Audio\',\\n    \'AudioMuted\',\\n    \'Bank\',\\n    \'Barcode\',\\n    \'Bars\',\\n    \'Bell\',\\n    \'Block\',\\n    \'Border\',\\n    \'AccountBook\',\\n    \'Branches\',\\n    \'Bug\',\\n    \'Audit\',\\n    \'Calendar\',\\n    \'Calculator\',\\n    \'Camera\',\\n    \'Car\',\\n    \'Bulb\',\\n    \'Book\',\\n    \'CarryOut\',\\n    \'Ci\',\\n    \'CiCircle\',\\n    \'CloudDownload\',\\n    \'Cloud\',\\n    \'CloudServer\',\\n    \'CloudSync\',\\n    \'Code\',\\n    \'Cluster\',\\n    \'CloudUpload\',\\n    \'Compress\',\\n    \'Compass\',\\n    \'ConsoleSql\',\\n    \'Appstore\',\\n    \'Contacts\',\\n    \'Coffee\',\\n    \'Container\',\\n    \'Control\',\\n    \'CopyrightCircle\',\\n    \'Clear\',\\n    \'Build\',\\n    \'Database\',\\n    \'Dashboard\',\\n    \'DeleteRow\',\\n    \'DeliveredProcedure\',\\n    \'DeploymentUnit\',\\n    \'DeleteColumn\',\\n    \'Desktop\',\\n    \'Dislike\',\\n    \'Disconnect\',\\n    \'Comment\',\\n    \'DollarCircle\',\\n    \'Dollar\',\\n    \'BorderlessTable\',\\n    \'Ellipsis\',\\n    \'EuroCircle\',\\n    \'Environment\',\\n    \'Exception\',\\n    \'Euro\',\\n    \'CustomerService\',\\n    \'ExpandAlt\',\\n    \'Expand\',\\n    \'Export\',\\n    \'Experiment\',\\n    \'EyeInvisible\',\\n    \'Eye\',\\n    \'Download\',\\n    \'FieldBinary\',\\n    \'FieldNumber\',\\n    \'CreditCard\',\\n    \'FieldString\',\\n    \'FieldTime\',\\n    \'FileExcel\',\\n    \'FileExclamation\',\\n    \'FileAdd\',\\n    \'FileDone\',\\n    \'Crown\',\\n    \'FileMarkdown\',\\n    \'File\',\\n    \'FilePdf\',\\n    \'FileJpg\',\\n    \'FileGif\',\\n    \'FileSync\',\\n    \'FileProtect\',\\n    \'FileSearch\',\\n    \'FileUnknown\',\\n    \'FileWord\',\\n    \'FileText\',\\n    \'FileZip\',\\n    \'Filter\',\\n    \'Flag\',\\n    \'Fire\',\\n    \'FolderAdd\',\\n    \'FolderOpen\',\\n    \'Folder\',\\n    \'FilePpt\',\\n    \'FolderView\',\\n    \'Copyright\',\\n    \'Fork\',\\n    \'Function\',\\n    \'FundProjectionScreen\',\\n    \'FunnelPlot\',\\n    \'Gateway\',\\n    \'Gift\',\\n    \'Gif\',\\n    \'Frown\',\\n    \'Global\',\\n    \'Gold\',\\n    \'Group\',\\n    \'Hdd\',\\n    \'Heart\',\\n    \'Home\',\\n    \'FormatPainter\',\\n    \'Idcard\',\\n    \'Hourglass\',\\n    \'Holder\',\\n    \'FundView\',\\n    \'Inbox\',\\n    \'InsertRowLeft\',\\n    \'Import\',\\n    \'InsertRowAbove\',\\n    \'InsertRowRight\',\\n    \'Interaction\',\\n    \'Laptop\',\\n    \'Layout\',\\n    \'Insurance\',\\n    \'Line\',\\n    \'Like\',\\n    \'Loading\',\\n    \'Loading3Quarters\',\\n    \'Lock\',\\n    \'MacCommand\',\\n    \'Mail\',\\n    \'Link\',\\n    \'Man\',\\n    \'MedicineBox\',\\n    \'Meh\',\\n    \'Message\',\\n    \'Menu\',\\n    \'Key\',\\n    \'Mobile\',\\n    \'MoneyCollect\',\\n    \'Monitor\',\\n    \'Moon\',\\n    \'More\',\\n    \'NodeIndex\',\\n    \'NodeCollapse\',\\n    \'NodeExpand\',\\n    \'Merge\',\\n    \'Number\',\\n    \'MergeCells\',\\n    \'Notification\',\\n    \'PaperClip\',\\n    \'Partition\',\\n    \'Muted\',\\n    \'OneToOne\',\\n    \'PayCircle\',\\n    \'Percentage\',\\n    \'Picture\',\\n    \'PlaySquare\',\\n    \'PoundCircle\',\\n    \'Pound\',\\n    \'Poweroff\',\\n    \'Profile\',\\n    \'Printer\',\\n    \'Project\',\\n    \'Product\',\\n    \'Phone\',\\n    \'PropertySafety\',\\n    \'Pushpin\',\\n    \'Qrcode\',\\n    \'PullRequest\',\\n    \'Read\',\\n    \'Reconciliation\',\\n    \'RedEnvelope\',\\n    \'Reload\',\\n    \'Rest\',\\n    \'Robot\',\\n    \'Rocket\',\\n    \'RotateRight\',\\n    \'SafetyCertificate\',\\n    \'RotateLeft\',\\n    \'Save\',\\n    \'Scan\',\\n    \'SecurityScan\',\\n    \'Schedule\',\\n    \'Select\',\\n    \'Send\',\\n    \'Shake\',\\n    \'Setting\',\\n    \'Shop\',\\n    \'Shopping\',\\n    \'ShoppingCart\',\\n    \'Sisternode\',\\n    \'Skin\',\\n    \'Smile\',\\n    \'FileImage\',\\n    \'Solution\',\\n    \'SplitCells\',\\n    \'Signature\',\\n    \'Search\',\\n    \'Star\',\\n    \'Sound\',\\n    \'ShareAlt\',\\n    \'Sun\',\\n    \'Switcher\',\\n    \'Sync\',\\n    \'Table\',\\n    \'Tag\',\\n    \'Tablet\',\\n    \'Team\',\\n    \'Subnode\',\\n    \'Thunderbolt\',\\n    \'Tags\',\\n    \'Tool\',\\n    \'TrademarkCircle\',\\n    \'ToTop\',\\n    \'Translation\',\\n    \'Safety\',\\n    \'Truck\',\\n    \'Unlock\',\\n    \'Ungroup\',\\n    \'Trademark\',\\n    \'Upload\',\\n    \'Usb\',\\n    \'Trophy\',\\n    \'User\',\\n    \'UserDelete\',\\n    \'UsergroupAdd\',\\n    \'UsergroupDelete\',\\n    \'Verified\',\\n    \'VideoCamera\',\\n    \'VideoCameraAdd\',\\n    \'UserAdd\',\\n    \'History\',\\n    \'InsertRowBelow\',\\n    \'Wifi\',\\n    \'Woman\',\\n    \'UserSwitch\',\\n    \'Transaction\',\\n    \'Wallet\',\\n]"},{"name":"DirectionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'StepBackward\',\\n    \'StepForward\',\\n    \'FastBackward\',\\n    \'FastForward\',\\n    \'Shrink\',\\n    \'ArrowsAlt\',\\n    \'Down\',\\n    \'Up\',\\n    \'Left\',\\n    \'Right\',\\n    \'CaretUp\',\\n    \'CaretDown\',\\n    \'CaretLeft\',\\n    \'CaretRight\',\\n    \'UpCircle\',\\n    \'DownCircle\',\\n    \'LeftCircle\',\\n    \'RightCircle\',\\n    \'DoubleRight\',\\n    \'DoubleLeft\',\\n    \'VerticalLeft\',\\n    \'VerticalRight\',\\n    \'VerticalAlignTop\',\\n    \'VerticalAlignMiddle\',\\n    \'VerticalAlignBottom\',\\n    \'Forward\',\\n    \'Backward\',\\n    \'Rollback\',\\n    \'Enter\',\\n    \'Retweet\',\\n    \'Swap\',\\n    \'SwapLeft\',\\n    \'SwapRight\',\\n    \'ArrowUp\',\\n    \'ArrowDown\',\\n    \'ArrowLeft\',\\n    \'ArrowRight\',\\n    \'PlayCircle\',\\n    \'UpSquare\',\\n    \'DownSquare\',\\n    \'LeftSquare\',\\n    \'RightSquare\',\\n    \'Login\',\\n    \'Logout\',\\n    \'MenuFold\',\\n    \'MenuUnfold\',\\n    \'BorderBottom\',\\n    \'BorderHorizontal\',\\n    \'BorderInner\',\\n    \'BorderOuter\',\\n    \'BorderLeft\',\\n    \'BorderRight\',\\n    \'BorderTop\',\\n    \'BorderVerticle\',\\n    \'PicCenter\',\\n    \'PicLeft\',\\n    \'PicRight\',\\n    \'RadiusBottomleft\',\\n    \'RadiusBottomright\',\\n    \'RadiusUpleft\',\\n    \'RadiusUpright\',\\n    \'Fullscreen\',\\n    \'FullscreenExit\',\\n]"},{"name":"EditionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Edit\',\\n    \'Form\',\\n    \'Copy\',\\n    \'Scissor\',\\n    \'Delete\',\\n    \'Snippets\',\\n    \'Diff\',\\n    \'Highlight\',\\n    \'AlignCenter\',\\n    \'AlignLeft\',\\n    \'AlignRight\',\\n    \'BgColors\',\\n    \'Bold\',\\n    \'Italic\',\\n    \'Underline\',\\n    \'Strikethrough\',\\n    \'Redo\',\\n    \'Undo\',\\n    \'ZoomIn\',\\n    \'ZoomOut\',\\n    \'FontColors\',\\n    \'FontSize\',\\n    \'LineHeight\',\\n    \'Dash\',\\n    \'SmallDash\',\\n    \'SortAscending\',\\n    \'SortDescending\',\\n    \'Drag\',\\n    \'OrderedList\',\\n    \'UnorderedList\',\\n    \'RadiusSetting\',\\n    \'ColumnWidth\',\\n    \'ColumnHeight\',\\n]"},{"name":"FADE_ANIMATION","ctype":"miscellaneous","subtype":"variable","file":"src/animations/animations.ts","deprecated":false,"deprecationMessage":"","type":"AnimationTriggerMetadata","defaultValue":"trigger(\'fade\', [\\n  state(\'fadeOut, void\', style({ \\n    opacity: 0,\\n    transform: \'translateY(20px) scale(0.95)\'\\n  })),\\n  state(\'fadeIn\', style({ \\n    opacity: 1,\\n    transform: \'translateY(0) scale(1)\'\\n  })),\\n  transition(\'* <=> fadeIn\', animate(\'800ms cubic-bezier(0.4, 0, 0.2, 1)\')),\\n])","rawdescription":"淡入淡出动画","description":"<p>淡入淡出动画</p>\\n"},{"name":"fileTypeIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/utils/index.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'txt\': \'files:text-fill\',\\n  \'md\': \'files:markdown-fill\',\\n  \'mdx\': \'files:markdown-fill\',\\n  \'pdf\': \'files:pdf-fill\',\\n  \'html\': \'files:html-fill\',\\n  \'xlsx\': \'files:excel-fill\',\\n  \'xls\': \'files:excel-fill\',\\n  \'docx\': \'files:word-fill\',\\n  \'csv\': \'files:excel-fill\',\\n}"},{"name":"gb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"1024 * mb"},{"name":"kb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"1024"},{"name":"mb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"1024 * kb"},{"name":"operators","ctype":"miscellaneous","subtype":"variable","file":"src/utils/typings.ts","deprecated":false,"deprecationMessage":"","type":"IOperator[]","defaultValue":"[\\n    {\\n        value: EOperator.GreaterThan, label: \'大于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.LessThan, label: \'小于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.EqualTo, label: \'等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.NotEqualTo, label: \'不等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.Between, label: \'范围\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: true\\n    }, {\\n        value: EOperator.Contains, label: \'包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    },\\n    {\\n        value: EOperator.NotContains, label: \'不包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    }\\n]"},{"name":"REGEXP","ctype":"miscellaneous","subtype":"variable","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  phoneNumber: /^1[3-9]\\\\d{9}$/,\\n  landlineAndPhone: /^((0\\\\d{2,3}-\\\\d{7,8})|(1[3-9]\\\\d{9}))$/,\\n  nonNegativeInteger: /^\\\\d+$/,\\n  positiveInteger: /^[1-9]\\\\d*$/,\\n  decimalNumber: /^[0-9]+(\\\\.[0-9]+)?$/,\\n  empty: /^\\\\s+$/,\\n  onlyChinese: /^[\\\\u4e00-\\\\u9fa5_a-zA-Z]+$/,\\n  certificateCode: /(^[1-9]\\\\d{5}(18|19|([23]\\\\d))\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$)|(^[1-9]\\\\d{5}\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{2}[0-9Xx]$)/,\\n  mailbox: /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z.]{2,6})$/\\n}"},{"name":"StreamStatusIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/utils/index.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'default\': [\'loading\', \'status-icon loading\'],\\n  \'failed\': [\'question-circle\', \'status-icon error\'],\\n  \'succeeded\': [\'check-circle\', \'status-icon success\'],\\n  \'start\': [\'icons:node-start\', \'node-icon start\'],\\n  \'llm\': [\'icons:node-llm\', \'node-icon llm\'],\\n  \'if-else\': [\'icons:node-branch\', \'node-icon if-else\'],\\n  \'http-request\': [\'icons:node-http\', \'node-icon http-request\'],\\n  \'code\': [\'icons:script\', \'node-icon code\'],\\n  \'tool\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'iteration\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'answer\': [\'icons:node-answer\', \'node-icon answer\']\\n}"},{"name":"StreamStatusIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/directives/event-source/typing.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'default\': [\'loading\', \'status-icon loading\'],\\n  \'failed\': [\'question-circle\', \'status-icon error\'],\\n  \'succeeded\': [\'check-circle\', \'status-icon success\'],\\n  \'start\': [\'icons:node-start\', \'node-icon start\'],\\n  \'llm\': [\'icons:node-llm\', \'node-icon llm\'],\\n  \'if-else\': [\'icons:node-branch\', \'node-icon if-else\'],\\n  \'http-request\': [\'icons:node-http\', \'node-icon http-request\'],\\n  \'code\': [\'icons:script\', \'node-icon code\'],\\n  \'tool\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'iteration\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'answer\': [\'icons:node-answer\', \'node-icon answer\']\\n}"},{"name":"SuggestionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Question\',\\n    \'QuestionCircle\',\\n    \'Plus\',\\n    \'PlusCircle\',\\n    \'Pause\',\\n    \'PauseCircle\',\\n    \'Minus\',\\n    \'MinusCircle\',\\n    \'PlusSquare\',\\n    \'MinusSquare\',\\n    \'Info\',\\n    \'InfoCircle\',\\n    \'Exclamation\',\\n    \'ExclamationCircle\',\\n    \'Close\',\\n    \'CloseCircle\',\\n    \'CloseSquare\',\\n    \'Check\',\\n    \'CheckCircle\',\\n    \'CheckSquare\',\\n    \'ClockCircle\',\\n    \'Warning\',\\n    \'IssuesClose\',\\n    \'Stop\',\\n]"}],"functions":[{"name":"_isAllChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":""},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_isHalfChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":""},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"certificateCodeValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"checkListRequireValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"chooseFileToUpload","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"fileType","deprecated":false,"deprecationMessage":""},{"name":"createDataFromFile","deprecated":false,"deprecationMessage":""},{"name":"_message","type":"NzMessageService","deprecated":false,"deprecationMessage":""},{"name":"accept","deprecated":false,"deprecationMessage":"","optional":true},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"returnType":"void","jsdoctags":[{"name":"fileType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"createDataFromFile","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_message","type":"NzMessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accept","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"copyToClipboard","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>复制到剪贴板</p>\\n","args":[{"name":"elem","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":1993,"end":1997,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"elem"},"type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":1987,"end":1992,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""},{"tagName":{"pos":2003,"end":2010,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":""}]},{"name":"decimalNumberValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"formatSreamMeta","file":"src/directives/event-source/typing.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"stream","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"stream","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateUid","file":"src/utils/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"getCheckedCount","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"number","jsdoctags":[{"name":"list","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDownloadFileName","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>获取下载文件名</p>\\n","args":[{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":""}],"returnType":"string","jsdoctags":[{"name":{"pos":1557,"end":1564,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"headers"},"type":"HttpHeaders","deprecated":false,"deprecationMessage":"","tagName":{"pos":1551,"end":1556,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""},{"tagName":{"pos":1570,"end":1577,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":""}]},{"name":"getListCheckedStatus","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表勾选状态计算</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"ICheckedStatus","jsdoctags":[{"name":{"pos":1424,"end":1428,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":1418,"end":1423,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":1443,"end":1458,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":1437,"end":1442,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":1475,"end":1482,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表勾选状态</p>\\n"}]},{"name":"isAllChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表全勾选计算逻辑</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":442,"end":446,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":436,"end":441,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":461,"end":476,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":455,"end":460,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":493,"end":500,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表状态是否为全勾选</p>\\n"}]},{"name":"isEmptyInputValue","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"NzSafeAny","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"NzSafeAny","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isHalfChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表半勾选计算逻辑</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":976,"end":980,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":970,"end":975,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":995,"end":1010,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":989,"end":994,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":1027,"end":1034,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表状态是否为半勾选</p>\\n"}]},{"name":"isMatchedOption","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"},{"name":"option","type":"any","deprecated":false,"deprecationMessage":""},{"name":"names","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}},{"name":"option","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"names","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"isMobile","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"landlineAndPhoneValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"matchCount","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":""},{"name":"keyword","type":"string","deprecated":false,"deprecationMessage":""},{"name":"item","type":"any","deprecated":false,"deprecationMessage":""},{"name":"prefixOrSuffix","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"returnType":"number","jsdoctags":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"keyword","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"prefixOrSuffix","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"ngZorroIconCategoryNames","file":"src/components/assets/util/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"noEmptyValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>输入框不能为空（包括空白字符）</p>\\n","args":[],"returnType":"ValidatorFn"},{"name":"nonNegativeIntegerValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"onlyChineseValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"phoneNumberValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"positiveIntegerValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"printToClipboard","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>打印到剪贴板</p>\\n","args":[{"name":"codes","deprecated":false,"deprecationMessage":""}],"returnType":"void","jsdoctags":[{"name":{"pos":2798,"end":2803,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"codes"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":2792,"end":2797,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""}]},{"name":"racePromises","file":"src/utils/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"promises","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"promises","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectBy","file":"src/utils/object/selector.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>选择映射</p>\\n","args":[{"name":"item","type":"T","deprecated":false,"deprecationMessage":""},{"name":"selector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"P","jsdoctags":[{"name":{"pos":66,"end":70,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"item"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":60,"end":65,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>输入</p>\\n"},{"name":{"pos":84,"end":92,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"selector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":78,"end":83,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>结果选择器，传映射函数则用函数映射，传字符串键则获取输入的该属性</p>\\n"},{"tagName":{"pos":130,"end":137,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>映射结果</p>\\n"}]},{"name":"selectCompareFn","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'id\'"}],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'id\'","tagName":{"text":"param"}}]},{"name":"selectFilterOption","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"names","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"jsdoctags":[{"name":"names","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"uuidv4","file":"src/utils/uuid.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"validateForm","file":"src/utils/form-validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>angular 表单校验</p>\\n","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"options","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"returnType":"void","jsdoctags":[{"name":{"pos":116,"end":123,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"control"},"type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"pos":110,"end":115,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>表单控件</p>\\n"},{"name":{"pos":139,"end":146,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"options"},"deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"pos":133,"end":138,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>额外的参数配置，具体可以查看 AbstractControl.updateValueAndValidity 的第二个参数</p>\\n"}]}],"typealiases":[{"name":"Action","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"AnyFunc","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"AnyParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198},{"name":"CleanUp","ctype":"miscellaneous","subtype":"typealias","rawtype":"PureAction","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"EnumUnderlayingType","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"ExcludeKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Exclude<Keys | K>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>排除一些key，且具有类型约束</p>\\n","kind":183},{"name":"ExtractKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"K","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>获取key联合的子联合</p>\\n","kind":183},{"name":"FunctionSelector","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"KeySelector","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199},{"name":"MyErrorsOptions","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","description":"","kind":193},{"name":"MyValidationErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"Record<string | MyErrorsOptions>","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"OmitKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Omit<T | K>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>键约束强化版Omit</p>\\n","kind":183},{"name":"PlainObject","ctype":"miscellaneous","subtype":"typealias","rawtype":"Record<string | PrimitiveTypes>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"PrimitiveTypes","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number | boolean | null | undefined |  | symbol","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"PromiseOr","ctype":"miscellaneous","subtype":"typealias","rawtype":"T | PromiseLike<T>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"PropertyKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>属性的键，目前无法区分方法与回调</p>\\n","kind":199},{"name":"PropertyPart","ctype":"miscellaneous","subtype":"typealias","rawtype":"Pick<T | PropertyKeys<T>>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"PureAction","ctype":"miscellaneous","subtype":"typealias","rawtype":"Action<>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Replace","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>替换部分属性生成新类型</p>\\n","kind":200},{"name":"Selector","ctype":"miscellaneous","subtype":"typealias","rawtype":"KeySelector<T | P> | FunctionSelector<T | P>","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"StringKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Extract<T | string>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>仅字符串键类型</p>\\n","kind":183}],"enumerations":[{"name":"ChartType","childs":[{"name":"LINE","deprecated":false,"deprecationMessage":"","value":"line"},{"name":"PIE","deprecated":false,"deprecationMessage":"","value":"pie"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"library/AngularEcharts/components/typings.ts"},{"name":"ECmpTypeOperatorMap","childs":[{"name":"number","deprecated":false,"deprecationMessage":"","value":1},{"name":"char","deprecated":false,"deprecationMessage":"","value":2},{"name":"select_single","deprecated":false,"deprecationMessage":"","value":3},{"name":"select_multiple","deprecated":false,"deprecationMessage":"","value":4},{"name":"select_cascader","deprecated":false,"deprecationMessage":"","value":5},{"name":"date","deprecated":false,"deprecationMessage":"","value":6}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/utils/typings.ts"},{"name":"EOperator","childs":[{"name":"GreaterThan","deprecated":false,"deprecationMessage":"","value":0},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":1},{"name":"EqualTo","deprecated":false,"deprecationMessage":"","value":2},{"name":"NotEqualTo","deprecated":false,"deprecationMessage":"","value":3},{"name":"Between","deprecated":false,"deprecationMessage":"","value":4},{"name":"Contains","deprecated":false,"deprecationMessage":"","value":5},{"name":"NotContains","deprecated":false,"deprecationMessage":"","value":6}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/utils/typings.ts"},{"name":"IconType","childs":[{"name":"IMAGE","deprecated":false,"deprecationMessage":"","value":"image"},{"name":"EMOJI","deprecated":false,"deprecationMessage":"","value":"emoji"},{"name":"ICON","deprecated":false,"deprecationMessage":"","value":"icon"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/components/assets/util/index.ts"},{"name":"StreamEvent","childs":[{"name":"PING","deprecated":false,"deprecationMessage":"","value":"ping"},{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"},{"name":"MESSAGE","deprecated":false,"deprecationMessage":"","value":"message"},{"name":"MESSAGE_END","deprecated":false,"deprecationMessage":"","value":"message_end"},{"name":"TTS_MESSAGE","deprecated":false,"deprecationMessage":"","value":"tts_message"},{"name":"TTS_MESSAGE_END","deprecated":false,"deprecationMessage":"","value":"tts_message_end"},{"name":"MESSAGE_FILE","deprecated":false,"deprecationMessage":"","value":"message_file"},{"name":"MESSAGE_REPLACE","deprecated":false,"deprecationMessage":"","value":"message_replace"},{"name":"AGENT_THOUGHT","deprecated":false,"deprecationMessage":"","value":"agent_thought"},{"name":"AGENT_MESSAGE","deprecated":false,"deprecationMessage":"","value":"agent_message"},{"name":"WORKFLOW_STARTED","deprecated":false,"deprecationMessage":"","value":"workflow_started"},{"name":"WORKFLOW_FINISHED","deprecated":false,"deprecationMessage":"","value":"workflow_finished"},{"name":"NODE_STARTED","deprecated":false,"deprecationMessage":"","value":"node_started"},{"name":"NODE_FINISHED","deprecated":false,"deprecationMessage":"","value":"node_finished"},{"name":"NODE_RETRY","deprecated":false,"deprecationMessage":"","value":"node_retry"},{"name":"PARALLEL_BRANCH_STARTED","deprecated":false,"deprecationMessage":"","value":"parallel_branch_started"},{"name":"PARALLEL_BRANCH_FINISHED","deprecated":false,"deprecationMessage":"","value":"parallel_branch_finished"},{"name":"ITERATION_STARTED","deprecated":false,"deprecationMessage":"","value":"iteration_started"},{"name":"ITERATION_NEXT","deprecated":false,"deprecationMessage":"","value":"iteration_next"},{"name":"ITERATION_COMPLETED","deprecated":false,"deprecationMessage":"","value":"iteration_completed"},{"name":"LOOP_STARTED","deprecated":false,"deprecationMessage":"","value":"loop_started"},{"name":"LOOP_NEXT","deprecated":false,"deprecationMessage":"","value":"loop_next"},{"name":"LOOP_COMPLETED","deprecated":false,"deprecationMessage":"","value":"loop_completed"},{"name":"TEXT_CHUNK","deprecated":false,"deprecationMessage":"","value":"text_chunk"},{"name":"TEXT_REPLACE","deprecated":false,"deprecationMessage":"","value":"text_replace"},{"name":"AGENT_LOG","deprecated":false,"deprecationMessage":"","value":"agent_log"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/directives/event-source/typing.ts"}],"groupedVariables":{"src/app/app.config.ts":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideZoneChangeDetection({ eventCoalescing: true }),\\n    provideRouter(routes),\\n    provideAnimationsAsync(),\\n    provideHttpClient(), //added the function here\\n    provideNzI18n(en_US)\\n  ]\\n}"}],"library/AngularEcharts/components/chart-line.ts":[{"name":"BASE_OPTION","ctype":"miscellaneous","subtype":"variable","file":"library/AngularEcharts/components/chart-line.ts","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","defaultValue":"{\\n  grid: {},\\n  legend: {\\n    show: false,\\n  },\\n  tooltip: {\\n    trigger: \'axis\',\\n    confine: true,\\n    backgroundColor: \'rgba(255, 255, 255, 1)\',\\n    borderWidth: 1,\\n    borderColor: \'#ccc\',\\n    padding: 10,\\n    textStyle: {\\n      color: \'#000\',\\n      fontSize: 12,\\n    }\\n  },\\n  xAxis: {\\n    type: \'category\',\\n    data: [],\\n  },\\n  yAxis: {\\n    type: \'value\',\\n  },\\n  series: [],\\n  // color: undefined,\\n}"}],"library/AngularEcharts/components/chart.abstract.ts":[{"name":"BASE_OPTION","ctype":"miscellaneous","subtype":"variable","file":"library/AngularEcharts/components/chart.abstract.ts","deprecated":false,"deprecationMessage":"","type":"echarts.EChartsOption","defaultValue":"{\\n  grid: {},\\n  legend: {\\n    show: false,\\n  }\\n}"}],"src/services/canDeactive.guard.ts":[{"name":"CanComponentDeactivateGuard","ctype":"miscellaneous","subtype":"variable","file":"src/services/canDeactive.guard.ts","deprecated":false,"deprecationMessage":"","type":"CanDeactivateFn<CanComponentDeactivate>","defaultValue":"(\\n  component: CanComponentDeactivate\\n) => {\\n  return component.canDeactivate ? component.canDeactivate() : true;\\n}"}],"src/animations/animations.ts":[{"name":"COLLAPSE_ANIMATION","ctype":"miscellaneous","subtype":"variable","file":"src/animations/animations.ts","deprecated":false,"deprecationMessage":"","type":"AnimationTriggerMetadata","defaultValue":"trigger(\'collapse\', [\\n  transition(\'no => yes, void => yes\', [\\n    animate(\'300ms cubic-bezier(0.4, 0, 0.2, 1)\', keyframes([\\n      style({\\n        height: \'60px\',\\n        opacity: 0.5,\\n        transform: \'scale(0.95)\',\\n        overflow: \'hidden\',\\n      }),\\n      style({\\n        height: \'*\',\\n        opacity: 1,\\n        transform: \'scale(1)\',\\n        overflow: \'hidden\',\\n      }),\\n    ])),\\n  ]),\\n  transition(\'yes => no\', [\\n    animate(\'300ms cubic-bezier(0.4, 0, 0.2, 1)\', keyframes([\\n      style({\\n        height: \'*\',\\n        opacity: 1,\\n        transform: \'scale(1)\',\\n        overflow: \'hidden\',\\n      }),\\n      style({\\n        opacity: 0.5,\\n        transform: \'scale(0.95)\',\\n        overflow: \'hidden\',\\n      }),\\n    ])),\\n  ]),\\n])","rawdescription":"折叠动画","description":"<p>折叠动画</p>\\n"},{"name":"FADE_ANIMATION","ctype":"miscellaneous","subtype":"variable","file":"src/animations/animations.ts","deprecated":false,"deprecationMessage":"","type":"AnimationTriggerMetadata","defaultValue":"trigger(\'fade\', [\\n  state(\'fadeOut, void\', style({ \\n    opacity: 0,\\n    transform: \'translateY(20px) scale(0.95)\'\\n  })),\\n  state(\'fadeIn\', style({ \\n    opacity: 1,\\n    transform: \'translateY(0) scale(1)\'\\n  })),\\n  transition(\'* <=> fadeIn\', animate(\'800ms cubic-bezier(0.4, 0, 0.2, 1)\')),\\n])","rawdescription":"淡入淡出动画","description":"<p>淡入淡出动画</p>\\n"}],"src/components/assets/util/sourceIcons.ts":[{"name":"CommonIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Aim\',\\n    \'Alert\',\\n    \'Api\',\\n    \'AppstoreAdd\',\\n    \'Apartment\',\\n    \'Audio\',\\n    \'AudioMuted\',\\n    \'Bank\',\\n    \'Barcode\',\\n    \'Bars\',\\n    \'Bell\',\\n    \'Block\',\\n    \'Border\',\\n    \'AccountBook\',\\n    \'Branches\',\\n    \'Bug\',\\n    \'Audit\',\\n    \'Calendar\',\\n    \'Calculator\',\\n    \'Camera\',\\n    \'Car\',\\n    \'Bulb\',\\n    \'Book\',\\n    \'CarryOut\',\\n    \'Ci\',\\n    \'CiCircle\',\\n    \'CloudDownload\',\\n    \'Cloud\',\\n    \'CloudServer\',\\n    \'CloudSync\',\\n    \'Code\',\\n    \'Cluster\',\\n    \'CloudUpload\',\\n    \'Compress\',\\n    \'Compass\',\\n    \'ConsoleSql\',\\n    \'Appstore\',\\n    \'Contacts\',\\n    \'Coffee\',\\n    \'Container\',\\n    \'Control\',\\n    \'CopyrightCircle\',\\n    \'Clear\',\\n    \'Build\',\\n    \'Database\',\\n    \'Dashboard\',\\n    \'DeleteRow\',\\n    \'DeliveredProcedure\',\\n    \'DeploymentUnit\',\\n    \'DeleteColumn\',\\n    \'Desktop\',\\n    \'Dislike\',\\n    \'Disconnect\',\\n    \'Comment\',\\n    \'DollarCircle\',\\n    \'Dollar\',\\n    \'BorderlessTable\',\\n    \'Ellipsis\',\\n    \'EuroCircle\',\\n    \'Environment\',\\n    \'Exception\',\\n    \'Euro\',\\n    \'CustomerService\',\\n    \'ExpandAlt\',\\n    \'Expand\',\\n    \'Export\',\\n    \'Experiment\',\\n    \'EyeInvisible\',\\n    \'Eye\',\\n    \'Download\',\\n    \'FieldBinary\',\\n    \'FieldNumber\',\\n    \'CreditCard\',\\n    \'FieldString\',\\n    \'FieldTime\',\\n    \'FileExcel\',\\n    \'FileExclamation\',\\n    \'FileAdd\',\\n    \'FileDone\',\\n    \'Crown\',\\n    \'FileMarkdown\',\\n    \'File\',\\n    \'FilePdf\',\\n    \'FileJpg\',\\n    \'FileGif\',\\n    \'FileSync\',\\n    \'FileProtect\',\\n    \'FileSearch\',\\n    \'FileUnknown\',\\n    \'FileWord\',\\n    \'FileText\',\\n    \'FileZip\',\\n    \'Filter\',\\n    \'Flag\',\\n    \'Fire\',\\n    \'FolderAdd\',\\n    \'FolderOpen\',\\n    \'Folder\',\\n    \'FilePpt\',\\n    \'FolderView\',\\n    \'Copyright\',\\n    \'Fork\',\\n    \'Function\',\\n    \'FundProjectionScreen\',\\n    \'FunnelPlot\',\\n    \'Gateway\',\\n    \'Gift\',\\n    \'Gif\',\\n    \'Frown\',\\n    \'Global\',\\n    \'Gold\',\\n    \'Group\',\\n    \'Hdd\',\\n    \'Heart\',\\n    \'Home\',\\n    \'FormatPainter\',\\n    \'Idcard\',\\n    \'Hourglass\',\\n    \'Holder\',\\n    \'FundView\',\\n    \'Inbox\',\\n    \'InsertRowLeft\',\\n    \'Import\',\\n    \'InsertRowAbove\',\\n    \'InsertRowRight\',\\n    \'Interaction\',\\n    \'Laptop\',\\n    \'Layout\',\\n    \'Insurance\',\\n    \'Line\',\\n    \'Like\',\\n    \'Loading\',\\n    \'Loading3Quarters\',\\n    \'Lock\',\\n    \'MacCommand\',\\n    \'Mail\',\\n    \'Link\',\\n    \'Man\',\\n    \'MedicineBox\',\\n    \'Meh\',\\n    \'Message\',\\n    \'Menu\',\\n    \'Key\',\\n    \'Mobile\',\\n    \'MoneyCollect\',\\n    \'Monitor\',\\n    \'Moon\',\\n    \'More\',\\n    \'NodeIndex\',\\n    \'NodeCollapse\',\\n    \'NodeExpand\',\\n    \'Merge\',\\n    \'Number\',\\n    \'MergeCells\',\\n    \'Notification\',\\n    \'PaperClip\',\\n    \'Partition\',\\n    \'Muted\',\\n    \'OneToOne\',\\n    \'PayCircle\',\\n    \'Percentage\',\\n    \'Picture\',\\n    \'PlaySquare\',\\n    \'PoundCircle\',\\n    \'Pound\',\\n    \'Poweroff\',\\n    \'Profile\',\\n    \'Printer\',\\n    \'Project\',\\n    \'Product\',\\n    \'Phone\',\\n    \'PropertySafety\',\\n    \'Pushpin\',\\n    \'Qrcode\',\\n    \'PullRequest\',\\n    \'Read\',\\n    \'Reconciliation\',\\n    \'RedEnvelope\',\\n    \'Reload\',\\n    \'Rest\',\\n    \'Robot\',\\n    \'Rocket\',\\n    \'RotateRight\',\\n    \'SafetyCertificate\',\\n    \'RotateLeft\',\\n    \'Save\',\\n    \'Scan\',\\n    \'SecurityScan\',\\n    \'Schedule\',\\n    \'Select\',\\n    \'Send\',\\n    \'Shake\',\\n    \'Setting\',\\n    \'Shop\',\\n    \'Shopping\',\\n    \'ShoppingCart\',\\n    \'Sisternode\',\\n    \'Skin\',\\n    \'Smile\',\\n    \'FileImage\',\\n    \'Solution\',\\n    \'SplitCells\',\\n    \'Signature\',\\n    \'Search\',\\n    \'Star\',\\n    \'Sound\',\\n    \'ShareAlt\',\\n    \'Sun\',\\n    \'Switcher\',\\n    \'Sync\',\\n    \'Table\',\\n    \'Tag\',\\n    \'Tablet\',\\n    \'Team\',\\n    \'Subnode\',\\n    \'Thunderbolt\',\\n    \'Tags\',\\n    \'Tool\',\\n    \'TrademarkCircle\',\\n    \'ToTop\',\\n    \'Translation\',\\n    \'Safety\',\\n    \'Truck\',\\n    \'Unlock\',\\n    \'Ungroup\',\\n    \'Trademark\',\\n    \'Upload\',\\n    \'Usb\',\\n    \'Trophy\',\\n    \'User\',\\n    \'UserDelete\',\\n    \'UsergroupAdd\',\\n    \'UsergroupDelete\',\\n    \'Verified\',\\n    \'VideoCamera\',\\n    \'VideoCameraAdd\',\\n    \'UserAdd\',\\n    \'History\',\\n    \'InsertRowBelow\',\\n    \'Wifi\',\\n    \'Woman\',\\n    \'UserSwitch\',\\n    \'Transaction\',\\n    \'Wallet\',\\n]"},{"name":"DirectionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'StepBackward\',\\n    \'StepForward\',\\n    \'FastBackward\',\\n    \'FastForward\',\\n    \'Shrink\',\\n    \'ArrowsAlt\',\\n    \'Down\',\\n    \'Up\',\\n    \'Left\',\\n    \'Right\',\\n    \'CaretUp\',\\n    \'CaretDown\',\\n    \'CaretLeft\',\\n    \'CaretRight\',\\n    \'UpCircle\',\\n    \'DownCircle\',\\n    \'LeftCircle\',\\n    \'RightCircle\',\\n    \'DoubleRight\',\\n    \'DoubleLeft\',\\n    \'VerticalLeft\',\\n    \'VerticalRight\',\\n    \'VerticalAlignTop\',\\n    \'VerticalAlignMiddle\',\\n    \'VerticalAlignBottom\',\\n    \'Forward\',\\n    \'Backward\',\\n    \'Rollback\',\\n    \'Enter\',\\n    \'Retweet\',\\n    \'Swap\',\\n    \'SwapLeft\',\\n    \'SwapRight\',\\n    \'ArrowUp\',\\n    \'ArrowDown\',\\n    \'ArrowLeft\',\\n    \'ArrowRight\',\\n    \'PlayCircle\',\\n    \'UpSquare\',\\n    \'DownSquare\',\\n    \'LeftSquare\',\\n    \'RightSquare\',\\n    \'Login\',\\n    \'Logout\',\\n    \'MenuFold\',\\n    \'MenuUnfold\',\\n    \'BorderBottom\',\\n    \'BorderHorizontal\',\\n    \'BorderInner\',\\n    \'BorderOuter\',\\n    \'BorderLeft\',\\n    \'BorderRight\',\\n    \'BorderTop\',\\n    \'BorderVerticle\',\\n    \'PicCenter\',\\n    \'PicLeft\',\\n    \'PicRight\',\\n    \'RadiusBottomleft\',\\n    \'RadiusBottomright\',\\n    \'RadiusUpleft\',\\n    \'RadiusUpright\',\\n    \'Fullscreen\',\\n    \'FullscreenExit\',\\n]"},{"name":"EditionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Edit\',\\n    \'Form\',\\n    \'Copy\',\\n    \'Scissor\',\\n    \'Delete\',\\n    \'Snippets\',\\n    \'Diff\',\\n    \'Highlight\',\\n    \'AlignCenter\',\\n    \'AlignLeft\',\\n    \'AlignRight\',\\n    \'BgColors\',\\n    \'Bold\',\\n    \'Italic\',\\n    \'Underline\',\\n    \'Strikethrough\',\\n    \'Redo\',\\n    \'Undo\',\\n    \'ZoomIn\',\\n    \'ZoomOut\',\\n    \'FontColors\',\\n    \'FontSize\',\\n    \'LineHeight\',\\n    \'Dash\',\\n    \'SmallDash\',\\n    \'SortAscending\',\\n    \'SortDescending\',\\n    \'Drag\',\\n    \'OrderedList\',\\n    \'UnorderedList\',\\n    \'RadiusSetting\',\\n    \'ColumnWidth\',\\n    \'ColumnHeight\',\\n]"},{"name":"SuggestionIconNames","ctype":"miscellaneous","subtype":"variable","file":"src/components/assets/util/sourceIcons.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n    \'Question\',\\n    \'QuestionCircle\',\\n    \'Plus\',\\n    \'PlusCircle\',\\n    \'Pause\',\\n    \'PauseCircle\',\\n    \'Minus\',\\n    \'MinusCircle\',\\n    \'PlusSquare\',\\n    \'MinusSquare\',\\n    \'Info\',\\n    \'InfoCircle\',\\n    \'Exclamation\',\\n    \'ExclamationCircle\',\\n    \'Close\',\\n    \'CloseCircle\',\\n    \'CloseSquare\',\\n    \'Check\',\\n    \'CheckCircle\',\\n    \'CheckSquare\',\\n    \'ClockCircle\',\\n    \'Warning\',\\n    \'IssuesClose\',\\n    \'Stop\',\\n]"}],"src/utils/index.ts":[{"name":"fileTypeIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/utils/index.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'txt\': \'files:text-fill\',\\n  \'md\': \'files:markdown-fill\',\\n  \'mdx\': \'files:markdown-fill\',\\n  \'pdf\': \'files:pdf-fill\',\\n  \'html\': \'files:html-fill\',\\n  \'xlsx\': \'files:excel-fill\',\\n  \'xls\': \'files:excel-fill\',\\n  \'docx\': \'files:word-fill\',\\n  \'csv\': \'files:excel-fill\',\\n}"},{"name":"StreamStatusIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/utils/index.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'default\': [\'loading\', \'status-icon loading\'],\\n  \'failed\': [\'question-circle\', \'status-icon error\'],\\n  \'succeeded\': [\'check-circle\', \'status-icon success\'],\\n  \'start\': [\'icons:node-start\', \'node-icon start\'],\\n  \'llm\': [\'icons:node-llm\', \'node-icon llm\'],\\n  \'if-else\': [\'icons:node-branch\', \'node-icon if-else\'],\\n  \'http-request\': [\'icons:node-http\', \'node-icon http-request\'],\\n  \'code\': [\'icons:script\', \'node-icon code\'],\\n  \'tool\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'iteration\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'answer\': [\'icons:node-answer\', \'node-icon answer\']\\n}"}],"src/pipes/file-size.pipe.ts":[{"name":"gb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"1024 * mb"},{"name":"kb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"1024"},{"name":"mb","ctype":"miscellaneous","subtype":"variable","file":"src/pipes/file-size.pipe.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"1024 * kb"}],"src/utils/typings.ts":[{"name":"operators","ctype":"miscellaneous","subtype":"variable","file":"src/utils/typings.ts","deprecated":false,"deprecationMessage":"","type":"IOperator[]","defaultValue":"[\\n    {\\n        value: EOperator.GreaterThan, label: \'大于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.LessThan, label: \'小于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: false\\n    },\\n    {\\n        value: EOperator.EqualTo, label: \'等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.NotEqualTo, label: \'不等于\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_single, ECmpTypeOperatorMap.select_cascader], isRange: false\\n    },\\n    {\\n        value: EOperator.Between, label: \'范围\', dataTypes: [ECmpTypeOperatorMap.number, ECmpTypeOperatorMap.date], isRange: true\\n    }, {\\n        value: EOperator.Contains, label: \'包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    },\\n    {\\n        value: EOperator.NotContains, label: \'不包含\', dataTypes: [ECmpTypeOperatorMap.char, ECmpTypeOperatorMap.select_multiple], isRange: false\\n    }\\n]"}],"src/utils/validators.ts":[{"name":"REGEXP","ctype":"miscellaneous","subtype":"variable","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  phoneNumber: /^1[3-9]\\\\d{9}$/,\\n  landlineAndPhone: /^((0\\\\d{2,3}-\\\\d{7,8})|(1[3-9]\\\\d{9}))$/,\\n  nonNegativeInteger: /^\\\\d+$/,\\n  positiveInteger: /^[1-9]\\\\d*$/,\\n  decimalNumber: /^[0-9]+(\\\\.[0-9]+)?$/,\\n  empty: /^\\\\s+$/,\\n  onlyChinese: /^[\\\\u4e00-\\\\u9fa5_a-zA-Z]+$/,\\n  certificateCode: /(^[1-9]\\\\d{5}(18|19|([23]\\\\d))\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{3}[0-9Xx]$)|(^[1-9]\\\\d{5}\\\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\\\d{2}[0-9Xx]$)/,\\n  mailbox: /^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z.]{2,6})$/\\n}"}],"src/directives/event-source/typing.ts":[{"name":"StreamStatusIconMap","ctype":"miscellaneous","subtype":"variable","file":"src/directives/event-source/typing.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \'default\': [\'loading\', \'status-icon loading\'],\\n  \'failed\': [\'question-circle\', \'status-icon error\'],\\n  \'succeeded\': [\'check-circle\', \'status-icon success\'],\\n  \'start\': [\'icons:node-start\', \'node-icon start\'],\\n  \'llm\': [\'icons:node-llm\', \'node-icon llm\'],\\n  \'if-else\': [\'icons:node-branch\', \'node-icon if-else\'],\\n  \'http-request\': [\'icons:node-http\', \'node-icon http-request\'],\\n  \'code\': [\'icons:script\', \'node-icon code\'],\\n  \'tool\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'iteration\': [\'icons:node-iteration\', \'node-icon iteration\'],\\n  \'answer\': [\'icons:node-answer\', \'node-icon answer\']\\n}"}]},"groupedFunctions":{"src/utils/list-checked.ts":[{"name":"_isAllChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":""},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_isHalfChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":""},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"checkedCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"totalCount","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCheckedCount","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"number","jsdoctags":[{"name":"list","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getListCheckedStatus","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表勾选状态计算</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"ICheckedStatus","jsdoctags":[{"name":{"pos":1424,"end":1428,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":1418,"end":1423,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":1443,"end":1458,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":1437,"end":1442,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":1475,"end":1482,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表勾选状态</p>\\n"}]},{"name":"isAllChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表全勾选计算逻辑</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":442,"end":446,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":436,"end":441,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":461,"end":476,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":455,"end":460,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":493,"end":500,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表状态是否为全勾选</p>\\n"}]},{"name":"isHalfChecked","file":"src/utils/list-checked.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>通用列表半勾选计算逻辑</p>\\n","args":[{"name":"list","deprecated":false,"deprecationMessage":""},{"name":"checkedSelector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":976,"end":980,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"list"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":970,"end":975,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表</p>\\n"},{"name":{"pos":995,"end":1010,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"checkedSelector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":989,"end":994,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>列表项勾选状态选择器</p>\\n"},{"tagName":{"pos":1027,"end":1034,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>列表状态是否为半勾选</p>\\n"}]}],"src/utils/validators.ts":[{"name":"certificateCodeValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"checkListRequireValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"decimalNumberValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"isEmptyInputValue","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"NzSafeAny","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"NzSafeAny","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isMobile","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"landlineAndPhoneValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"noEmptyValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>输入框不能为空（包括空白字符）</p>\\n","args":[],"returnType":"ValidatorFn"},{"name":"nonNegativeIntegerValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"onlyChineseValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"phoneNumberValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"},{"name":"positiveIntegerValidator","file":"src/utils/validators.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[],"returnType":"ValidatorFn"}],"src/utils/upload.file.ts":[{"name":"chooseFileToUpload","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"fileType","deprecated":false,"deprecationMessage":""},{"name":"createDataFromFile","deprecated":false,"deprecationMessage":""},{"name":"_message","type":"NzMessageService","deprecated":false,"deprecationMessage":""},{"name":"accept","deprecated":false,"deprecationMessage":"","optional":true},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"returnType":"void","jsdoctags":[{"name":"fileType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"createDataFromFile","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_message","type":"NzMessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accept","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"copyToClipboard","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>复制到剪贴板</p>\\n","args":[{"name":"elem","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":{"pos":1993,"end":1997,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"elem"},"type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"pos":1987,"end":1992,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""},{"tagName":{"pos":2003,"end":2010,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":""}]},{"name":"getDownloadFileName","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>获取下载文件名</p>\\n","args":[{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":""}],"returnType":"string","jsdoctags":[{"name":{"pos":1557,"end":1564,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"headers"},"type":"HttpHeaders","deprecated":false,"deprecationMessage":"","tagName":{"pos":1551,"end":1556,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""},{"tagName":{"pos":1570,"end":1577,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":""}]},{"name":"printToClipboard","file":"src/utils/upload.file.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>打印到剪贴板</p>\\n","args":[{"name":"codes","deprecated":false,"deprecationMessage":""}],"returnType":"void","jsdoctags":[{"name":{"pos":2798,"end":2803,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"codes"},"deprecated":false,"deprecationMessage":"","tagName":{"pos":2792,"end":2797,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":""}]}],"src/directives/event-source/typing.ts":[{"name":"formatSreamMeta","file":"src/directives/event-source/typing.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"stream","type":"any","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"stream","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/utils/index.ts":[{"name":"generateUid","file":"src/utils/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]},{"name":"racePromises","file":"src/utils/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"promises","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"promises","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/utils/select.util.ts":[{"name":"isMatchedOption","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'"},{"name":"option","type":"any","deprecated":false,"deprecationMessage":""},{"name":"names","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"returnType":"boolean","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'\'","tagName":{"text":"param"}},{"name":"option","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"names","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"matchCount","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":""},{"name":"keyword","type":"string","deprecated":false,"deprecationMessage":""},{"name":"item","type":"any","deprecated":false,"deprecationMessage":""},{"name":"prefixOrSuffix","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"returnType":"number","jsdoctags":[{"name":"source","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"keyword","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"prefixOrSuffix","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"selectCompareFn","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'id\'"}],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\'id\'","tagName":{"text":"param"}}]},{"name":"selectFilterOption","file":"src/utils/select.util.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"names","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"jsdoctags":[{"name":"names","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"src/components/assets/util/index.ts":[{"name":"ngZorroIconCategoryNames","file":"src/components/assets/util/index.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}],"src/utils/object/selector.ts":[{"name":"selectBy","file":"src/utils/object/selector.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>选择映射</p>\\n","args":[{"name":"item","type":"T","deprecated":false,"deprecationMessage":""},{"name":"selector","type":"Selector","deprecated":false,"deprecationMessage":""}],"returnType":"P","jsdoctags":[{"name":{"pos":66,"end":70,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"item"},"type":"T","deprecated":false,"deprecationMessage":"","tagName":{"pos":60,"end":65,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>输入</p>\\n"},{"name":{"pos":84,"end":92,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"selector"},"type":"Selector","deprecated":false,"deprecationMessage":"","tagName":{"pos":78,"end":83,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>结果选择器，传映射函数则用函数映射，传字符串键则获取输入的该属性</p>\\n"},{"tagName":{"pos":130,"end":137,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"returns"},"comment":"<p>映射结果</p>\\n"}]}],"src/utils/uuid.ts":[{"name":"uuidv4","file":"src/utils/uuid.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[]}],"src/utils/form-validator.ts":[{"name":"validateForm","file":"src/utils/form-validator.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"<p>angular 表单校验</p>\\n","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"options","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"returnType":"void","jsdoctags":[{"name":{"pos":116,"end":123,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"control"},"type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"pos":110,"end":115,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>表单控件</p>\\n"},{"name":{"pos":139,"end":146,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"options"},"deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"pos":133,"end":138,"kind":80,"id":0,"flags":16777216,"transformFlags":0,"escapedText":"param"},"comment":"<p>额外的参数配置，具体可以查看 AbstractControl.updateValueAndValidity 的第二个参数</p>\\n"}]}]},"groupedEnumerations":{"library/AngularEcharts/components/typings.ts":[{"name":"ChartType","childs":[{"name":"LINE","deprecated":false,"deprecationMessage":"","value":"line"},{"name":"PIE","deprecated":false,"deprecationMessage":"","value":"pie"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"library/AngularEcharts/components/typings.ts"}],"src/utils/typings.ts":[{"name":"ECmpTypeOperatorMap","childs":[{"name":"number","deprecated":false,"deprecationMessage":"","value":1},{"name":"char","deprecated":false,"deprecationMessage":"","value":2},{"name":"select_single","deprecated":false,"deprecationMessage":"","value":3},{"name":"select_multiple","deprecated":false,"deprecationMessage":"","value":4},{"name":"select_cascader","deprecated":false,"deprecationMessage":"","value":5},{"name":"date","deprecated":false,"deprecationMessage":"","value":6}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/utils/typings.ts"},{"name":"EOperator","childs":[{"name":"GreaterThan","deprecated":false,"deprecationMessage":"","value":0},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":1},{"name":"EqualTo","deprecated":false,"deprecationMessage":"","value":2},{"name":"NotEqualTo","deprecated":false,"deprecationMessage":"","value":3},{"name":"Between","deprecated":false,"deprecationMessage":"","value":4},{"name":"Contains","deprecated":false,"deprecationMessage":"","value":5},{"name":"NotContains","deprecated":false,"deprecationMessage":"","value":6}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/utils/typings.ts"}],"src/components/assets/util/index.ts":[{"name":"IconType","childs":[{"name":"IMAGE","deprecated":false,"deprecationMessage":"","value":"image"},{"name":"EMOJI","deprecated":false,"deprecationMessage":"","value":"emoji"},{"name":"ICON","deprecated":false,"deprecationMessage":"","value":"icon"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/components/assets/util/index.ts"}],"src/directives/event-source/typing.ts":[{"name":"StreamEvent","childs":[{"name":"PING","deprecated":false,"deprecationMessage":"","value":"ping"},{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"},{"name":"MESSAGE","deprecated":false,"deprecationMessage":"","value":"message"},{"name":"MESSAGE_END","deprecated":false,"deprecationMessage":"","value":"message_end"},{"name":"TTS_MESSAGE","deprecated":false,"deprecationMessage":"","value":"tts_message"},{"name":"TTS_MESSAGE_END","deprecated":false,"deprecationMessage":"","value":"tts_message_end"},{"name":"MESSAGE_FILE","deprecated":false,"deprecationMessage":"","value":"message_file"},{"name":"MESSAGE_REPLACE","deprecated":false,"deprecationMessage":"","value":"message_replace"},{"name":"AGENT_THOUGHT","deprecated":false,"deprecationMessage":"","value":"agent_thought"},{"name":"AGENT_MESSAGE","deprecated":false,"deprecationMessage":"","value":"agent_message"},{"name":"WORKFLOW_STARTED","deprecated":false,"deprecationMessage":"","value":"workflow_started"},{"name":"WORKFLOW_FINISHED","deprecated":false,"deprecationMessage":"","value":"workflow_finished"},{"name":"NODE_STARTED","deprecated":false,"deprecationMessage":"","value":"node_started"},{"name":"NODE_FINISHED","deprecated":false,"deprecationMessage":"","value":"node_finished"},{"name":"NODE_RETRY","deprecated":false,"deprecationMessage":"","value":"node_retry"},{"name":"PARALLEL_BRANCH_STARTED","deprecated":false,"deprecationMessage":"","value":"parallel_branch_started"},{"name":"PARALLEL_BRANCH_FINISHED","deprecated":false,"deprecationMessage":"","value":"parallel_branch_finished"},{"name":"ITERATION_STARTED","deprecated":false,"deprecationMessage":"","value":"iteration_started"},{"name":"ITERATION_NEXT","deprecated":false,"deprecationMessage":"","value":"iteration_next"},{"name":"ITERATION_COMPLETED","deprecated":false,"deprecationMessage":"","value":"iteration_completed"},{"name":"LOOP_STARTED","deprecated":false,"deprecationMessage":"","value":"loop_started"},{"name":"LOOP_NEXT","deprecated":false,"deprecationMessage":"","value":"loop_next"},{"name":"LOOP_COMPLETED","deprecated":false,"deprecationMessage":"","value":"loop_completed"},{"name":"TEXT_CHUNK","deprecated":false,"deprecationMessage":"","value":"text_chunk"},{"name":"TEXT_REPLACE","deprecated":false,"deprecationMessage":"","value":"text_replace"},{"name":"AGENT_LOG","deprecated":false,"deprecationMessage":"","value":"agent_log"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/directives/event-source/typing.ts"}]},"groupedTypeAliases":{"src/utils/type-utils/common.ts":[{"name":"Action","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"AnyFunc","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"AnyParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198},{"name":"CleanUp","ctype":"miscellaneous","subtype":"typealias","rawtype":"PureAction","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"EnumUnderlayingType","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"PlainObject","ctype":"miscellaneous","subtype":"typealias","rawtype":"Record<string | PrimitiveTypes>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"PrimitiveTypes","ctype":"miscellaneous","subtype":"typealias","rawtype":"string | number | boolean | null | undefined |  | symbol","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"PromiseOr","ctype":"miscellaneous","subtype":"typealias","rawtype":"T | PromiseLike<T>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192},{"name":"PureAction","ctype":"miscellaneous","subtype":"typealias","rawtype":"Action<>","file":"src/utils/type-utils/common.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/utils/type-utils/key-operations.ts":[{"name":"ExcludeKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Exclude<Keys | K>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>排除一些key，且具有类型约束</p>\\n","kind":183},{"name":"ExtractKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"K","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>获取key联合的子联合</p>\\n","kind":183},{"name":"OmitKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Omit<T | K>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>键约束强化版Omit</p>\\n","kind":183},{"name":"PropertyKeys","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>属性的键，目前无法区分方法与回调</p>\\n","kind":199},{"name":"PropertyPart","ctype":"miscellaneous","subtype":"typealias","rawtype":"Pick<T | PropertyKeys<T>>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Replace","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>替换部分属性生成新类型</p>\\n","kind":200},{"name":"StringKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"Extract<T | string>","file":"src/utils/type-utils/key-operations.ts","deprecated":false,"deprecationMessage":"","description":"<p>仅字符串键类型</p>\\n","kind":183}],"src/utils/object/selector.ts":[{"name":"FunctionSelector","ctype":"miscellaneous","subtype":"typealias","rawtype":"function","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":184},{"name":"KeySelector","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199},{"name":"Selector","ctype":"miscellaneous","subtype":"typealias","rawtype":"KeySelector<T | P> | FunctionSelector<T | P>","file":"src/utils/object/selector.ts","deprecated":false,"deprecationMessage":"","description":"","kind":192}],"src/utils/validators.ts":[{"name":"MyErrorsOptions","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","description":"","kind":193},{"name":"MyValidationErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"Record<string | MyErrorsOptions>","file":"src/utils/validators.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}]}},"routes":[],"coverage":{"count":19,"status":"low","files":[{"filePath":"library/AngularEcharts/components/chart-line.ts","type":"component","linktype":"component","name":"LineChartComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"library/AngularEcharts/components/chart-line.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BASE_OPTION","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"library/AngularEcharts/components/chart.abstract.ts","type":"directive","linktype":"directive","name":"ChartAbstract","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"library/AngularEcharts/components/chart.abstract.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"BASE_OPTION","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"library/AngularEcharts/components/typings.ts","type":"interface","linktype":"interface","name":"ChartData","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"library/AngularEcharts/components/typings.ts","type":"interface","linktype":"interface","name":"ChartDataItem","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/animations/animations.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"COLLAPSE_ANIMATION","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/animations/animations.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"FADE_ANIMATION","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/app.config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"appConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/assets/assets.component.ts","type":"component","linktype":"component","name":"AppAssets","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/components/assets/icon-render.component.ts","type":"component","linktype":"component","name":"IconRenderComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/components/assets/icon-select.component.ts","type":"component","linktype":"component","name":"IconSelectComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/components/assets/util/index.ts","type":"interface","linktype":"interface","name":"IAppIcon","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/components/assets/util/index.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"ngZorroIconCategoryNames","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/assets/util/sourceIcons.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CommonIconNames","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/assets/util/sourceIcons.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DirectionIconNames","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/assets/util/sourceIcons.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EditionIconNames","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/assets/util/sourceIcons.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SuggestionIconNames","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/components/autocomplete/autocomplete.ts","type":"component","linktype":"component","name":"LibAutocompleteComponent","coveragePercent":3,"coverageCount":"1/28","status":"low"},{"filePath":"src/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"src/components/form-operator-compact/form-operator-compact.ts","type":"component","linktype":"component","name":"FormOperatorCompactComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"src/components/search-box/search-box.component.ts","type":"component","linktype":"component","name":"SearchBoxComponent","coveragePercent":90,"coverageCount":"10/11","status":"very-good"},{"filePath":"src/components/search-tag/search-tag.component.ts","type":"component","linktype":"component","name":"SearchTagComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/directives/ball-parabola.directive.ts","type":"directive","linktype":"directive","name":"BallParabolaDirective","coveragePercent":87,"coverageCount":"14/16","status":"very-good"},{"filePath":"src/directives/destroy.subscription.ts","type":"directive","linktype":"directive","name":"DestroySubscription","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/directives/event-source/event-source.directive.ts","type":"directive","linktype":"directive","name":"EventSourceDirective","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/directives/event-source/event-source.directive.ts","type":"interface","linktype":"interface","name":"IChatContext","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/directives/event-source/event-source.service.ts","type":"injectable","linktype":"injectable","name":"EventSourceService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/directives/event-source/typing.ts","type":"interface","linktype":"interface","name":"IAppConversation","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/directives/event-source/typing.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"formatSreamMeta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/directives/event-source/typing.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StreamStatusIconMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/directives/intersectionObserver.directive.ts","type":"directive","linktype":"directive","name":"IntersectionObserverDirective","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"src/directives/mutationObserver.directive.ts","type":"directive","linktype":"directive","name":"MutationObserverDirective","coveragePercent":28,"coverageCount":"2/7","status":"medium"},{"filePath":"src/directives/polling.directive.ts","type":"directive","linktype":"directive","name":"PollingDirective","coveragePercent":91,"coverageCount":"11/12","status":"very-good"},{"filePath":"src/directives/scroll.directive.ts","type":"directive","linktype":"directive","name":"ScrollDirective","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/directives/trace-highlight.directive.ts","type":"directive","linktype":"directive","name":"TraceHighlightDirective","coveragePercent":43,"coverageCount":"10/23","status":"medium"},{"filePath":"src/directives/trace-highlight.directive.ts","type":"interface","linktype":"interface","name":"ITraceHighLightConf","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/directives/trace-highlight.directive.ts","type":"interface","linktype":"interface","name":"ITraceSourceItemFrontend","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/directives/water-mark.directive.ts","type":"directive","linktype":"directive","name":"WaterMarkDirective","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/pipes/file-size.pipe.ts","type":"pipe","linktype":"pipe","name":"FileSizePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/pipes/file-size.pipe.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gb","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/pipes/file-size.pipe.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"kb","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/pipes/file-size.pipe.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mb","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/pipes/format-number.pipe.ts","type":"pipe","linktype":"pipe","name":"FormatNumberPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/pipes/translate.pipe.ts","type":"pipe","linktype":"pipe","name":"TranslatePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/services/canDeactive.guard.ts","type":"interface","linktype":"interface","name":"CanComponentDeactivate","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/services/canDeactive.guard.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CanComponentDeactivateGuard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/services/countdown.service.ts","type":"injectable","linktype":"injectable","name":"CountdownService","coveragePercent":20,"coverageCount":"3/15","status":"low"},{"filePath":"src/services/file.service.ts","type":"injectable","linktype":"injectable","name":"FileService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/services/modal.service.ts","type":"injectable","linktype":"injectable","name":"MyModalService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/utils/form-validator.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"validateForm","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/index.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"generateUid","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/index.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"racePromises","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/index.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"fileTypeIconMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/index.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"StreamStatusIconMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/list-checked.ts","type":"interface","linktype":"interface","name":"ICheckedStatus","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"_isAllChecked","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"_isHalfChecked","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getCheckedCount","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getListCheckedStatus","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isAllChecked","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/list-checked.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isHalfChecked","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/object/selector.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"selectBy","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/object/selector.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"FunctionSelector","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/object/selector.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"KeySelector","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/object/selector.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"Selector","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/select.util.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isMatchedOption","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/select.util.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"matchCount","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/select.util.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"selectCompareFn","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/select.util.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"selectFilterOption","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"Action","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"AnyFunc","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"AnyParam","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"CleanUp","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"EnumUnderlayingType","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PlainObject","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PrimitiveTypes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PromiseOr","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/common.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PureAction","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"ExcludeKey","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"ExtractKey","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"OmitKey","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PropertyKeys","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"PropertyPart","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"Replace","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/type-utils/key-operations.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"StringKey","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/typings.ts","type":"interface","linktype":"interface","name":"IOperator","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/utils/typings.ts","type":"interface","linktype":"interface","name":"ISelectOption","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/utils/typings.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"operators","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/upload.file.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"chooseFileToUpload","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/upload.file.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"copyToClipboard","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/upload.file.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getDownloadFileName","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/upload.file.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"printToClipboard","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/uuid.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"uuidv4","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"class","linktype":"classe","name":"MyValidators","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/utils/validators.ts","type":"interface","linktype":"interface","name":"ISelectorOption","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"certificateCodeValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"checkListRequireValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"decimalNumberValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isEmptyInputValue","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isMobile","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"landlineAndPhoneValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"noEmptyValidator","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"nonNegativeIntegerValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"onlyChineseValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"phoneNumberValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"positiveIntegerValidator","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"REGEXP","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"MyErrorsOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/utils/validators.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"MyValidationErrors","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');var module_BHk9jdTn=__webpack_require__("./node_modules/@angular/common/fesm2022/module-BHk9jdTn.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),ng_zorro_antd_i18n=__webpack_require__("./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-i18n.mjs");const en_US={...ng_zorro_antd_i18n.Bh,global:{...ng_zorro_antd_i18n.Bh.global,Setting:"Setting",Rename:"Rename",LearnMore:"Learn More",Name:"Name",Description:"Description",Method:"Method",Path:"Path",ChunkMode:"Chunk Mode",WordCount:"Word Count",RetrievalCount:"Retrieval Count",Action:"Action",NoData:"No Data",NoMoreData:"No More Data",LoadMore:"Load More",Search:"Search",UPLOADTIME:"Upload time",Status:"Status",Available:"Available",Disabled:"Disabled",Cancel:"Cancel",Save:"Save",Ok:"OK",Deploy:"Deploy",Delete:"Delete",Edit:"Edit",Publish:"Publish",Add:"Add",Generate:"Generate",Run:"Run"},Menu:{Model:"Model",ModelList:"Model List",RunningModels:"Running Models",Role:"Role",RoleList:"Role List",GenerateRole:"Generator Role",QuickCommand:"Quick Command",Knowledge:"Knowledge",KnowledgeList:"Knowledge List",CreateKnowledge:"Create Knowledge",Tools:"Tools",ToolList:"Tool List",Agent:"Agent",AgentList:"Agent List",CreateAgent:"Create Agent",Playground:"Playground",ModelExperience:"Model Experience",AgentExperience:"Agent Experience",ConversationTextModel:"Text Conversation"},Knowledge:{Knowledge:"Knowledge",KnowledgeDescription:"Create, manage and search your knowledge base efficiently. Support multiple formats, TOS and other document types.",CreateKnowledge:"Create Knowledge",CreateKnowledgeDescription:"Build structured knowledge bases with templates and custom categories",CreateKnowledgeTips:"Import your own text data or write data in real-time via Webhook for LLM context enhancement.",UploadDocuments:"Upload Documents",UploadDocumentsDescription:"Support Excel, PDF and various text formats with OCR capabilities",SearchContent:"Search Content",SearchContentDescription:"Smart search with filters and quick access to frequently used content",APIIntegration:"API Integration",APIIntegrationDescription:"Use our API to integrate knowledge base features into your products",Welcome:"Welcome to Knowledge👋",WelcomeDescription:"Import your own text data or write data in real-time via Webhook for LLM context enhancement.",CreateNow:"Create Now",DocumentCount:"docs",WordCount:"words",AppCount:"linked apps"},KnowledgeDetail:{Documents:"Documents",DocumentsDescription:"All files of the Knowledge are shown here, and the entire Knowledge can be linked to Dify citations or indexed via the Chat plugin. ",UploadSectionTitle:"Upload file",UploadText:"Click or drag file to this area to upload, or",UploadBrowse:"Browse",UploadHint:"Supports TXT, MARKDOWN, DOC, PDF, HTML, XLSX, XLS, DOCX, CSV, MD, HTM, Max 15MB each."},KnowledgeModal:{title:"Knowledge setting",name:"Knowledge Name",description:"Knowledge Description",deleteTitle:"Delete knowledge base?",deleteContent:"Deleting a knowledge base is irreversible. Users will no longer be able to access your knowledge base, and all prompt configurations and logs will be permanently deleted."},KnowledgeDocument:{Metadata:"Metadata",MetadataDescription:"Reading metadata for documents allows AI to access them in a timely manner and exposes the source of references for users. ",DocumentInformation:"Document Information",Original_filename:"Original filename",Original_file_size:"Original file size",Technical_Parameters:"Technical Parameters",Chunks_specification:"Chunks specification",Chunks_length:"Chunks length",Avg_paragraph_length:"Avg. paragraph length",Paragraphs:"Paragraphs",Retrieval_count:"Retrieval count"},Model:{Launch:"Launch",Try:"Try",Manage:"Manage",UnfavoriteSuccess:"Unfavorite Success",FavoriteSuccess:"Favorite Success",AlertInfo:"The last configuration has been loaded",Replica:"Replica",GPUCount:"GPU Count",OptionalConfigurations:"Optional Configurations",AdditionalParameters:"Additional parameters passed to the inference engine",OptionalUId:"(Optional) Model UID, model name by default",OptionalRequestLimits:"(Optional) Request Limits, the number of request limits for this model, default is None",OptionalWorkerIp:"(Optional) Worker Ip, specify the worker ip where the model is located in a distributed scenario",OptionalGpuIdx:"(Optional) GPU Idx, Specify the GPU index where the model is located",OptionalDownloadHub:"(Optional) Download_hub",OptionalModelPath:"(Optional) Model Path, For PyTorch, provide the model directory. For GGML/GGUF, provide the model file path.",Type:{All:"All",LanguageModels:"Language Models",EmbeddingModels:"Embedding Models",RerankModels:"Rerank Models",ImageModels:"Image Models",AudioModels:"Audio Models",VideoModels:"Video Models",SynyiModels:"Synyi Models",CustomModels:"Custom Models"},Ability:{ModelAbility:"Model Ability",Generate:"generate",Chat:"chat",VlChat:"vl-chat",Reasoning:"reasoning"},Status:{Status:"Status",Cached:"Cached",Favorite:"Favorite"}},ModelsRunning:{ID:"ID",Name:"Name",Address:"Address",GPUIndexes:"GPU Indexes",Size:"Size",Quantization:"Quantization",Replica:"Replica",Actions:"Actions",DeleteModel:"Delete Model Running",DeleteModelContent:"Are you sure you want to delete this model running?",LaunchSuccess:"Model launch success",ServerError:"Server error:503-laddress=0.0.0.0:44751,pid=4684|No available model precision found"},Step:{Next:"Next",Previous:"Previous"},DocumentProcessing:{ChunkSettings:"Chunk Settings",General:"General",GeneralDescription:"General text chunking mode, the chunks retrieved and recalled are the same.",Delimiter:"Delimiter",Maximum_chunk_length:"Maximum chunk length",Chunk_overlap:"Chunk overlap",Text_Pre_processing_Rules:"Text Pre-processing Rules",remove_extra_spaces:"Replace consecutive spaces, newlines and tabs",remove_urls_emails:"Delete all URLs and email addresses",Preview_Chunk:"Preview Chunk",indexing_technique:"Indexing technique",Economical:"Economical",EconomicalDescription:"Using 10 keywords per chunk for retrieval, no tokens are consumed at the expense of reduced retrieval accuracy.",HighQuality:"High Quality",HighQualityDescription:"Calling the embedding model to process documents for more precise retrieval helps LLM generate high-quality answers.",RetrievalSetting:"Retrieval Setting",RetrievalIntro:"Learn more about retrieval method, you can change this at any time in the Knowledge settings.",InvertedIndex:"Inverted Index",InvertedIndexDescription:"Inverted Index is a structure used for efficient retrieval. Organized by terms, each term points to documents or web pages containing it.",Save_Process:"Save & Process ",DelimiterTip:"Delimiters are characters used to separate text. \\n\\n and \\n are commonly used to separate paragraphs and lines. Use commas to concatenate delimiters (\n\n,\n). When a paragraph exceeds the maximum block length, it will be split into lines. You can also use custom special delimiters (such as ***)",DelimiterPlaceholder:"\\n\\n is used for paragraph separation; \\n is used for line separation",ChunkOverlapTip:"Setting the overlap length between segments can preserve the semantic relationship between segments and improve the recall effect. It is recommended to set it to 10%-25% of the maximum segment length.",IndexingTechnique:{HighQualityTip:"After embedding in high quality mode, you cannot switch back to economy mode."},Retrieval:{RerankModel:"Rerank Model",EmbeddingModel:"Embedding Model",RerankModelTip:"The re-ranking model will re-rank the candidate document list according to the semantic match between the user question, thereby improving the semantic ranking results.",ScoreThresholdTip:"Used to set the similarity threshold for text fragment filtering",TopKTip:"Used to filter text segments that are most similar to user questions. The system will also dynamically adjust the number of segments based on the size of the selected model context window.",IndexSearch_Semantic:"Semantic Search",IndexSearch_Semantic_Desc:"By generating a query embedding and querying for the text segment that is most similar to its vector representation",IndexSearch_FullText:"Full Text Search",IndexSearch_FullText_Desc:"Indexes all the terms in a document, allowing users to search for arbitrary terms and return text snippets containing those terms",IndexSearch_Hybrid:"Hybrid Search",IndexSearch_Hybrid_Desc:"Performs full-text search and vector search simultaneously, and applies a re-ranking step to select the best result that matches the user's question from the two types of query results. Users can choose to set weights or configure the re-ranking model",Score_threshold:"Score Threshold"}},Role:{RoleList:"Role List",RoleListDescription:"Here you can view and manage your role prompt",CreateRole:"Create Role",CreateRoleTitle:"Welcome to Role Generator",CreateRoleDescription:"AI-powered role prompts, customizable templates.",YourRole:"Your Role",YourRoleDescription:"I want to create a  novel...",GeneratedRolePrompt:"Generated Role Prompt",EditBlock:"Edit Block",ModelSelection:"Model Selection",ModelParameters:"Model Parameters",Temperature:"Temperature",TopP:"Top P",RoleName:"Role Name",RoleNamePlaceholder:"Enter role name",RoleNameRequired:"Role name is required",SaveRole:"Save Role",RoleDescription:"Role Description",RoleDescriptionPlaceholder:"Common prompts for operations management",Prompt:"Prompt",CreateCommand:"Create Command",DeleteRole:"Delete Role",DeleteRoleContent:"Are you sure you want to delete this role?",SaveQuickCommand:"Save Quick Command",CommandName:"Command Name",CommandDescription:"Command Description",Tag:"Tag",TagPlaceholder:"Enter tag",CommandNamePlaceholder:"Enter command name",CommandDescriptionPlaceholder:"Enter command description",DeleteCommand:"Delete Command",DeleteCommandContent:"Are you sure you want to delete this command?",CommandTagPlaceholder:"All tag"},Message:{DeleteSuccess:"Delete Success",SaveSuccess:"Save Success",UploadSuccess:"Upload Success",UploadImageType:"Only JPG/PNG format images can be uploaded!",UploadImageSize:"The image size cannot exceed 2MB!",UploadImageTypeZh:"只能上传 JPG/PNG 格式的图片!",UploadImageIcon:"Please upload an icon"},Tool:{ToolList:"Tool list",CreateTool:"Create Tool",AuthorizationType:"Authorization Type",AuthorizationPrefix:"Authorization Prefix",AuthorizationKey:"Authorization Key",AuthorizationKeyDescription:"HTTP header name, if you don't know what it is, you can leave it as Authorization or set it to a custom value"},Agent:{Agent:"Agent",All:"All",ChatbotAgent:"Chatbot Agent",SmartAgent:"Smart Agent",WorkflowAgent:"Workflow Agent",Agents:"Agents",ChatbotAgentDescription:"LLM-based chatbot with simple setup",SmartAgentDescription:"Intelligent agent with reasoning and autonomous tool use",WorkflowAgentDescription:"Workflow for complex multi-turn dialogues with memory",CreateFromBlank:"Create from Blank",CreateFromTemplate:"Create from Template",ImportFromFile:"Import from File",CreateFromBlankDescription:"Start with a blank canvas and build your agent from scratch",CreateFromTemplateDescription:"Choose from our pre-built templates to get started quickly",ImportFromFileDescription:"Import your existing DSL file to create a new agent",ChooseAgentType:"Choose Agent Type",AgentNameIcon:"Agent Name & Icon",AgentNameIconPlaceholder:"Give your agent a name",Tags:"Tags",Description:"Description (Optional)",DescriptionPlaceholder:"Enter the description of the agent",CreateApp:"Create App",Orchestrate:"Orchestrate",APIAccess:"API Access",LogsAnnotations:"Logs & Annotations",Monitoring:"Monitoring",AgentSettings:"Agent Settings",Instructions:"Instructions",InstructionsPlaceholder:"Enter your instructions here...",Variables:"Variables",VariablesPlaceholder:'Variables allow users to introduce prompt words or opening remarks when filling out forms. You can try entering "{{input}}" in the prompt words.',Knowledge:"Knowledge",Tools:"Tools",VariablesType:{Type:"Variable Type",Text:"Text",Paragraph:"Paragraph",Select:"Select",Number:"Number",EditVariable:"Edit Variable",VariableName:"Variable Name",ShowName:"Show Name",MaxLength:"Max Length",Options:"Options",Required:"Required",EnterVariableName:"Enter variable name",EnterShowName:"Enter show name",EnterMaxLength:"Enter max length",AddOption:"Add Option",EnterOption:"Select option",InvalidVariableName:"Invalid variable name",InvalidVariableShowName:"showName required"},SelectKnowledge:"Select reference knowledge base",DebugPreview:"Debug & Preview",Workflow:"Workflow",Custom:"Custom",Builtin:"Builtin",SelectTool:"Select reference Tool base",PublishSuccess:"Publish Success"},AgentPlayground:{deleteTitle:"Delete conversation?",deleteContent:"Are you sure you want to delete this conversation?"}};ng_zorro_antd_i18n.xC,ng_zorro_antd_i18n.xC.global;(0,angular.$)(documentation_namespaceObject);const _storybook_preview={globalTypes:{locale:{description:"Internationalization locale",toolbar:{icon:"globe",items:[{value:"en_US",right:"🇺🇸",title:"English"},{value:"zh_CN",right:"🇨🇳",title:"中文"}],showName:!0}}},initialGlobals:{locale:"en_US"},parameters:{controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}},decorators:[(0,dist.applicationConfig)({providers:[(0,animations.provideAnimations)(),(0,module_BHk9jdTn.$R)(),(0,ng_zorro_antd_i18n.Mo)(en_US)]})]}},"./node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./src/styles.scss?ngGlobalStyle":()=>{},"./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./configure.storybook/Configure.mdx":["./stories/configure.storybook/Configure.mdx",94,187]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./angularEcharts/line.stories":["./stories/angularEcharts/line.stories.ts",636,462],"./angularEcharts/line.stories.ts":["./stories/angularEcharts/line.stories.ts",636,462],"./animations/collapse/collapse-animation.stories":["./stories/animations/collapse/collapse-animation.stories.ts",252,59],"./animations/collapse/collapse-animation.stories.ts":["./stories/animations/collapse/collapse-animation.stories.ts",252,59],"./animations/fade.stories":["./stories/animations/fade.stories.ts",699,793,741],"./animations/fade.stories.ts":["./stories/animations/fade.stories.ts",699,793,741],"./button/button.stories":["./stories/button/button.stories.ts",699,793,252,68,332,547,395,127,754,235,16],"./button/button.stories.ts":["./stories/button/button.stories.ts",699,793,252,68,332,547,395,127,754,235,16],"./components/autocomplete.stories":["./stories/components/autocomplete.stories.ts",699,793,252,68,332,547,395,127,754,235,744],"./components/autocomplete.stories.ts":["./stories/components/autocomplete.stories.ts",699,793,252,68,332,547,395,127,754,235,744],"./components/form-operator-compact.stories":["./stories/components/form-operator-compact.stories.ts",699,793,252,68,332,547,395,127,754,235,211],"./components/form-operator-compact.stories.ts":["./stories/components/form-operator-compact.stories.ts",699,793,252,68,332,547,395,127,754,235,211],"./components/icon-render.stories":["./stories/components/icon-render.stories.ts",699,793,252,68,332,547,395,127,754,235,72],"./components/icon-render.stories.ts":["./stories/components/icon-render.stories.ts",699,793,252,68,332,547,395,127,754,235,72],"./components/icon-select.stories":["./stories/components/icon-select.stories.ts",699,793,252,68,332,547,395,127,754,235,496],"./components/icon-select.stories.ts":["./stories/components/icon-select.stories.ts",699,793,252,68,332,547,395,127,754,235,496],"./components/search-box.stories":["./stories/components/search-box.stories.ts",699,793,252,68,332,547,395,127,754,235,832],"./components/search-box.stories.ts":["./stories/components/search-box.stories.ts",699,793,252,68,332,547,395,127,754,235,832],"./components/search-tag.stories":["./stories/components/search-tag.stories.ts",699,793,252,68,332,547,395,127,754,235,219],"./components/search-tag.stories.ts":["./stories/components/search-tag.stories.ts",699,793,252,68,332,547,395,127,754,235,219],"./directives/ball-parabola.directive.stories":["./stories/directives/ball-parabola.directive.stories.ts",652],"./directives/ball-parabola.directive.stories.ts":["./stories/directives/ball-parabola.directive.stories.ts",652],"./directives/intersectionObserver.directive.stories":["./stories/directives/intersectionObserver.directive.stories.ts",68,183,999],"./directives/intersectionObserver.directive.stories.ts":["./stories/directives/intersectionObserver.directive.stories.ts",68,183,999],"./directives/mutationObserver.directive.stories":["./stories/directives/mutationObserver.directive.stories.ts",699,793,252,68,332,395,183,433],"./directives/mutationObserver.directive.stories.ts":["./stories/directives/mutationObserver.directive.stories.ts",699,793,252,68,332,395,183,433],"./directives/polling.directive.stories":["./stories/directives/polling.directive.stories.ts",699,793,252,68,183,43],"./directives/polling.directive.stories.ts":["./stories/directives/polling.directive.stories.ts",699,793,252,68,183,43],"./directives/scroll.directive.stories":["./stories/directives/scroll.directive.stories.ts",68,183,601],"./directives/scroll.directive.stories.ts":["./stories/directives/scroll.directive.stories.ts",68,183,601],"./directives/trace-highlight.stories":["./stories/directives/trace-highlight.stories.ts",699,793,252,68,332,547,395,127,754,235,183,814],"./directives/trace-highlight.stories.ts":["./stories/directives/trace-highlight.stories.ts",699,793,252,68,332,547,395,127,754,235,183,814],"./directives/water-mark.directive.stories":["./stories/directives/water-mark.directive.stories.ts",68,183,15],"./directives/water-mark.directive.stories.ts":["./stories/directives/water-mark.directive.stories.ts",68,183,15],"./header/header.stories":["./stories/header/header.stories.ts",699,793,252,68,332,547,395,127,754,235,370],"./header/header.stories.ts":["./stories/header/header.stories.ts",699,793,252,68,332,547,395,127,754,235,370],"./pipes/file-size.stories":["./stories/pipes/file-size.stories.ts",699,793,252,332,395,127,705],"./pipes/file-size.stories.ts":["./stories/pipes/file-size.stories.ts",699,793,252,332,395,127,705],"./services/countdown.service.stories":["./stories/services/countdown.service.stories.ts",699,793,332,547,777,583],"./services/countdown.service.stories.ts":["./stories/services/countdown.service.stories.ts",699,793,332,547,777,583],"./services/file.service.stories":["./stories/services/file.service.stories.ts",699,793,332,547,777,752],"./services/file.service.stories.ts":["./stories/services/file.service.stories.ts",699,793,332,547,777,752],"./utils/list-checked.stories":["./stories/utils/list-checked.stories.ts",699,252,332,743],"./utils/list-checked.stories.ts":["./stories/utils/list-checked.stories.ts",699,252,332,743],"./utils/validators.stories":["./stories/utils/validators.stories.ts",699,793,252,942],"./utils/validators.stories.ts":["./stories/utils/validators.stories.ts",699,793,252,942]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("storybook/internal/channels"),csf=__webpack_require__("./node_modules/@storybook/core/dist/csf/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const importers=[function(){var _ref=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:stories(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(10);return __webpack_require__("./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:stories(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(10);return __webpack_require__("./stories lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/stories(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.A)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield(x=()=>importers[i](path),x());if(moduleExports)return moduleExports}var x}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb((function importFn(_x3){return _importFn.apply(this,arguments)}),(()=>{const previewAnnotations=[__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/preview.mjs"),__webpack_require__("./.storybook/preview.ts")],userPreview=previewAnnotations[previewAnnotations.length-1]?.default;return(0,csf.bU)(userPreview)?userPreview.composed:(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)(previewAnnotations)}));window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"storybook/internal/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"storybook/internal/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"storybook/internal/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"storybook/internal/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__},"storybook/internal/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[0],(()=>(__webpack_exec__("./node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/ng-zorro-antd/ng-zorro-antd.min.css?ngGlobalStyle"),__webpack_exec__("./src/styles.scss?ngGlobalStyle"))));__webpack_require__.O()}]);