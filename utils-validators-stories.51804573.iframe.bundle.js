(self.webpackChunkcomponents_angular=self.webpackChunkcomponents_angular||[]).push([[942],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./src/utils/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S$:()=>ECmpTypeOperatorMap,O0:()=>EOperator,WU:()=>MyValidators,FU:()=>certificateCodeValidator,r$:()=>decimalNumberValidator,nh:()=>isAllChecked,fZ:()=>isHalfChecked,Bu:()=>landlineAndPhoneValidator,rm:()=>noEmptyValidator,VD:()=>nonNegativeIntegerValidator,_o:()=>onlyChineseValidator,II:()=>operators,U1:()=>phoneNumberValidator,gG:()=>positiveIntegerValidator,gZ:()=>uuidv4});var fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");const REGEXP={phoneNumber:/^1[3-9]\d{9}$/,landlineAndPhone:/^((0\d{2,3}-\d{7,8})|(1[3-9]\d{9}))$/,nonNegativeInteger:/^\d+$/,positiveInteger:/^[1-9]\d*$/,decimalNumber:/^[0-9]+(\.[0-9]+)?$/,empty:/^\s+$/,onlyChinese:/^[\u4e00-\u9fa5_a-zA-Z]+$/,certificateCode:/(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)/,mailbox:/^([a-zA-Z0-9_.-]+)@([a-zA-Z0-9_.-]+).([a-zA-Z.]{2,6})$/};function noEmptyValidator(){return control=>{const value=control.value,errorTip={noEmpty:{value}};return!value||REGEXP.empty.test(value)?errorTip:null}}function nonNegativeIntegerValidator(){return control=>{const value=control.value,errorTip={nonNegativeInteger:{value}};return value&&REGEXP.nonNegativeInteger.test(value)?null:errorTip}}function onlyChineseValidator(){return control=>{const value=control.value,errorTip={onlyChinese:{value}};return value&&!REGEXP.onlyChinese.test(value)?errorTip:null}}function phoneNumberValidator(){return control=>{const value=control.value,errorTip={phoneNumber:{value}};return value&&!REGEXP.phoneNumber.test(value)?errorTip:null}}function landlineAndPhoneValidator(){return control=>{const value=control.value,errorTip={landlineAndPhone:{value}};return value&&!REGEXP.landlineAndPhone.test(value)?errorTip:null}}function certificateCodeValidator(){return control=>{const value=control.value,errorTip={certificateCode:{value}};return value&&!REGEXP.certificateCode.test(value)?errorTip:null}}function positiveIntegerValidator(){return control=>{const value=control.value,errorTip={positiveInteger:{value}};return value&&REGEXP.positiveInteger.test(value)?null:errorTip}}function decimalNumberValidator(){return control=>{const value=control.value,errorTip={decimalNumber:{value}};return value&&REGEXP.decimalNumber.test(value)?null:errorTip}}class MyValidators extends fesm2022_forms.k0{static minLength(minLength){return control=>null===fesm2022_forms.k0.minLength(minLength)(control)?null:{minlength:{"zh-cn":`最小长度为 ${minLength}`,en:`MinLength is ${minLength}`}}}static maxLength(maxLength){return control=>null===fesm2022_forms.k0.maxLength(maxLength)(control)?null:{maxlength:{"zh-cn":`最大长度为 ${maxLength}`,en:`MaxLength is ${maxLength}`}}}static myName(control){const value=control.value;return/^[ ]*$/g.test(value)?{name:{"zh-cn":"姓名不可为空",en:"usernName Cannot be empty"}}:null}static mobile(control){const value=control.value;return function isEmptyInputValue(value){return null==value||0===value.length}(value)||function isMobile(value){return"string"==typeof value&&/^1(3[0-9]|4[01456879]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[0-35-9])\d{8}$/.test(value)}(value)?null:{phoneNumber:{"zh-cn":"手机号码格式不正确",en:"Mobile phone number is not valid"}}}static socialUnifiedCode(control){const value=control.value;return/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/.test(value)?null:{name:{"zh-cn":"社会信用代码格式错误",en:"invalid socialUnifiedCode"}}}static validateIdCardNo(idCard){let isValidCard=!1;if(/^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/.test(idCard)&&18===idCard.length){const idCardWi=new Array(7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2),idCardY=new Array(1,0,10,9,8,7,6,5,4,3,2);let idCardWiSum=0;for(let i=0;i<17;i++)idCardWiSum+=+idCard.substring(i,i+1)*idCardWi[i];const idCardMod=idCardWiSum%11,idCardLast=idCard.substring(17);2==+idCardMod?"X"!==idCardLast&&"x"!==idCardLast||(isValidCard=!0):+idCardLast===idCardY[idCardMod]&&(isValidCard=!0)}return isValidCard?null:{name:{"zh-cn":"您输入的身份证号格式有误",en:"invalid idCardNo"}}}static mailboxValidator(){return control=>{const value=control.value,errorTip={mailbox:{value}};return value&&!REGEXP.mailbox.test(value)?errorTip:null}}}function uuidv4(){var d=(new Date).getTime(),d2="undefined"!=typeof performance&&performance.now&&1e3*performance.now()||0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){var r=16*Math.random();return d>0?(r=(d+r)%16|0,d=Math.floor(d/16)):(r=(d2+r)%16|0,d2=Math.floor(d2/16)),("x"===c?r:3&r|8).toString(16)}))}var EOperator,ECmpTypeOperatorMap;!function(EOperator){EOperator[EOperator.GreaterThan=0]="GreaterThan",EOperator[EOperator.LessThan=1]="LessThan",EOperator[EOperator.EqualTo=2]="EqualTo",EOperator[EOperator.NotEqualTo=3]="NotEqualTo",EOperator[EOperator.Between=4]="Between",EOperator[EOperator.Contains=5]="Contains",EOperator[EOperator.NotContains=6]="NotContains"}(EOperator||(EOperator={})),function(ECmpTypeOperatorMap){ECmpTypeOperatorMap[ECmpTypeOperatorMap.number=1]="number",ECmpTypeOperatorMap[ECmpTypeOperatorMap.char=2]="char",ECmpTypeOperatorMap[ECmpTypeOperatorMap.select_single=3]="select_single",ECmpTypeOperatorMap[ECmpTypeOperatorMap.select_multiple=4]="select_multiple",ECmpTypeOperatorMap[ECmpTypeOperatorMap.select_cascader=5]="select_cascader",ECmpTypeOperatorMap[ECmpTypeOperatorMap.date=6]="date"}(ECmpTypeOperatorMap||(ECmpTypeOperatorMap={}));const operators=[{value:EOperator.GreaterThan,label:"大于",dataTypes:[ECmpTypeOperatorMap.number,ECmpTypeOperatorMap.date],isRange:!1},{value:EOperator.LessThan,label:"小于",dataTypes:[ECmpTypeOperatorMap.number,ECmpTypeOperatorMap.date],isRange:!1},{value:EOperator.EqualTo,label:"等于",dataTypes:[ECmpTypeOperatorMap.number,ECmpTypeOperatorMap.char,ECmpTypeOperatorMap.select_single,ECmpTypeOperatorMap.select_cascader],isRange:!1},{value:EOperator.NotEqualTo,label:"不等于",dataTypes:[ECmpTypeOperatorMap.number,ECmpTypeOperatorMap.char,ECmpTypeOperatorMap.select_single,ECmpTypeOperatorMap.select_cascader],isRange:!1},{value:EOperator.Between,label:"范围",dataTypes:[ECmpTypeOperatorMap.number,ECmpTypeOperatorMap.date],isRange:!0},{value:EOperator.Contains,label:"包含",dataTypes:[ECmpTypeOperatorMap.char,ECmpTypeOperatorMap.select_multiple],isRange:!1},{value:EOperator.NotContains,label:"不包含",dataTypes:[ECmpTypeOperatorMap.char,ECmpTypeOperatorMap.select_multiple],isRange:!1}];function getCheckedCount(list,checkedSelector){return list.reduce(((acc,cur)=>function selectBy(item,selector){return"function"==typeof selector?selector(item):Reflect.get(item,selector)}(cur,checkedSelector)?acc+1:acc),0)}function _isAllChecked(checkedCount,totalCount){return!(!checkedCount||!totalCount)&&totalCount===checkedCount}function isAllChecked(list,checkedSelector){return _isAllChecked(getCheckedCount(list,checkedSelector),list.length)}function _isHalfChecked(checkedCount,totalCount){return!(!checkedCount||!totalCount)&&totalCount!==checkedCount}function isHalfChecked(list,checkedSelector){return _isHalfChecked(getCheckedCount(list,checkedSelector),list.length)}},"./stories/utils/validators.component.ts.scss?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAuZm9ybS1ncm91cHsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjIwcHgsIDFmcikpOwogICAgICB3aWR0aDogODB2dzsKICAgICAgZ2FwOiAxMnB4OwogICAgfQogICAgLmZvcm0taXRlbSB7CiAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgICB9CiAgICBsYWJlbCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICB9CiAgICBpbnB1dCB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBwYWRkaW5nOiA4cHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOWQ5ZDk7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIH0KICAgIC5lcnJvciB7CiAgICAgIGNvbG9yOiAjZmY0ZDRmOwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIG1hcmdpbi10b3A6IDRweDsKICAgIH0KICA%3D!./stories/utils/validators.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".form-group {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  width: 80vw;\n  gap: 12px;\n}\n\n.form-item {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #d9d9d9;\n  border-radius: 4px;\n}\n\n.error {\n  color: #ff4d4f;\n  font-size: 12px;\n  margin-top: 4px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./stories/utils/validators.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllValidators:()=>AllValidators,__namedExportsOrder:()=>__namedExportsOrder,default:()=>validators_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),validators_component=__webpack_require__("./stories/utils/validators.component.ts.scss?ngResource!=!./node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=CiAgICAuZm9ybS1ncm91cHsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMjIwcHgsIDFmcikpOwogICAgICB3aWR0aDogODB2dzsKICAgICAgZ2FwOiAxMnB4OwogICAgfQogICAgLmZvcm0taXRlbSB7CiAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgICB9CiAgICBsYWJlbCB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICB9CiAgICBpbnB1dCB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBwYWRkaW5nOiA4cHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOWQ5ZDk7CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIH0KICAgIC5lcnJvciB7CiAgICAgIGNvbG9yOiAjZmY0ZDRmOwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIG1hcmdpbi10b3A6IDRweDsKICAgIH0KICA%3D!./stories/utils/validators.component.ts"),validators_component_default=__webpack_require__.n(validators_component),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),common_module_CBrzkrmd=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs"),utils=__webpack_require__("./src/utils/index.ts"),ng_zorro_antd_button=__webpack_require__("./node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-button.mjs");let ValidatorsDemoComponent=class ValidatorsDemoComponent{fb;validateForm;constructor(fb){this.fb=fb,this.validateForm=this.fb.group({noEmpty:["",[(0,utils.rm)()]],nonNegativeInteger:["",[(0,utils.VD)()]],positiveInteger:["",[(0,utils.gG)()]],decimalNumber:["",[(0,utils.r$)()]],chinese:["",[(0,utils._o)()]],phone:["",[(0,utils.U1)()]],landlineAndPhone:["",[(0,utils.Bu)()]],certificateCode:["",[(0,utils.FU)()]],myName:["",[utils.WU.myName]],mobile:["",[utils.WU.mobile]],socialUnifiedCode:["",[utils.WU.socialUnifiedCode]],minLength:["",[utils.WU.minLength(3)]],maxLength:["",[utils.WU.maxLength(10)]],idCardNo:["",[control=>utils.WU.validateIdCardNo(control.value)]]})}submitForm(){this.validateForm.valid&&console.log("表单数据：",this.validateForm.value)}static ctorParameters=()=>[{type:fesm2022_forms.ok}]};ValidatorsDemoComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-validators-demo",template:'\n    <div class="validators-demo">\n      <h2>表单验证器演示</h2>\n      \n      <form class="form-group" [formGroup]="validateForm" (ngSubmit)="submitForm()">\n        <div class="form-item">\n          <label>非空验证：</label>\n          <input formControlName="noEmpty" placeholder="输入内容不能为空">\n          <div class="error" *ngIf="validateForm.get(\'noEmpty\')?.errors?.[\'noEmpty\']">\n            输入内容不能为空\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>非负整数：</label>\n          <input formControlName="nonNegativeInteger" placeholder="请输入非负整数">\n          <div class="error" *ngIf="validateForm.get(\'nonNegativeInteger\')?.errors?.[\'nonNegativeInteger\']">\n            请输入有效的非负整数\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>正整数：</label>\n          <input formControlName="positiveInteger" placeholder="请输入正整数">\n          <div class="error" *ngIf="validateForm.get(\'positiveInteger\')?.errors?.[\'positiveInteger\']">\n            请输入有效的正整数\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>小数：</label>\n          <input formControlName="decimalNumber" placeholder="请输入小数">\n          <div class="error" *ngIf="validateForm.get(\'decimalNumber\')?.errors?.[\'decimalNumber\']">\n            请输入有效的小数\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>中文：</label>\n          <input formControlName="chinese" placeholder="请输入中文">\n          <div class="error" *ngIf="validateForm.get(\'chinese\')?.errors?.[\'onlyChinese\']">\n            请输入有效的中文\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>手机号：</label>\n          <input formControlName="phone" placeholder="请输入手机号">\n          <div class="error" *ngIf="validateForm.get(\'phone\')?.errors?.[\'phoneNumber\']">\n            请输入有效的手机号\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>座机或手机：</label>\n          <input formControlName="landlineAndPhone" placeholder="请输入座机或手机号">\n          <div class="error" *ngIf="validateForm.get(\'landlineAndPhone\')?.errors?.[\'landlineAndPhone\']">\n            请输入有效的座机或手机号\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>身份证号：</label>\n          <input formControlName="certificateCode" placeholder="请输入身份证号">\n          <div class="error" *ngIf="validateForm.get(\'certificateCode\')?.errors?.[\'certificateCode\']">\n            请输入有效的身份证号\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>姓名：</label>\n          <input formControlName="myName" placeholder="请输入姓名">\n          <div class="error" *ngIf="validateForm.get(\'myName\')?.errors?.[\'name\']">\n            {{ validateForm.get(\'myName\')?.errors?.[\'name\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>自定义手机号：</label>\n          <input formControlName="mobile" placeholder="请输入手机号">\n          <div class="error" *ngIf="validateForm.get(\'mobile\')?.errors?.[\'phoneNumber\']">\n            {{ validateForm.get(\'mobile\')?.errors?.[\'phoneNumber\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>社会信用代码：</label>\n          <input formControlName="socialUnifiedCode" placeholder="请输入社会信用代码">\n          <div class="error" *ngIf="validateForm.get(\'socialUnifiedCode\')?.errors?.[\'name\']">\n            {{ validateForm.get(\'socialUnifiedCode\')?.errors?.[\'name\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>最小长度(3)：</label>\n          <input formControlName="minLength" placeholder="请输入至少3个字符">\n          <div class="error" *ngIf="validateForm.get(\'minLength\')?.errors?.[\'minlength\']">\n            {{ validateForm.get(\'minLength\')?.errors?.[\'minlength\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>最大长度(10)：</label>\n          <input formControlName="maxLength" placeholder="请输入最多10个字符">\n          <div class="error" *ngIf="validateForm.get(\'maxLength\')?.errors?.[\'maxlength\']">\n            {{ validateForm.get(\'maxLength\')?.errors?.[\'maxlength\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n        <div class="form-item">\n          <label>身份证号严格验证：</label>\n          <input formControlName="idCardNo" placeholder="请输入身份证号">\n          <div class="error" *ngIf="validateForm.get(\'idCardNo\')?.errors?.[\'name\']">\n            {{ validateForm.get(\'idCardNo\')?.errors?.[\'name\']?.[\'zh-cn\'] }}\n          </div>\n        </div>\n\n      </form>\n      <button nz-button nzType="primary" type="submit" [disabled]="!validateForm.valid">提交</button>\n    </div>\n  ',standalone:!0,imports:[common_module_CBrzkrmd.MD,fesm2022_forms.X1,ng_zorro_antd_button.Zw],styles:[validators_component_default()]})],ValidatorsDemoComponent);const validators_stories={title:"Utils/Validators",component:ValidatorsDemoComponent,parameters:{layout:"centered"}},AllValidators={render:args=>({props:args,template:"\n      <app-validators-demo></app-validators-demo>\n    "})},__namedExportsOrder=["AllValidators"];AllValidators.parameters={...AllValidators.parameters,docs:{...AllValidators.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    props: args,\n    template: `\n      <app-validators-demo></app-validators-demo>\n    `\n  })\n}",...AllValidators.parameters?.docs?.source},description:{story:"验证器示例：展示所有可用的表单验证器\n- 包含多种验证类型：非空、数字、中文、手机号等\n- 实时显示验证错误信息\n- 支持自定义验证规则",...AllValidators.parameters?.docs?.description}}}}}]);